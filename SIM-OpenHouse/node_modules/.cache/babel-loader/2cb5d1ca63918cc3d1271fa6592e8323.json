{"ast":null,"code":"import _slicedToArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{IonButton,IonButtons,IonCol,IonContent,IonGrid,IonHeader,IonPage,IonRow,IonSegment,IonSegmentButton,IonToolbar}from'@ionic/react';import React,{useEffect,useState}from'react';import{withRouter}from'react-router-dom';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faFilter}from'@fortawesome/free-solid-svg-icons';import'../css/Global.css';import'../css/ProgrammeTalks.css';import TopNav from'../components/TopNav';import ProgTalkSchedule from'../components/ProgTalkSchedule';import ProgTalkLiveTalks from'../components/ProgTalkLiveTalks';import ProgTalkPastRec from'../components/ProgTalkPastRec';import{db}from'../firebase';var ProgrammeTalks=function ProgrammeTalks(){var _useState=useState(\"schedule\"),_useState2=_slicedToArray(_useState,2),tab=_useState2[0],setTab=_useState2[1];var _useState3=useState(\"day1\"),_useState4=_slicedToArray(_useState3,2),dayNum=_useState4[0],setDayNum=_useState4[1];// useEffect (() => {\n//     handleSchedule();\n// }, []);\nvar handleDayOne=function handleDayOne(){setDayNum(\"day1\");};var handleDayTwo=function handleDayTwo(){setDayNum(\"day2\");};var handleSchedule=function handleSchedule(){setTab(\"schedule\");};var handleLiveTalks=function handleLiveTalks(){setTab(\"liveTalks\");};var handlePastRec=function handlePastRec(){setTab(\"pastRecordings\");};var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),openhouseDates=_useState6[0],setOpenhouseDates=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),programmeTalk=_useState8[0],setProgrammeTalk=_useState8[1];var liveTalk=programmeTalk.filter(function(talk){return talk.isLive==true;});var recordedTalk=programmeTalk.filter(function(talk){return talk.hasRecording==true;});useEffect(function(){var dates=[];db.collection(\"Openhouse\").get().then(function(snapshot){snapshot.forEach(function(doc){var data=doc.get('day');data.forEach(function(day){dates.push(day.date);});});setOpenhouseDates(dates);}).catch(function(error){return console.log(error);});db.collection(\"ProgrammeTalks\").get().then(function(snapshot){var programmeTalk=[];snapshot.forEach(function(doc){var data=doc.data();programmeTalk.push(data);});setProgrammeTalk(programmeTalk);}).catch(function(error){return console.log(error);});},[]);return/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(TopNav,{title:\"Programme Talks\",route:\"/u/openHouseMain\",backarrow:true,hamburger:true}),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true,className:\"progTalkIonContent\"},/*#__PURE__*/React.createElement(IonGrid,{id:\"progTalksGrid\"},/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonHeader,{className:\"segmentHeader\"},/*#__PURE__*/React.createElement(IonToolbar,{className:\"segmentHeader\"},/*#__PURE__*/React.createElement(IonSegment,{scrollable:true,value:tab,className:\"segmentHeader\"},/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"schedule\",className:\"segmentBtn ion-text-wrap\",id:\"progTalkSchedule\",onClick:handleSchedule},\"Schedule\"),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"liveTalks\",className:\"segmentBtn ion-text-wrap\",id:\"progTalkLiveTalk\",onClick:handleLiveTalks},\"Live Talks\"),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"pastRecordings\",className:\"segmentBtn ion-text-wrap\",id:\"progTalkPastRec\",onClick:handlePastRec},\"Past Recordings\")))))),tab===\"schedule\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IonGrid,{className:\"progTalk-IonRowCol progTalkIonGrid\"},/*#__PURE__*/React.createElement(IonRow,{className:\"progTalk-IonRowCol\"},/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonSegment,{scrollable:true,value:dayNum,onIonChange:function onIonChange(e){return console.log(\"\".concat(e.detail.value));}},/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day1\",onClick:function onClick(){return handleDayOne();},className:\"progTalk-DayTab\"},\"Day 1: 21 Nov 2020\"),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day2\",onClick:function onClick(){return handleDayTwo();},className:\"progTalk-DayTab\"},\"Day 2: 22 Nov 2020\")))),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonHeader,{className:\"filterHeader\"},/*#__PURE__*/React.createElement(IonToolbar,{className:\"filterHeaderToolBar\"},/*#__PURE__*/React.createElement(IonButtons,{slot:\"end\",id:\"filterIcon\"},/*#__PURE__*/React.createElement(IonButton,null,/*#__PURE__*/React.createElement(FontAwesomeIcon,{size:\"lg\",icon:faFilter}))))))),/*#__PURE__*/React.createElement(ProgTalkSchedule,{day1:dayNum,day2:dayNum,programmeTalk:programmeTalk,openhouseDates:openhouseDates})):\"\",tab===\"liveTalks\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IonGrid,{className:\"progTalk-IonRowCol progTalkIonGrid\"},/*#__PURE__*/React.createElement(IonRow,{className:\"progTalk-IonRowCol\"},/*#__PURE__*/React.createElement(IonCol,{className:\"progTalk-IonRowCol\"},/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonSegment,{scrollable:true,value:dayNum,onIonChange:function onIonChange(e){return console.log(\"\".concat(e.detail.value));}},/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day1\",onClick:function onClick(){return handleDayOne();},className:\"progTalk-DayTab\"},\"Day 1: 21 Nov 2020\"),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day2\",onClick:function onClick(){return handleDayTwo();},className:\"progTalk-DayTab\"},\"Day 2: 22 Nov 2020\")))))),/*#__PURE__*/React.createElement(ProgTalkLiveTalks,{day1:dayNum,day2:dayNum,liveTalk:liveTalk,openhouseDates:openhouseDates})):\"\",tab===\"pastRecordings\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IonGrid,{className:\"progTalk-IonRowCol progTalkIonGrid\"},/*#__PURE__*/React.createElement(IonRow,{className:\"progTalk-IonRowCol\"},/*#__PURE__*/React.createElement(IonCol,{className:\"progTalk-IonRowCol\"},/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonSegment,{scrollable:true,value:dayNum,onIonChange:function onIonChange(e){return console.log(\"\".concat(e.detail.value));}},/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day1\",onClick:function onClick(){return handleDayOne();},className:\"progTalk-DayTab\"},\"Day 1: 21 Nov 2020\"),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day2\",onClick:function onClick(){return handleDayTwo();},className:\"progTalk-DayTab\"},\"Day 2: 22 Nov 2020\"))))),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonHeader,{className:\"filterHeader\"},/*#__PURE__*/React.createElement(IonToolbar,{className:\"filterHeaderToolBar\"},/*#__PURE__*/React.createElement(IonButtons,{slot:\"end\",id:\"filterIcon\"},/*#__PURE__*/React.createElement(IonButton,null,/*#__PURE__*/React.createElement(FontAwesomeIcon,{size:\"lg\",icon:faFilter}))))))),/*#__PURE__*/React.createElement(ProgTalkPastRec,{day1:dayNum,day2:dayNum,recordedTalk:recordedTalk,openhouseDates:openhouseDates})):\"\"));};export default withRouter(ProgrammeTalks);","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/ProgrammeTalks.tsx"],"names":["IonButton","IonButtons","IonCol","IonContent","IonGrid","IonHeader","IonPage","IonRow","IonSegment","IonSegmentButton","IonToolbar","React","useEffect","useState","withRouter","FontAwesomeIcon","faFilter","TopNav","ProgTalkSchedule","ProgTalkLiveTalks","ProgTalkPastRec","db","ProgrammeTalks","tab","setTab","dayNum","setDayNum","handleDayOne","handleDayTwo","handleSchedule","handleLiveTalks","handlePastRec","openhouseDates","setOpenhouseDates","programmeTalk","setProgrammeTalk","liveTalk","filter","talk","isLive","recordedTalk","hasRecording","dates","collection","get","then","snapshot","forEach","doc","data","day","push","date","catch","error","console","log","e","detail","value"],"mappings":"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","sourcesContent":["import { IonButton, IonButtons, IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport '../css/Global.css';\r\nimport '../css/ProgrammeTalks.css';\r\n\r\nimport TopNav from '../components/TopNav';\r\nimport ProgTalkSchedule from '../components/ProgTalkSchedule';\r\nimport ProgTalkLiveTalks from '../components/ProgTalkLiveTalks';\r\nimport ProgTalkPastRec from '../components/ProgTalkPastRec';\r\nimport { db } from '../firebase';\r\n\r\nconst ProgrammeTalks: React.FC = () => {\r\n  const [tab, setTab] = useState(\"schedule\");\r\n  const [dayNum, setDayNum] = useState(\"day1\");\r\n\r\n\r\n  // useEffect (() => {\r\n  //     handleSchedule();\r\n  // }, []);\r\n\r\n  const handleDayOne = () => {\r\n    setDayNum(\"day1\");\r\n  };\r\n\r\n  const handleDayTwo = () => {\r\n    setDayNum(\"day2\");\r\n  };\r\n\r\n  const handleSchedule = () => {\r\n    setTab(\"schedule\");\r\n  };\r\n\r\n  const handleLiveTalks = () => {\r\n    setTab(\"liveTalks\");\r\n  };\r\n\r\n  const handlePastRec = () => {\r\n    setTab(\"pastRecordings\");\r\n  };\r\n\r\n  const [openhouseDates, setOpenhouseDates] = useState([])\r\n  const [programmeTalk, setProgrammeTalk] = useState<any[]>([]);\r\n\r\n  const liveTalk = programmeTalk.filter(talk => { return talk.isLive == true })\r\n  const recordedTalk = programmeTalk.filter(talk => { return talk.hasRecording == true })\r\n\r\n  useEffect(() => {\r\n    const dates: any = [];\r\n\r\n    db.collection(\"Openhouse\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.get('day')\r\n          data.forEach((day: any) => { dates.push(day.date) })\r\n        });\r\n        setOpenhouseDates(dates);\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    db.collection(\"ProgrammeTalks\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const programmeTalk: any = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          programmeTalk.push(data);\r\n        });\r\n        setProgrammeTalk(programmeTalk);\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <TopNav title=\"Programme Talks\" route=\"/u/openHouseMain\" backarrow={true} hamburger={true} />\r\n\r\n      <IonContent fullscreen className=\"progTalkIonContent\">\r\n        <IonGrid id=\"progTalksGrid\">\r\n          <IonRow>\r\n            <IonHeader className=\"segmentHeader\">\r\n              <IonToolbar className=\"segmentHeader\">\r\n                <IonSegment scrollable value={tab} className=\"segmentHeader\">\r\n                  <IonSegmentButton value=\"schedule\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkSchedule\" onClick={handleSchedule}>\r\n                    Schedule\r\n                  </IonSegmentButton>\r\n                  <IonSegmentButton value=\"liveTalks\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkLiveTalk\" onClick={handleLiveTalks}>\r\n                    Live Talks\r\n                  </IonSegmentButton>\r\n                  <IonSegmentButton value=\"pastRecordings\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkPastRec\" onClick={handlePastRec}>\r\n                    Past Recordings\r\n                  </IonSegmentButton>\r\n                </IonSegment>\r\n              </IonToolbar>\r\n            </IonHeader>\r\n          </IonRow>\r\n        </IonGrid>\r\n\r\n        {/* Programme Talks Schedule */}\r\n        {tab === \"schedule\" ? (\r\n          <>\r\n            <IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n              <IonRow className=\"progTalk-IonRowCol\">\r\n                  <IonToolbar>\r\n                    <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                      <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n                        Day 1: 21 Nov 2020\r\n                      </IonSegmentButton>\r\n                      <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n                        Day 2: 22 Nov 2020\r\n                      </IonSegmentButton>\r\n                    </IonSegment>\r\n                  </IonToolbar>\r\n              </IonRow>\r\n\r\n              <IonRow>\r\n                <IonHeader className=\"filterHeader\">\r\n                  <IonToolbar className=\"filterHeaderToolBar\">\r\n                    <IonButtons slot=\"end\" id=\"filterIcon\">\r\n                      <IonButton>\r\n                        <FontAwesomeIcon size=\"lg\" icon={faFilter} />\r\n                      </IonButton>\r\n                    </IonButtons>\r\n                  </IonToolbar>\r\n                </IonHeader>\r\n              </IonRow>\r\n            </IonGrid>\r\n\r\n            <ProgTalkSchedule day1={dayNum} day2={dayNum} programmeTalk={programmeTalk} openhouseDates={openhouseDates} />\r\n          </>\r\n        ) : (\r\n            \"\"\r\n          )}\r\n\r\n        {/* Live Talks */}\r\n        {tab === \"liveTalks\" ? (\r\n          <>\r\n            <IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n              <IonRow className=\"progTalk-IonRowCol\">\r\n                <IonCol className=\"progTalk-IonRowCol\">\r\n                  <IonToolbar>\r\n                    <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                      <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n                        Day 1: 21 Nov 2020\r\n                      </IonSegmentButton>\r\n                      <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n                        Day 2: 22 Nov 2020\r\n                      </IonSegmentButton>\r\n                    </IonSegment>\r\n                  </IonToolbar>\r\n                </IonCol>\r\n              </IonRow>\r\n            </IonGrid>\r\n\r\n            <ProgTalkLiveTalks day1={dayNum} day2={dayNum} liveTalk={liveTalk} openhouseDates={openhouseDates} />\r\n          </>\r\n        ) : (\r\n            \"\"\r\n          )}\r\n\r\n        {/* Past Recordings */}\r\n        {tab === \"pastRecordings\" ? (\r\n          <>\r\n            <IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n              <IonRow className=\"progTalk-IonRowCol\">\r\n                <IonCol className=\"progTalk-IonRowCol\">\r\n                  <IonToolbar>\r\n                    <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                      <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n                        Day 1: 21 Nov 2020\r\n                      </IonSegmentButton>\r\n                      <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n                        Day 2: 22 Nov 2020\r\n                      </IonSegmentButton>\r\n                    </IonSegment>\r\n                  </IonToolbar>\r\n                </IonCol>\r\n              </IonRow>\r\n\r\n              <IonRow>\r\n                <IonHeader className=\"filterHeader\">\r\n                  <IonToolbar className=\"filterHeaderToolBar\">\r\n                    <IonButtons slot=\"end\" id=\"filterIcon\">\r\n                      <IonButton>\r\n                        <FontAwesomeIcon size=\"lg\" icon={faFilter} />\r\n                      </IonButton>\r\n                    </IonButtons>\r\n                  </IonToolbar>\r\n                </IonHeader>\r\n              </IonRow>\r\n            </IonGrid>\r\n\r\n            <ProgTalkPastRec day1={dayNum} day2={dayNum} recordedTalk={recordedTalk} openhouseDates={openhouseDates} />\r\n          </>\r\n        ) : (\r\n            \"\"\r\n          )}\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProgrammeTalks);\r\n"]},"metadata":{},"sourceType":"module"}