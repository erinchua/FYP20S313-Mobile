{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\Registration.tsx\";\nimport { IonButton, IonCol, IonContent, IonDatetime, IonGrid, IonHeader, IonInput, IonLabel, IonPage, IonRow, IonSelect, IonSelectOption, IonTitle, IonToolbar, IonButtons, IonIcon, IonItem, IonCheckbox } from '@ionic/react';\nimport React, { useRef, useState } from \"react\";\nimport { useForm } from 'react-hook-form';\nimport { arrowBackOutline } from 'ionicons/icons';\nimport '../css/Global.css';\nimport '../css/Registration.css';\nimport { useHistory } from 'react-router-dom';\n\nconst Registration = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch,\n    formState\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(\"Form submitted\");\n    console.log(data);\n  };\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n  const [checked, setChecked] = useState(false);\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    id: \"toolBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    routerLink: \"/main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"icon-only\",\n    icon: arrowBackOutline,\n    id: \"backBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(IonTitle, {\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Registration\"))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"text\",\n    placeholder: \"First Name\",\n    name: \"firstName\",\n    ref: register({\n      required: true,\n      minLength: 3,\n      pattern: /^[A-Za-z]+$/i\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), errors.firstName && errors.firstName.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 78\n    }\n  }, \"First name is required!\"), errors.firstName && errors.firstName.type === \"minLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 79\n    }\n  }, \"First name has to be more than 2 characters\"), errors.firstName && errors.firstName.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 77\n    }\n  }, \"Please enter a valid First Name\")), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"text\",\n    placeholder: \"Last Name\",\n    name: \"lastName\",\n    ref: register({\n      required: true,\n      minLength: 3,\n      pattern: /^[A-Za-z]+$/i\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), errors.lastName && errors.lastName.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 76\n    }\n  }, \"Last name is required!\"), errors.lastName && errors.lastName.type === \"minLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 77\n    }\n  }, \"Last name has to be more than 2 characters\"), errors.lastName && errors.lastName.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 75\n    }\n  }, \"Please enter a valid Last Name\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    ref: register({\n      required: true,\n      pattern: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), errors.email && errors.email.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 70\n    }\n  }, \"Email is required!\"), errors.email && errors.email.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 69\n    }\n  }, \"Please enter a valid Email\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"tel\",\n    placeholder: \"Contact Number\",\n    name: \"contactNo\",\n    ref: register({\n      required: true,\n      minLength: 8,\n      maxLength: 8,\n      pattern: /(6|8|9)\\d{7}/\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), errors.contactNo && errors.contactNo.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 78\n    }\n  }, \"Contact number is required!\"), errors.contactNo && errors.contactNo.type === \"minLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 79\n    }\n  }, \"Contact number consist of only 8 digits\"), errors.contactNo && errors.contactNo.type === \"maxLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 79\n    }\n  }, \"Contact number consist of only 8 digits\"), errors.contactNo && errors.contactNo.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 77\n    }\n  }, \"Please enter a valid Contact Number\")), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonDatetime, {\n    className: \"inputField\",\n    displayFormat: \"DD-MM-YYYY\",\n    placeholder: \"D.O.B\",\n    name: \"dob\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), errors.dob && errors.dob.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 66\n    }\n  }, \"Date of Birth is required!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    id: \"highestQualificationLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, \"Highest Qualification\"), /*#__PURE__*/React.createElement(IonSelect, {\n    placeholder: \"Please select\",\n    name: \"highestQualification\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"aLevel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"'A' Level\"), /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"oLevel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"'O' Level\"), /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"degree\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Degree\"), /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"Diploma\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Diploma\"))), errors.highestQualification && errors.highestQualification.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 100\n    }\n  }, \"Highest Qualification is required!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"text\",\n    placeholder: \"Nationality\",\n    name: \"nationality\",\n    ref: register({\n      required: true,\n      pattern: /^[A-Za-z]+$/i,\n      minLength: 3\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), errors.nationality && errors.nationality.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 82\n    }\n  }, \"Nationality is required!\"), errors.nationality && errors.nationality.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 81\n    }\n  }, \"Please enter a valid Nationality\"), errors.nationality && errors.nationality.type === \"minLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 83\n    }\n  }, \"Please enter a valid Nationality\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register({\n      required: true,\n      minLength: 8,\n      pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), errors.password && errors.password.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 76\n    }\n  }, \"Password is required!\"), errors.password && errors.password.type === \"minLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 77\n    }\n  }, \"Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"), errors.password && errors.password.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 75\n    }\n  }, \"Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"confirmPassword\",\n    ref: register({\n      required: true,\n      validate: value => value === password.current\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }), errors.confirmPassword && errors.confirmPassword.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 90\n    }\n  }, \"Confirm Password is required!\"), errors.confirmPassword && errors.confirmPassword.type === \"validate\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 90\n    }\n  }, \"Password does not match!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonCheckbox, {\n    name: \"privacyCheckbox\",\n    checked: checked,\n    onIonChange: e => setChecked(e.detail.checked),\n    slot: \"start\",\n    ref: register({\n      validate: value => checked === true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IonLabel, {\n    style: {\n      fontSize: \"80%\",\n      marginLeft: \"10%\"\n    },\n    className: \"ion-text-wrap\",\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"I agree with SIM's Terms of Use and Privary Policy and thereby give my consent to receive marketing communications from SIM.\")), errors.privacyCheckbox && errors.privacyCheckbox.type === \"validate\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 88\n    }\n  }, \"*Terms of Use and Privacy Policy checkbox not checked\")), /*#__PURE__*/React.createElement(IonRow, {\n    class: \"ion-justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    id: \"registrationBtn\",\n    type: \"submit\",\n    onClick: () => history.push('/login'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"REGISTER\"))))));\n};\n\nexport default Registration;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/Registration.tsx"],"names":["IonButton","IonCol","IonContent","IonDatetime","IonGrid","IonHeader","IonInput","IonLabel","IonPage","IonRow","IonSelect","IonSelectOption","IonTitle","IonToolbar","IonButtons","IonIcon","IonItem","IonCheckbox","React","useRef","useState","useForm","arrowBackOutline","useHistory","Registration","register","handleSubmit","errors","watch","formState","onSubmit","data","console","log","password","current","checked","setChecked","history","required","minLength","pattern","firstName","type","lastName","email","maxLength","contactNo","dob","highestQualification","nationality","validate","value","confirmPassword","e","detail","fontSize","marginLeft","privacyCheckbox","push"],"mappings":"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","sourcesContent":["import {\r\n  IonButton,\r\n  IonCard,\r\n  IonCardContent,\r\n  IonCardHeader,\r\n  IonCol,\r\n  IonContent,\r\n  IonDatetime,\r\n  IonGrid,\r\n  IonHeader,\r\n  IonInput,\r\n  IonLabel,\r\n  IonPage,\r\n  IonRow,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonIcon,\r\n  IonItem, \r\n  IonCheckbox \r\n} from '@ionic/react';\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { arrowBackOutline } from 'ionicons/icons';\r\n\r\nimport '../css/Global.css';\r\nimport '../css/Registration.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Registration: React.FC = () => {\r\n  const { register, handleSubmit, errors, watch, formState } = useForm();\r\n\r\n  const onSubmit = (data: any) => {\r\n    console.log(\"Form submitted\");\r\n    console.log(data);\r\n  };\r\n\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar id=\"toolBar\">\r\n          <IonButtons slot=\"start\">\r\n            <IonButton routerLink=\"/main\">\r\n              <IonIcon slot=\"icon-only\" icon={arrowBackOutline} id=\"backBtn\" />\r\n            </IonButton>\r\n          </IonButtons>\r\n\r\n          <IonTitle id=\"title\">Registration</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent fullscreen>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <IonGrid>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonInput className=\"inputField\" type=\"text\" placeholder=\"First Name\" name=\"firstName\" ref={register({ required: true, minLength: 3, pattern: /^[A-Za-z]+$/i })}></IonInput>\r\n                {errors.firstName && errors.firstName.type === \"required\" && <div className=\"errorMessage\">First name is required!</div>}\r\n                {errors.firstName && errors.firstName.type === \"minLength\" && <div className=\"errorMessage\">First name has to be more than 2 characters</div>}\r\n                {errors.firstName && errors.firstName.type === \"pattern\" && <div className=\"errorMessage\">Please enter a valid First Name</div>}\r\n              </IonCol>\r\n              <IonCol>\r\n                <IonInput className=\"inputField\" type=\"text\" placeholder=\"Last Name\" name=\"lastName\" ref={register({ required: true, minLength: 3, pattern: /^[A-Za-z]+$/i })}></IonInput>\r\n                {errors.lastName && errors.lastName.type === \"required\" && <div className=\"errorMessage\">Last name is required!</div>}\r\n                {errors.lastName && errors.lastName.type === \"minLength\" && <div className=\"errorMessage\">Last name has to be more than 2 characters</div>}\r\n                {errors.lastName && errors.lastName.type === \"pattern\" && <div className=\"errorMessage\">Please enter a valid Last Name</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonInput className=\"inputField\" type=\"email\" placeholder=\"Email\" name=\"email\" ref={register({ required: true, pattern:  /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ })}></IonInput>\r\n                {errors.email && errors.email.type === \"required\" && <div className=\"errorMessage\">Email is required!</div>}\r\n                {errors.email && errors.email.type === \"pattern\" && <div className=\"errorMessage\">Please enter a valid Email</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonInput className=\"inputField\" type=\"tel\" placeholder=\"Contact Number\" name=\"contactNo\" ref={register({ required: true, minLength: 8, maxLength: 8, pattern: /(6|8|9)\\d{7}/ })}></IonInput>\r\n                {errors.contactNo && errors.contactNo.type === \"required\" && <div className=\"errorMessage\">Contact number is required!</div>}\r\n                {errors.contactNo && errors.contactNo.type === \"minLength\" && <div className=\"errorMessage\">Contact number consist of only 8 digits</div>}\r\n                {errors.contactNo && errors.contactNo.type === \"maxLength\" && <div className=\"errorMessage\">Contact number consist of only 8 digits</div>}\r\n                {errors.contactNo && errors.contactNo.type === \"pattern\" && <div className=\"errorMessage\">Please enter a valid Contact Number</div>}\r\n              </IonCol>\r\n              <IonCol>\r\n                <IonDatetime className=\"inputField\" displayFormat=\"DD-MM-YYYY\" placeholder=\"D.O.B\" name=\"dob\" ref={register({ required: true })}></IonDatetime>\r\n                {errors.dob && errors.dob.type === \"required\" && <div className=\"errorMessage\">Date of Birth is required!</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel id=\"highestQualificationLabel\">Highest Qualification</IonLabel>\r\n                  <IonSelect placeholder=\"Please select\" name=\"highestQualification\" ref={register({ required: true })}>\r\n                    <IonSelectOption value=\"aLevel\">'A' Level</IonSelectOption>\r\n                    <IonSelectOption value=\"oLevel\">'O' Level</IonSelectOption>\r\n                    <IonSelectOption value=\"degree\">Degree</IonSelectOption>\r\n                    <IonSelectOption value=\"Diploma\">Diploma</IonSelectOption>\r\n                  </IonSelect>\r\n                </IonItem>\r\n                {errors.highestQualification && errors.highestQualification.type === \"required\" && <div className=\"errorMessage\">Highest Qualification is required!</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonInput className=\"inputField\" type=\"text\" placeholder=\"Nationality\" name=\"nationality\" ref={register({ required: true, pattern: /^[A-Za-z]+$/i, minLength: 3 })}></IonInput>\r\n                {errors.nationality && errors.nationality.type === \"required\" && <div className=\"errorMessage\">Nationality is required!</div>}\r\n                {errors.nationality && errors.nationality.type === \"pattern\" && <div className=\"errorMessage\">Please enter a valid Nationality</div>}\r\n                {errors.nationality && errors.nationality.type === \"minLength\" && <div className=\"errorMessage\">Please enter a valid Nationality</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonInput className=\"inputField\" type=\"password\" placeholder=\"Password\" name=\"password\" ref={register({ required: true, minLength: 8, pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/ })}></IonInput>\r\n                {errors.password && errors.password.type === \"required\" && <div className=\"errorMessage\">Password is required!</div>}\r\n                {errors.password && errors.password.type === \"minLength\" && <div className=\"errorMessage\">Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</div>}\r\n                {errors.password && errors.password.type === \"pattern\" && <div className=\"errorMessage\">Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonInput className=\"inputField\" type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" ref={register({ required: true, validate: value => value === password.current })}></IonInput>\r\n                {errors.confirmPassword && errors.confirmPassword.type === \"required\" && <div className=\"errorMessage\">Confirm Password is required!</div>}\r\n                {errors.confirmPassword && errors.confirmPassword.type === \"validate\" && <div className=\"errorMessage\">Password does not match!</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonItem>\r\n                <IonCheckbox name=\"privacyCheckbox\" checked={checked} onIonChange={e => setChecked(e.detail.checked)} slot=\"start\" ref={register({ validate: value => checked === true })}></IonCheckbox>\r\n                <IonLabel style={{fontSize: \"80%\", marginLeft: \"10%\"}} className=\"ion-text-wrap\" color=\"dark\">I agree with SIM's Terms of Use and Privary Policy and thereby give my consent to receive marketing communications from SIM.</IonLabel> \r\n              </IonItem>\r\n              {errors.privacyCheckbox && errors.privacyCheckbox.type === \"validate\" && <div className=\"errorMessage\">*Terms of Use and Privacy Policy checkbox not checked</div>}\r\n            </IonRow>\r\n            <IonRow class=\"ion-justify-content-center\">\r\n              <IonButton id=\"registrationBtn\" type=\"submit\" onClick={() => history.push('/login')}>REGISTER</IonButton>\r\n            </IonRow>\r\n          </IonGrid>\r\n        </form>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"]},"metadata":{},"sourceType":"module"}