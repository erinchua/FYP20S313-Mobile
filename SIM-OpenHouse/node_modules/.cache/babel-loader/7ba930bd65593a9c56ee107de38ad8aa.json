{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\UsefulInfo\\\\OpenHouseFeedback.tsx\";\nimport { IonAlert, IonButton, IonCol, IonContent, IonGrid, IonHeader, IonItem, IonLabel, IonPage, IonRadio, IonRadioGroup, IonRow, IonSelect, IonSelectOption, IonTextarea, IonTitle } from '@ionic/react';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport '../../css/Global.css';\nimport '../../css/OpenHouseFeedback.css';\nimport TopNav from '../../components/TopNav';\n\nconst OpenHouseFeedback = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues,\n    reset\n  } = useForm();\n  const [submitFeedbackSuccess, setSubmitFeedbackSuccess] = useState(false);\n\n  const onSubmit = data => {\n    const attendedDate = getValues(\"attendedDate\");\n    const feedbackNature = getValues(\"feedbackNature\");\n    const feedbackTextarea = getValues(\"feedbackTextarea\");\n\n    if (attendedDate !== \"\" && feedbackNature !== \"\" && feedbackTextarea !== \"\" && attendedDate !== null && feedbackNature !== null && feedbackTextarea !== null) {\n      console.log(\"Date: \" + attendedDate);\n      console.log(\"Feedback Nature: \" + feedbackNature);\n      console.log(\"Feedback: \" + feedbackTextarea);\n      setSubmitFeedbackSuccess(true); // reset({\n      //     attendedDate: null,\n      //     feedbackNature: null,\n      //     feedbackTextarea: null\n      // });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: submitFeedbackSuccess,\n    onDidDismiss: () => setSubmitFeedbackSuccess(false),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    header: 'Your feedback has been successfully sent!',\n    message: 'Thank you for your feedback!',\n    buttons: ['Close'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Open House Feedback Form\",\n    route: \"/u/usefulInfoMain\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"openHouseFeedbackIonContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"openHouseFeedbackGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    id: \"openHouseFeedbackMainTitleRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    style: {\n      padding: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    id: \"openHouseFeedbackMainTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }, \"SIM Open House Feedback\"), /*#__PURE__*/React.createElement(IonRow, {\n    id: \"openHouseFeedbackSubtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 37\n    }\n  }, \"We'll love to hear from you!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"openHouseFeedbackTitleRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"openHouseFeedbackTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, \"Attended Open House Date *\")), /*#__PURE__*/React.createElement(IonRow, {\n    id: \"attendedDateRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"12\",\n    sizeSm: \"12\",\n    style: {\n      padding: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    id: \"attendedDateItem\",\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonSelect, {\n    id: \"attendedDateSelect\",\n    name: \"attendedDate\",\n    placeholder: \"Select Date\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"day1\",\n    className: \"attendedDateSelectOption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 45\n    }\n  }, \"21 November 2020\"), /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"day2\",\n    className: \"attendedDateSelectOption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 45\n    }\n  }, \"22 November 2020\"))), errors.attendedDate && errors.attendedDate.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 104\n    }\n  }, \"Attended open house date is required!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"openHouseFeedbackTitleRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"openHouseFeedbackTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"Nature of Feedback *\")), /*#__PURE__*/React.createElement(IonRow, {\n    id: \"feedbackNatureRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"12\",\n    sizeSm: \"12\",\n    style: {\n      padding: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    id: \"feedbackNatureMainItem\",\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonRadioGroup, {\n    id: \"feedbackNatureRadioGroup\",\n    name: \"feedbackNature\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    id: \"feedbackNatureItem\",\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 49\n    }\n  }, \"Compliment\"), /*#__PURE__*/React.createElement(IonRadio, {\n    slot: \"start\",\n    value: \"compliment\",\n    className: \"feedbackNatureRadio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 49\n    }\n  }, \"Compliment\")), /*#__PURE__*/React.createElement(IonItem, {\n    id: \"feedbackNatureItem\",\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 49\n    }\n  }, \"Complaint\"), /*#__PURE__*/React.createElement(IonRadio, {\n    slot: \"start\",\n    value: \"complaint\",\n    className: \"feedbackNatureRadio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 49\n    }\n  }, \"Complaint\")), /*#__PURE__*/React.createElement(IonItem, {\n    id: \"feedbackNatureItem\",\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 49\n    }\n  }, \"Suggestion\"), /*#__PURE__*/React.createElement(IonRadio, {\n    slot: \"start\",\n    value: \"suggestion\",\n    className: \"feedbackNatureRadio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 49\n    }\n  }, \"Suggestion\")))), errors.feedbackNature && errors.feedbackNature.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 108\n    }\n  }, \"Nature of feedback is required!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"openHouseFeedbackTitleRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"openHouseFeedbackTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, \"Your Feedback/ Comments *\")), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonTextarea, {\n    id: \"feedbackTextarea\",\n    name: \"feedbackTextarea\",\n    wrap: \"hard\",\n    rows: 8,\n    inputmode: \"text\",\n    placeholder: \"Type your feedback/ comments here...\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  })), errors.feedbackTextarea && errors.feedbackTextarea.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 104\n    }\n  }, \"Your feedback/ comment is required!\"), /*#__PURE__*/React.createElement(IonRow, {\n    class: \"ion-justify-content-center\",\n    style: {\n      marginTop: \"5%\",\n      marginBottom: \"3%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    size: \"large\",\n    id: \"feedbackBtn\",\n    type: \"submit\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, \"SUBMIT\")))))));\n};\n\nexport default OpenHouseFeedback;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/UsefulInfo/OpenHouseFeedback.tsx"],"names":["IonAlert","IonButton","IonCol","IonContent","IonGrid","IonHeader","IonItem","IonLabel","IonPage","IonRadio","IonRadioGroup","IonRow","IonSelect","IonSelectOption","IonTextarea","IonTitle","React","useState","useForm","TopNav","OpenHouseFeedback","register","handleSubmit","errors","getValues","reset","submitFeedbackSuccess","setSubmitFeedbackSuccess","onSubmit","data","attendedDate","feedbackNature","feedbackTextarea","console","log","padding","required","type","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import { IonAlert, IonButton, IonCol, IonContent, IonGrid, IonHeader, IonItem, IonLabel, IonPage, IonRadio, IonRadioGroup, IonRow, IonSelect, IonSelectOption, IonTextarea, IonTitle } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/OpenHouseFeedback.css';\r\n\r\nimport TopNav from '../../components/TopNav';\r\nimport Menu from '../../components/Menu';\r\n\r\n\r\nconst OpenHouseFeedback: React.FC = () => {\r\n\r\n    const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n    const [submitFeedbackSuccess, setSubmitFeedbackSuccess] = useState(false);\r\n\r\n    const onSubmit = (data: any) => {\r\n        const attendedDate = getValues(\"attendedDate\");\r\n        const feedbackNature = getValues(\"feedbackNature\");\r\n        const feedbackTextarea = getValues(\"feedbackTextarea\");\r\n\r\n        if ((attendedDate !== \"\" && feedbackNature !== \"\" && feedbackTextarea !== \"\") && \r\n        (attendedDate !== null && feedbackNature !== null && feedbackTextarea !== null)) {\r\n            console.log(\"Date: \" + attendedDate);\r\n            console.log(\"Feedback Nature: \" + feedbackNature);\r\n            console.log(\"Feedback: \" + feedbackTextarea);\r\n            \r\n            setSubmitFeedbackSuccess(true);\r\n            // reset({\r\n            //     attendedDate: null,\r\n            //     feedbackNature: null,\r\n            //     feedbackTextarea: null\r\n            // });\r\n\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IonAlert\r\n                isOpen={submitFeedbackSuccess}\r\n                onDidDismiss={() => setSubmitFeedbackSuccess(false)}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Your feedback has been successfully sent!'}\r\n                message={'Thank you for your feedback!'}\r\n                buttons={['Close']}\r\n            ></IonAlert>\r\n\r\n            <IonPage>\r\n                <IonHeader>\r\n                    <TopNav title=\"Open House Feedback Form\" route='/u/usefulInfoMain' backarrow={ true } hamburger = { true }/>\r\n                </IonHeader>\r\n                \r\n                <IonContent fullscreen={true} className=\"openHouseFeedbackIonContent\">\r\n                    <IonGrid id=\"openHouseFeedbackGrid\">\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <IonRow id=\"openHouseFeedbackMainTitleRow\">\r\n                                <IonCol style={{padding: \"0\"}}>\r\n                                    <IonRow id=\"openHouseFeedbackMainTitle\">SIM Open House Feedback</IonRow>\r\n                                    <IonRow id=\"openHouseFeedbackSubtitle\">We'll love to hear from you!</IonRow>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Attended Open House Date */}\r\n                            <IonRow className=\"openHouseFeedbackTitleRow\">\r\n                                <IonTitle className=\"openHouseFeedbackTitle\">Attended Open House Date *</IonTitle>\r\n                            </IonRow>\r\n\r\n                            <IonRow id=\"attendedDateRow\">\r\n                                <IonCol size=\"12\" sizeSm=\"12\" style={{padding: \"0\"}}>\r\n                                    <IonItem id=\"attendedDateItem\" lines=\"none\">\r\n                                        <IonSelect id=\"attendedDateSelect\" name=\"attendedDate\" placeholder=\"Select Date\" ref={register({ required: true })}>\r\n                                            <IonSelectOption value=\"day1\" className=\"attendedDateSelectOption\">21 November 2020</IonSelectOption>\r\n                                            <IonSelectOption value=\"day2\" className=\"attendedDateSelectOption\">22 November 2020</IonSelectOption>\r\n                                        </IonSelect>\r\n                                    </IonItem>\r\n                                    {errors.attendedDate && errors.attendedDate.type === \"required\" && <p className=\"errorMsg\">Attended open house date is required!</p>}\r\n                                    \r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Nature of Feedback */}\r\n                            <IonRow className=\"openHouseFeedbackTitleRow\">\r\n                                <IonTitle className=\"openHouseFeedbackTitle\">Nature of Feedback *</IonTitle>\r\n                            </IonRow>\r\n\r\n                            <IonRow id=\"feedbackNatureRow\">\r\n                                <IonCol size=\"12\" sizeSm=\"12\" style={{padding: \"0\"}}>\r\n                                    <IonItem id=\"feedbackNatureMainItem\" lines=\"none\">\r\n                                        <IonRadioGroup id=\"feedbackNatureRadioGroup\" name=\"feedbackNature\" ref={register({ required: true })}>\r\n                                            <IonItem id=\"feedbackNatureItem\" lines=\"none\">\r\n                                                <IonLabel>Compliment</IonLabel>\r\n                                                <IonRadio slot=\"start\" value=\"compliment\" className=\"feedbackNatureRadio\">Compliment</IonRadio>\r\n                                            </IonItem>\r\n\r\n                                            <IonItem id=\"feedbackNatureItem\" lines=\"none\">\r\n                                                <IonLabel>Complaint</IonLabel>\r\n                                                <IonRadio slot=\"start\" value=\"complaint\" className=\"feedbackNatureRadio\">Complaint</IonRadio>\r\n                                            </IonItem>\r\n\r\n                                            <IonItem id=\"feedbackNatureItem\" lines=\"none\">\r\n                                                <IonLabel>Suggestion</IonLabel>\r\n                                                <IonRadio slot=\"start\" value=\"suggestion\" className=\"feedbackNatureRadio\">Suggestion</IonRadio>\r\n                                            </IonItem>\r\n                                        </IonRadioGroup>\r\n                                    </IonItem>\r\n                                    {errors.feedbackNature && errors.feedbackNature.type === \"required\" && <p className=\"errorMsg\">Nature of feedback is required!</p>}\r\n\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Feedback/ Comments */}\r\n                            <IonRow className=\"openHouseFeedbackTitleRow\">\r\n                                <IonTitle className=\"openHouseFeedbackTitle\">Your Feedback/ Comments *</IonTitle>\r\n                            </IonRow>\r\n\r\n                            <IonRow>\r\n                                <IonTextarea id=\"feedbackTextarea\" name=\"feedbackTextarea\" wrap=\"hard\" rows={8} inputmode=\"text\" placeholder=\"Type your feedback/ comments here...\" ref={register({ required: true })}></IonTextarea>\r\n                            </IonRow>\r\n                            {errors.feedbackTextarea && errors.feedbackTextarea.type === \"required\" && <p className=\"errorMsg\">Your feedback/ comment is required!</p>}\r\n\r\n                            <IonRow class=\"ion-justify-content-center\" style={{marginTop:\"5%\", marginBottom:\"3%\"}}>\r\n                                <IonButton size=\"large\" id=\"feedbackBtn\" type=\"submit\" onClick={onSubmit}>SUBMIT</IonButton>\r\n                            </IonRow>\r\n                        </form>\r\n                    </IonGrid>\r\n                </IonContent>\r\n            </IonPage>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default OpenHouseFeedback;"]},"metadata":{},"sourceType":"module"}