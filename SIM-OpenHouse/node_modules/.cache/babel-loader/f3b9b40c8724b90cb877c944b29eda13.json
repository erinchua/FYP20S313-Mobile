{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{IonCol,IonContent,IonGrid,IonHeader,IonLoading,IonPage,IonRow,IonSegment,IonSegmentButton}from'@ionic/react';import React,{useEffect,useState}from'react';import'../css/Global.css';import'../css/MySchedule.css';import TopNav from'../components/TopNav';import MyScheduleContent from'../components/MyScheduleContent';import{db}from'../firebase';import{useAuth}from'../modules/auth';import{toSchedule}from'../modules/map';var MySchedule=function MySchedule(){var _useAuth=useAuth(),userID=_useAuth.userID;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),studentDetails=_useState2[0],setStudentDetails=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(\"day1\"),_useState6=_slicedToArray(_useState5,2),dayNum=_useState6[0],setDayNum=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),openhouseDates=_useState8[0],setOpenhouseDates=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),openHouseProgs=_useState10[0],setOpenHouseProgs=_useState10[1];var handleDayOne=function handleDayOne(){setDayNum(\"day1\");};var handleDayTwo=function handleDayTwo(){setDayNum(\"day2\");};useEffect(function(){db.collection('Openhouse').get().then(function(snapshot){var dates=[];snapshot.forEach(function(doc){var data=doc.get('day');for(var i=0;i<Object.keys(data).length;i++){var day=data[Object.keys(data)[i]];dates.push(day.date);}});setOpenhouseDates(dates);}).catch(function(error){return console.log(error);});var fetchStudent=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var studRef,doc;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:studRef=db.collection('Students').doc(userID);_context.next=3;return studRef.get();case 3:doc=_context.sent;studentDetails.push(doc.data());case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchStudent(){return _ref.apply(this,arguments);};}();fetchStudent();db.collection('Students').doc(userID).get().then(function(snapshot){return setStudentDetails(snapshot.data());});return db.collection('PersonalScheduler').doc(userID).onSnapshot(function(snapshot){var registered=snapshot.data().registeredProgrammes;var scheduleProgs=[];registered.forEach(function(item){var itemType=item.split(\"-\");switch(itemType[0]){case\"talk\":return db.collection('ProgrammeTalks').doc(item).onSnapshot(function(doc){return scheduleProgs.push(doc.data());});case\"tour\":return db.collection('GuidedTours').doc(item).onSnapshot(function(doc){return scheduleProgs.push(doc.data());});case\"performance\":return db.collection('Performances').doc(item).onSnapshot(function(doc){return scheduleProgs.push(doc.data());});case\"activity\":return db.collection('GamesActivities').doc(item).onSnapshot(function(doc){return scheduleProgs.push(doc.data());});default:return;}});setTimeout(function(){setOpenHouseProgs(scheduleProgs.map(toSchedule));setLoading(false);},500);});},[]);return/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(IonHeader,null,/*#__PURE__*/React.createElement(TopNav,{title:\"My Schedule\",route:\"/u/home\",backarrow:true,hamburger:true})),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true,className:\"myScheduleIonContent\"},/*#__PURE__*/React.createElement(IonGrid,{className:\"myScheduleGrid\"},/*#__PURE__*/React.createElement(IonRow,{className:\"ion-justify-content-center openHouseDateRow\"},/*#__PURE__*/React.createElement(IonCol,{sizeSm:\"6\",className:\"openHouseDateCol\"},/*#__PURE__*/React.createElement(\"span\",{className:\"openHouseDateTitleText\"},\"From: \"),/*#__PURE__*/React.createElement(\"span\",{className:\"openHouseDateText\"},openhouseDates[0])),/*#__PURE__*/React.createElement(IonCol,{sizeSm:\"6\",className:\"openHouseDateCol\"},/*#__PURE__*/React.createElement(\"span\",{className:\"openHouseDateTitleText\"},\"To: \"),/*#__PURE__*/React.createElement(\"span\",{className:\"openHouseDateText\"},openhouseDates[1]))),/*#__PURE__*/React.createElement(IonRow,{className:\"mySchedule-IonRowCol\"},/*#__PURE__*/React.createElement(IonCol,{sizeSm:\"12\",style:{padding:\"0\",width:\"100%\"}},/*#__PURE__*/React.createElement(IonSegment,{scrollable:true,value:dayNum,onIonChange:function onIonChange(e){return console.log(\"\".concat(e.detail.value));}},/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day1\",onClick:function onClick(){return handleDayOne();},className:\"mySchedule-DayTab\"},\"Day 1: \",openhouseDates[0]),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day2\",onClick:function onClick(){return handleDayTwo();},className:\"mySchedule-DayTab\"},\"Day 2: \",openhouseDates[1]))))),/*#__PURE__*/React.createElement(MyScheduleContent,{day1:dayNum,day2:dayNum,openhouseDates:openhouseDates,openHouseProgs:openHouseProgs,studentDetails:studentDetails}),/*#__PURE__*/React.createElement(IonLoading,{isOpen:loading})));};export default MySchedule;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/MySchedule.tsx"],"names":["IonCol","IonContent","IonGrid","IonHeader","IonLoading","IonPage","IonRow","IonSegment","IonSegmentButton","React","useEffect","useState","TopNav","MyScheduleContent","db","useAuth","toSchedule","MySchedule","userID","studentDetails","setStudentDetails","loading","setLoading","dayNum","setDayNum","openhouseDates","setOpenhouseDates","openHouseProgs","setOpenHouseProgs","handleDayOne","handleDayTwo","collection","get","then","snapshot","dates","forEach","doc","data","i","Object","keys","length","day","push","date","catch","error","console","log","fetchStudent","studRef","onSnapshot","registered","registeredProgrammes","scheduleProgs","item","itemType","split","setTimeout","map","padding","width","e","detail","value"],"mappings":"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","sourcesContent":["import { IonCol, IonContent, IonGrid, IonHeader, IonLoading, IonPage, IonRow, IonSegment, IonSegmentButton } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport '../css/Global.css';\r\nimport '../css/MySchedule.css';\r\nimport TopNav from '../components/TopNav';\r\nimport MyScheduleContent from '../components/MyScheduleContent';\r\nimport { db } from '../firebase';\r\nimport { useAuth } from '../modules/auth';\r\nimport { ScheduleItem, toSchedule } from '../modules/map';\r\n\r\nconst MySchedule: React.FC = () => {\r\n    const { userID } = useAuth();\r\n    const [studentDetails, setStudentDetails]: any = useState([]);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [dayNum, setDayNum] = useState(\"day1\");\r\n    const [openhouseDates, setOpenhouseDates] = useState([]);\r\n    const [openHouseProgs, setOpenHouseProgs] = useState<ScheduleItem[]>([]);\r\n\r\n    const handleDayOne = () => {\r\n        setDayNum(\"day1\");\r\n    };\r\n\r\n    const handleDayTwo = () => {\r\n        setDayNum(\"day2\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        db.collection('Openhouse').get().then(snapshot => {\r\n            const dates: any = [];\r\n\r\n            snapshot.forEach(doc => {\r\n                const data = doc.get('day');\r\n\r\n                for (let i = 0; i < Object.keys(data).length; i++) {\r\n                    const day = data[Object.keys(data)[i]];\r\n                    dates.push(day.date);\r\n                }\r\n            });\r\n\r\n            setOpenhouseDates(dates);\r\n        }).catch((error) => console.log(error));\r\n\r\n        const fetchStudent = async () => {\r\n            const studRef = db.collection('Students').doc(userID)\r\n            const doc = await studRef.get()\r\n            studentDetails.push(doc.data())\r\n        }\r\n\r\n        fetchStudent();\r\n\r\n        db.collection('Students').doc(userID).get().then(snapshot => setStudentDetails(snapshot.data()));\r\n\r\n        return db.collection('PersonalScheduler').doc(userID).onSnapshot((snapshot: any) => {\r\n            const registered = snapshot.data().registeredProgrammes;\r\n            const scheduleProgs: any = [];\r\n\r\n            registered.forEach((item: any) => {\r\n                const itemType = item.split(\"-\");\r\n\r\n                switch (itemType[0]) {\r\n                    case \"talk\":\r\n                        return db.collection('ProgrammeTalks').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\r\n                    case \"tour\":\r\n                        return db.collection('GuidedTours').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\r\n                    case \"performance\":\r\n                        return db.collection('Performances').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\r\n                    case \"activity\":\r\n                        return db.collection('GamesActivities').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\r\n                    default:\r\n                        return;\r\n                }\r\n            });\r\n\r\n            setTimeout(() => {\r\n                setOpenHouseProgs(scheduleProgs.map(toSchedule));\r\n                setLoading(false);\r\n            }, 500);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <TopNav title=\"My Schedule\" route='/u/home' backarrow={true} hamburger={true} />\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen={true} className=\"myScheduleIonContent\">\r\n                <IonGrid className=\"myScheduleGrid\">\r\n                    <IonRow className=\"ion-justify-content-center openHouseDateRow\">\r\n                        <IonCol sizeSm=\"6\" className=\"openHouseDateCol\">\r\n                            <span className=\"openHouseDateTitleText\">From: </span>\r\n                            <span className=\"openHouseDateText\">{openhouseDates[0]}</span>\r\n                        </IonCol>\r\n                        <IonCol sizeSm=\"6\" className=\"openHouseDateCol\">\r\n                            <span className=\"openHouseDateTitleText\">To: </span>\r\n                            <span className=\"openHouseDateText\">{openhouseDates[1]}</span>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow className=\"mySchedule-IonRowCol\">\r\n                        <IonCol sizeSm=\"12\" style={{ padding: \"0\", width: \"100%\" }}>\r\n                            <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                                <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"mySchedule-DayTab\">\r\n                                    Day 1: {openhouseDates[0]}\r\n                                </IonSegmentButton>\r\n\r\n                                <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"mySchedule-DayTab\">\r\n                                    Day 2: {openhouseDates[1]}\r\n                                </IonSegmentButton>\r\n                            </IonSegment>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <MyScheduleContent day1={dayNum} day2={dayNum} openhouseDates={openhouseDates} openHouseProgs={openHouseProgs} studentDetails={studentDetails} />\r\n                <IonLoading isOpen={loading} />\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default MySchedule;"]},"metadata":{},"sourceType":"module"}