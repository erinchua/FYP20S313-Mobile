{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\temp\\\\VincentTest.tsx\";\nimport { IonContent, IonButton, IonHeader, IonPage, IonTitle, IonToolbar, IonCheckbox } from \"@ionic/react\";\nimport React, { useState, useEffect } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport \"../css/Home.css\";\nimport { db } from \"../firebase\"; // import CreateClubAndCouncil from \"./CreateClubAndCouncil\";\n\n//<script src=\"../Resource/qrcode.min.js\"></script>;\nconst VincentTest = () => {\n  const [programmes, setProgrammes] = useState([]);\n  useEffect(() => {\n    const programmes = [];\n\n    const fetchData = async () => {\n      const data = await db.collection(\"TestProgrammes\").get().then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          const data = doc.data();\n          programmes.push(data);\n        });\n        setProgrammes(programmes);\n      });\n    };\n\n    fetchData();\n  }, []);\n  /* console.log(\r\n    contacts.map((contact) => {\r\n      contact.data();\r\n    })\r\n  ); */\n\n  /*  const qrcode = new QRCode(document.getElementById(\"qrcode\")); */\n\n  const generateQR = () => {//qrcode.makeCode(qrdata);\n  };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"QRTest\"))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"ion-padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    onClick: generateQR,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \" Generate QR \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QRCode, {\n    value: \"ThomasLee@gmail.com,Thomas,Lee\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Full time & Part time\"), /*#__PURE__*/React.createElement(IonCheckbox, {\n    checked: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Full time\"), /*#__PURE__*/React.createElement(IonCheckbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Part time\"), /*#__PURE__*/React.createElement(IonCheckbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), programmes.map(programme => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, programme.programmeTitle), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, programme.awardedBy), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, programme.modeOfStudy.fullTime ? 'Full-Time' : ''), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, programme.modeOfStudy.partTime ? 'Part-Time' : ''), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\n\nexport default VincentTest;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/temp/VincentTest.tsx"],"names":["IonContent","IonButton","IonHeader","IonPage","IonTitle","IonToolbar","IonCheckbox","React","useState","useEffect","QRCode","db","VincentTest","programmes","setProgrammes","fetchData","data","collection","get","then","snapshot","docs","forEach","doc","push","generateQR","map","programme","programmeTitle","awardedBy","modeOfStudy","fullTime","partTime"],"mappings":"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","sourcesContent":["import { IonContent, IonInput, IonButton, IonItem, IonLabel, IonHeader, IonPage, IonTitle, IonToolbar, IonSegmentButton, IonSegment, IonCheckbox } from \"@ionic/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport \"../css/Home.css\";\r\nimport { auth, db } from \"../firebase\";\r\n// import CreateClubAndCouncil from \"./CreateClubAndCouncil\";\r\nimport ViewClubAndCouncil from \"./ViewClubAndCouncil\";\r\nimport ViewContactInfo from \"./ViewContactInfo\";\r\nimport ViewProgrammeTalk from \"./ViewProgrammeTalk\";\r\n\r\n//<script src=\"../Resource/qrcode.min.js\"></script>;\r\n\r\nconst VincentTest: React.FC = () => {\r\n\r\n  const [programmes, setProgrammes] = useState([])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const programmes: any = []\r\n    const fetchData = async () => {\r\n      const data = await db\r\n        .collection(\"TestProgrammes\")\r\n        .get()\r\n        .then((snapshot) => {\r\n          snapshot.docs.forEach((doc) => {\r\n            const data = doc.data()\r\n            programmes.push(data)\r\n          });\r\n          setProgrammes(programmes)\r\n        });\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  /* console.log(\r\n    contacts.map((contact) => {\r\n      contact.data();\r\n    })\r\n  ); */\r\n\r\n  /*  const qrcode = new QRCode(document.getElementById(\"qrcode\")); */\r\n\r\n  const generateQR = () => {\r\n    //qrcode.makeCode(qrdata);\r\n  };\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonTitle>QRTest</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent fullscreen className=\"ion-padding\">\r\n        {/* <IonInput\r\n          value={qrdata}\r\n          type=\"text\"\r\n          id=\"qr-data\"\r\n          onIonChange={(e: any) => {\r\n            setQRdata(e.detail.value);\r\n          }}\r\n        ></IonInput> */}\r\n        <IonButton onClick={generateQR}> Generate QR </IonButton>\r\n        <div>\r\n          <QRCode value=\"ThomasLee@gmail.com,Thomas,Lee\" />{\" \"}\r\n        </div>\r\n\r\n        {/* <CreateClubAndCouncil /> */}\r\n        {/* <ViewClubAndCouncil categoryType=\"InternationalStudent\"></ViewClubAndCouncil> */}\r\n        {/* <ViewContactInfo></ViewContactInfo> */}\r\n        {/* <ViewProgrammeTalk date=\"21-Nov-2020\"></ViewProgrammeTalk> */}\r\n\r\n        {/* {programmes.map(({ programOverview = [], applicationPeriod = [], programmeStructure = [], overseaOpportunity = [], intakeMonths = [], duration = [] }) => {\r\n          return (\r\n            <div>\r\n              {programOverview.map((item) => {\r\n                return (\r\n                  <li>{item}</li>\r\n                )\r\n              })}\r\n              <li>Jan 2021 Intake: {applicationPeriod.jan2021}</li>\r\n              <li>Coursework: {programmeStructure.coursework ? 'Yes' : 'No'}</li>\r\n              <li>Examination: {programmeStructure.examination ? 'Yes' : 'No'}</li>\r\n              <li>Exchange: {overseaOpportunity.exchange ? 'Yes' : 'No'}</li>\r\n              <li>Transfer: {overseaOpportunity.transfer ? 'Yes' : 'No'}</li>\r\n              <li>Intake Months Part Time: {intakeMonths.partTime}</li>\r\n              <li>Duration Part Time: {duration.partTime}</li>\r\n              <br />\r\n            </div>\r\n          )\r\n\r\n        })\r\n        } */}\r\n        <p>Full time & Part time</p>\r\n        <IonCheckbox checked={false} ></IonCheckbox>\r\n        <br />\r\n        <p>Full time</p>\r\n        <IonCheckbox></IonCheckbox>\r\n        <br />\r\n        <p>Part time</p>\r\n        <IonCheckbox></IonCheckbox>\r\n        <br />\r\n\r\n        {programmes.map((programme: any) => {\r\n          return (\r\n            <div>\r\n              <li>{programme.programmeTitle}</li>\r\n              <li>{programme.awardedBy}</li>\r\n              <li>{programme.modeOfStudy.fullTime ? 'Full-Time' : ''}</li>\r\n              <li>{programme.modeOfStudy.partTime ? 'Part-Time' : ''}</li>\r\n              <br />\r\n            </div>\r\n          )\r\n        })}\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default VincentTest;\r\n"]},"metadata":{},"sourceType":"module"}