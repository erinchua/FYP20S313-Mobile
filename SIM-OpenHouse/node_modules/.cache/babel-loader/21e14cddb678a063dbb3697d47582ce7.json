{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\components\\\\OpenHouseProgrammes\\\\ProgTalkInfo.tsx\";\nimport { IonGrid, IonRow, IonCol, IonButton, IonPage, IonContent, IonAlert, IonHeader } from '@ionic/react';\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport '../../css/Global.css';\nimport '../../css/ProgrammeTalks.css';\nimport TopNav from '../TopNav';\nimport { db } from '../../firebase';\nimport { useAuth } from '../../modules/auth';\nimport { toDateObject } from '../../modules/convert';\n\nconst ProgTalkInfo = ({\n  match\n}) => {\n  const {\n    userID\n  } = useAuth();\n  const [alert, setAlert] = useState({\n    registerSuccess: false,\n    registerFail: false,\n    loading: false\n  });\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [programmeTalk, setProgrammeTalk] = useState([]);\n\n  const addToSchedule = async programme => {\n    try {\n      setAlert({\n        registerSuccess: false,\n        registerFail: false,\n        loading: true\n      });\n      await db.collection('PersonalScheduler').doc(userID).get().then(snapshot => {\n        const registered = snapshot.data().registeredProgrammes;\n\n        if (registered != null) {\n          if (registered.length > 0) {\n            let check = false;\n            registered.forEach(item => {\n              const itemType = item.split(\"-\");\n\n              switch (itemType[0]) {\n                case \"talk\":\n                  db.collection('ProgrammeTalks').doc(item).onSnapshot(doc => {\n                    if (programme.date === doc.data().date) {\n                      const progStart = toDateObject(programme.date, programme.startTime),\n                            progEnd = toDateObject(programme.date, programme.endTime);\n                      const itemStart = toDateObject(doc.data().date, doc.data().startTime),\n                            itemEnd = toDateObject(doc.data().date, doc.data().endTime);\n\n                      if (progStart >= itemStart && progStart < itemEnd || progEnd > itemStart && progEnd <= itemEnd) {\n                        check = true;\n                      }\n                    }\n                  });\n                  break;\n\n                case \"tour\":\n                  db.collection('GuidedTours').doc(item).onSnapshot(doc => {\n                    if (programme.date === doc.data().date) {\n                      const progStart = toDateObject(programme.date, programme.startTime),\n                            progEnd = toDateObject(programme.date, programme.endTime);\n                      const itemStart = toDateObject(doc.data().date, doc.data().startTime),\n                            itemEnd = toDateObject(doc.data().date, doc.data().endTime);\n\n                      if (progStart >= itemStart && progStart < itemEnd || progEnd > itemStart && progEnd <= itemEnd) {\n                        check = true;\n                      }\n                    }\n                  });\n                  break;\n\n                case \"performance\":\n                  db.collection('Performances').doc(item).onSnapshot(doc => {\n                    if (programme.date === doc.data().date) {\n                      const progStart = toDateObject(programme.date, programme.startTime),\n                            progEnd = toDateObject(programme.date, programme.endTime);\n                      const itemStart = toDateObject(doc.data().date, doc.data().startTime),\n                            itemEnd = toDateObject(doc.data().date, doc.data().endTime);\n\n                      if (progStart >= itemStart && progStart < itemEnd || progEnd > itemStart && progEnd <= itemEnd) {\n                        check = true;\n                      }\n                    }\n                  });\n                  break;\n\n                default:\n              }\n            });\n            setTimeout(async () => {\n              if (check) {\n                setAlert({\n                  registerSuccess: false,\n                  registerFail: true,\n                  loading: false\n                });\n              } else {\n                await db.collection('PersonalScheduler').doc(userID).update({\n                  registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id)\n                });\n                setAlert({\n                  registerSuccess: true,\n                  registerFail: false,\n                  loading: false\n                });\n              }\n\n              ;\n              check = false;\n            }, 500);\n          } else {\n            db.collection('PersonalScheduler').doc(userID).update({\n              registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id)\n            });\n            setAlert({\n              registerSuccess: true,\n              registerFail: false,\n              loading: false\n            });\n          }\n        } else {\n          db.collection('PersonalScheduler').doc(userID).update({\n            registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id)\n          });\n          setAlert({\n            registerSuccess: true,\n            registerFail: false,\n            loading: false\n          });\n        }\n      });\n    } catch (e) {\n      setAlert({\n        registerSuccess: false,\n        registerFail: false,\n        loading: false\n      });\n      return console.log(e);\n    }\n  };\n\n  const fetchData = async () => {\n    const talkRef = db.collection('ProgrammeTalks').doc(match.params.id);\n    const doc = (await talkRef.get()).data();\n    setProgrammeTalk(doc);\n  };\n\n  useEffect(() => {\n    fetchData();\n    db.collection('PersonalScheduler').doc(userID).get().then(snapshot => {\n      const registered = snapshot.data().registeredProgrammes;\n\n      if (registered != null) {\n        if (registered.length > 0) {\n          registered.forEach(item => {\n            if (item === match.params.id) setButtonDisabled(true);\n          });\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: alert.registerSuccess,\n    onDidDismiss: () => setAlert({\n      registerSuccess: false,\n      registerFail: false,\n      loading: false\n    }),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    header: 'Successfully Registered',\n    message: 'You have successfully registered for the programme talk and it has been successfully added to My Schedule.',\n    buttons: ['Close'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: alert.registerFail,\n    onDidDismiss: () => setAlert({\n      registerSuccess: false,\n      registerFail: false,\n      loading: false\n    }),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    header: 'Registration Unsuccessful',\n    message: 'There exists an open house programme in your scheduler at this timing. Please remove the existing programme from your scheduler first!',\n    buttons: ['Close'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Programme Talks\",\n    route: \"/u/openHouseMain/programmeTalks\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"progTalkIonContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"progTalkInfoGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"4\",\n    sizeSm: \"4\",\n    className: \"progTalkInfoHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }, \"Programme Talk:\"), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"8\",\n    sizeSm: \"8\",\n    className: \"progTalkInfoData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, programmeTalk.talkName)), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"4\",\n    sizeSm: \"4\",\n    className: \"progTalkInfoHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }, \"Awarding University:\"), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"8\",\n    sizeSm: \"8\",\n    className: \"progTalkInfoData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, programmeTalk.awardingUni)), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"4\",\n    sizeSm: \"4\",\n    className: \"progTalkInfoHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, \"Date:\"), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"8\",\n    sizeSm: \"8\",\n    className: \"progTalkInfoData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, programmeTalk.date)), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"4\",\n    sizeSm: \"4\",\n    className: \"progTalkInfoHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, \"Time:\"), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"8\",\n    sizeSm: \"8\",\n    className: \"progTalkInfoData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }, programmeTalk.startTime + \" to \" + programmeTalk.endTime)), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"4\",\n    sizeSm: \"4\",\n    className: \"progTalkInfoHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, \"Venue:\"), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"8\",\n    sizeSm: \"8\",\n    className: \"progTalkInfoData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }, programmeTalk.venue)), /*#__PURE__*/React.createElement(IonRow, {\n    class: \"ion-justify-content-center\",\n    style: {\n      marginTop: \"10%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    size: \"large\",\n    id: \"registerProgTalkBtn\",\n    type: \"submit\",\n    onClick: () => addToSchedule(programmeTalk),\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }, \"REGISTER\"))))));\n};\n\nexport default ProgTalkInfo;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/components/OpenHouseProgrammes/ProgTalkInfo.tsx"],"names":["IonGrid","IonRow","IonCol","IonButton","IonPage","IonContent","IonAlert","IonHeader","React","useState","useEffect","firebase","TopNav","db","useAuth","toDateObject","ProgTalkInfo","match","userID","alert","setAlert","registerSuccess","registerFail","loading","buttonDisabled","setButtonDisabled","programmeTalk","setProgrammeTalk","addToSchedule","programme","collection","doc","get","then","snapshot","registered","data","registeredProgrammes","length","check","forEach","item","itemType","split","onSnapshot","date","progStart","startTime","progEnd","endTime","itemStart","itemEnd","setTimeout","update","firestore","FieldValue","arrayUnion","id","e","console","log","fetchData","talkRef","params","talkName","awardingUni","venue","marginTop"],"mappings":"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","sourcesContent":["import { IonGrid, IonRow, IonCol, IonButton, IonPage, IonContent, IonAlert, IonHeader } from '@ionic/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport firebase from 'firebase';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/ProgrammeTalks.css';\r\nimport TopNav from '../TopNav';\r\nimport { db } from '../../firebase';\r\nimport { useAuth } from '../../modules/auth';\r\nimport { toDateObject } from '../../modules/convert';\r\n\r\ninterface RouteParams extends RouteComponentProps<{\r\n    id: string;\r\n}> { }\r\n\r\nconst ProgTalkInfo: React.FC<RouteParams> = ({match}) => {\r\n    const { userID } = useAuth();\r\n\r\n    const [alert, setAlert] = useState({ registerSuccess: false, registerFail: false, loading: false });\r\n    const [buttonDisabled, setButtonDisabled] = useState(false);\r\n    const [programmeTalk,setProgrammeTalk] = useState<any>([]);\r\n\r\n    const addToSchedule = async (programme: any) => {\r\n        try {\r\n            setAlert({ registerSuccess: false, registerFail: false, loading: true });\r\n\r\n            await db.collection('PersonalScheduler').doc(userID).get().then((snapshot: any) => {\r\n                const registered = snapshot.data().registeredProgrammes;\r\n                \r\n                if (registered != null) {\r\n                    if (registered.length > 0) {\r\n                        let check = false;\r\n\r\n                        registered.forEach((item: any) => {\r\n                            const itemType = item.split(\"-\");\r\n\r\n                            switch (itemType[0]) {\r\n                                case \"talk\":\r\n                                    db.collection('ProgrammeTalks').doc(item).onSnapshot((doc: any) => {\r\n\r\n                                        if (programme.date === doc.data().date) {\r\n\r\n                                            const progStart = toDateObject(programme.date, programme.startTime), progEnd = toDateObject(programme.date, programme.endTime);\r\n                                            const itemStart = toDateObject(doc.data().date, doc.data().startTime), itemEnd = toDateObject(doc.data().date, doc.data().endTime);\r\n\r\n                                            if ((progStart >= itemStart && progStart < itemEnd) || (progEnd > itemStart && progEnd <= itemEnd)) {\r\n                                                check = true;\r\n                                            }\r\n                                        }\r\n                                    });\r\n\r\n                                    break;\r\n\r\n                                case \"tour\":\r\n                                    db.collection('GuidedTours').doc(item).onSnapshot((doc: any) => {\r\n\r\n                                        if (programme.date === doc.data().date) {\r\n\r\n                                            const progStart = toDateObject(programme.date, programme.startTime), progEnd = toDateObject(programme.date, programme.endTime);\r\n                                            const itemStart = toDateObject(doc.data().date, doc.data().startTime), itemEnd = toDateObject(doc.data().date, doc.data().endTime);\r\n\r\n                                            if ((progStart >= itemStart && progStart < itemEnd) || (progEnd > itemStart && progEnd <= itemEnd)) {\r\n                                                check = true;\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    \r\n                                    break;\r\n\r\n                                case \"performance\":\r\n                                    db.collection('Performances').doc(item).onSnapshot((doc: any) => {\r\n\r\n                                        if (programme.date === doc.data().date) {\r\n\r\n                                            const progStart = toDateObject(programme.date, programme.startTime), progEnd = toDateObject(programme.date, programme.endTime);\r\n                                            const itemStart = toDateObject(doc.data().date, doc.data().startTime), itemEnd = toDateObject(doc.data().date, doc.data().endTime);\r\n\r\n                                            if ((progStart >= itemStart && progStart < itemEnd) || (progEnd > itemStart && progEnd <= itemEnd)) {\r\n                                                check = true;\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    \r\n                                    break;\r\n\r\n                                default:\r\n                            }\r\n                        });\r\n\r\n                        setTimeout(async () => {\r\n                            if (check) {\r\n                                setAlert({ registerSuccess: false, registerFail: true, loading: false });\r\n                            } else {\r\n                                await db.collection('PersonalScheduler').doc(userID).update({\r\n                                    registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id)\r\n                                });\r\n                                setAlert({ registerSuccess: true, registerFail: false, loading: false });\r\n                            };\r\n\r\n                            check = false;\r\n                        }, 500);\r\n\r\n                    } else {\r\n                        db.collection('PersonalScheduler').doc(userID).update({\r\n                            registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id)\r\n                        });\r\n                        setAlert({ registerSuccess: true, registerFail: false, loading: false });\r\n                    }\r\n\r\n                } else {\r\n                    db.collection('PersonalScheduler').doc(userID).update({\r\n                        registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id)\r\n                    });\r\n                    setAlert({ registerSuccess: true, registerFail: false, loading: false });\r\n                }\r\n            });\r\n\r\n        } catch (e) {\r\n            setAlert({ registerSuccess: false, registerFail: false, loading: false });\r\n            return console.log(e);\r\n        }\r\n    };\r\n\r\n    const fetchData = async () =>{\r\n        const talkRef = db.collection('ProgrammeTalks').doc(match.params.id);\r\n        const doc: any =  (await talkRef.get()).data();\r\n        setProgrammeTalk(doc);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        db.collection('PersonalScheduler').doc(userID).get().then((snapshot: any) => {\r\n            const registered = snapshot.data().registeredProgrammes;\r\n            \r\n            if (registered != null) {\r\n                if (registered.length > 0) {\r\n\r\n                    registered.forEach((item: any) => {\r\n                        if (item === match.params.id)\r\n                            setButtonDisabled(true);\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IonAlert\r\n                isOpen={alert.registerSuccess}\r\n                onDidDismiss={() => setAlert({ registerSuccess: false, registerFail: false, loading: false })}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Successfully Registered'}\r\n                message={'You have successfully registered for the programme talk and it has been successfully added to My Schedule.'}\r\n                buttons={['Close']}\r\n             ></IonAlert>\r\n\r\n            <IonAlert\r\n                isOpen={alert.registerFail}\r\n                onDidDismiss={() => setAlert({ registerSuccess: false, registerFail: false, loading: false })}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Registration Unsuccessful'}\r\n                message={'There exists an open house programme in your scheduler at this timing. Please remove the existing programme from your scheduler first!'}\r\n                buttons={['Close']}\r\n             ></IonAlert>\r\n\r\n            <IonPage>\r\n                <IonHeader>\r\n                    <TopNav title=\"Programme Talks\" route=\"/u/openHouseMain/programmeTalks\" backarrow={ true } hamburger={ true } />\r\n                </IonHeader>\r\n                \r\n                <IonContent fullscreen className=\"progTalkIonContent\">\r\n                    <IonGrid id=\"progTalkInfoGrid\">\r\n                        {/* Programme Talk */}\r\n                        <IonRow>\r\n                            <IonCol size=\"4\" sizeSm=\"4\" className=\"progTalkInfoHeader\">\r\n                                Programme Talk:\r\n                            </IonCol>\r\n\r\n                            <IonCol size=\"8\" sizeSm=\"8\" className=\"progTalkInfoData\">\r\n                                {programmeTalk.talkName}\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        {/* Awarding Uni */}\r\n                        <IonRow>\r\n                            <IonCol size=\"4\" sizeSm=\"4\" className=\"progTalkInfoHeader\">\r\n                                Awarding University:\r\n                            </IonCol>\r\n\r\n                            <IonCol size=\"8\" sizeSm=\"8\" className=\"progTalkInfoData\">\r\n                                {programmeTalk.awardingUni}\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        {/* Date */}\r\n                        <IonRow>\r\n                            <IonCol size=\"4\" sizeSm=\"4\" className=\"progTalkInfoHeader\">\r\n                                Date:\r\n                            </IonCol>\r\n\r\n                            <IonCol size=\"8\" sizeSm=\"8\" className=\"progTalkInfoData\">\r\n                                {programmeTalk.date}\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        {/* Time */}\r\n                        <IonRow>\r\n                            <IonCol size=\"4\" sizeSm=\"4\" className=\"progTalkInfoHeader\">\r\n                                Time:\r\n                            </IonCol>\r\n\r\n                            <IonCol size=\"8\" sizeSm=\"8\" className=\"progTalkInfoData\">\r\n                                {programmeTalk.startTime+\" to \"+programmeTalk.endTime}\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        {/* Venue */}\r\n                        <IonRow>\r\n                            <IonCol size=\"4\" sizeSm=\"4\" className=\"progTalkInfoHeader\">\r\n                                Venue:\r\n                            </IonCol>\r\n\r\n                            <IonCol size=\"8\" sizeSm=\"8\" className=\"progTalkInfoData\">\r\n                                {programmeTalk.venue}\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        <IonRow class=\"ion-justify-content-center\" style={{marginTop:\"10%\"}}>\r\n                            <IonButton size=\"large\" id=\"registerProgTalkBtn\" type=\"submit\" onClick={() => addToSchedule(programmeTalk)} disabled={buttonDisabled}>REGISTER</IonButton>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                    \r\n\r\n                </IonContent>\r\n            </IonPage>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ProgTalkInfo;"]},"metadata":{},"sourceType":"module"}