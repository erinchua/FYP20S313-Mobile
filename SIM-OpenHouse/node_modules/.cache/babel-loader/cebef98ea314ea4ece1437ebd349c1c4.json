{"ast":null,"code":"import { db } from \"./firebase\";\nexport function isConflict(progItem, uid) {\n  //let registered: any;\n  db.collection('PersonalScheduler').doc(uid).onSnapshot(snapshot => {\n    const registered = snapshot.data().registeredProgrammes;\n    registered.forEach(item => {\n      const itemType = item.split(\"-\");\n\n      switch (itemType[0]) {\n        case \"talk\":\n          return db.collection('ProgrammeTalks').doc(item).onSnapshot(doc => {\n            //console.log(doc.data().startTime.slice(-2, doc.data().startTime.length))\n            if (progItem.date == doc.data().date) {\n              //console.log(true)\n              let progStart = Number(progItem.startTime.split(\":\")[0]),\n                  progEnd = Number(progItem.endTime.split(\":\")[0]);\n              let itemStart = Number(doc.data().startTime.split(\":\")[0]),\n                  itemEnd = Number(doc.data().endTime.split(\":\")[0]); //console.log(progStart, itemStart)\n\n              if (progItem.startTime.slice(-2, progItem.startTime.length) == \"PM\") progStart += 12;\n              if (progItem.endTime.slice(-2, progItem.startTime.length) == \"PM\") progStart += 12;\n              if (doc.data().startTime.slice(-2, doc.data().startTime.length) == \"PM\") progStart += 12;\n              if (doc.data().endTime.slice(-2, doc.data().endTime.length) == \"PM\") progStart += 12;\n              if (progStart >= itemStart && progStart < itemEnd || progEnd > itemStart && progEnd <= itemEnd) console.log(\"conflict\", true);\n            }\n          });\n\n        case \"tour\": //return db.collection('GuidedTours').doc(item).onSnapshot(doc => {});\n\n        case \"performance\": //return db.collection('Performances').doc(item).onSnapshot(doc => {});\n\n        default:\n          return;\n      }\n    });\n  }); //progitem is item from main collection\n  //get list of registered items\n  //get their date and time\n  //compare with progitem\n}","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/checker.ts"],"names":["db","isConflict","progItem","uid","collection","doc","onSnapshot","snapshot","registered","data","registeredProgrammes","forEach","item","itemType","split","date","progStart","Number","startTime","progEnd","endTime","itemStart","itemEnd","slice","length","console","log"],"mappings":"AAAA,SAASA,EAAT,QAAmB,YAAnB;AAEA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAAmCC,GAAnC,EAA6C;AAChD;AAEAH,EAAAA,EAAE,CAACI,UAAH,CAAc,mBAAd,EAAmCC,GAAnC,CAAuCF,GAAvC,EAA4CG,UAA5C,CAAwDC,QAAD,IAAmB;AACtE,UAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,oBAAnC;AAEAF,IAAAA,UAAU,CAACG,OAAX,CAAoBC,IAAD,IAAe;AAC9B,YAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAjB;;AAEA,cAAQD,QAAQ,CAAC,CAAD,CAAhB;AACI,aAAK,MAAL;AACI,iBAAOb,EAAE,CAACI,UAAH,CAAc,gBAAd,EAAgCC,GAAhC,CAAoCO,IAApC,EAA0CN,UAA1C,CAAsDD,GAAD,IAAc;AACtE;AACA,gBAAIH,QAAQ,CAACa,IAAT,IAAiBV,GAAG,CAACI,IAAJ,GAAWM,IAAhC,EAAsC;AAClC;AACA,kBAAIC,SAAS,GAAGC,MAAM,CAACf,QAAQ,CAACgB,SAAT,CAAmBJ,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAD,CAAtB;AAAA,kBAA0DK,OAAO,GAAGF,MAAM,CAACf,QAAQ,CAACkB,OAAT,CAAiBN,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAD,CAA1E;AACA,kBAAIO,SAAS,GAAGJ,MAAM,CAACZ,GAAG,CAACI,IAAJ,GAAWS,SAAX,CAAqBJ,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAD,CAAtB;AAAA,kBAA4DQ,OAAO,GAAGL,MAAM,CAACZ,GAAG,CAACI,IAAJ,GAAWW,OAAX,CAAmBN,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAD,CAA5E,CAHkC,CAIlC;;AACA,kBAAIZ,QAAQ,CAACgB,SAAT,CAAmBK,KAAnB,CAAyB,CAAC,CAA1B,EAA6BrB,QAAQ,CAACgB,SAAT,CAAmBM,MAAhD,KAA2D,IAA/D,EAAqER,SAAS,IAAI,EAAb;AACrE,kBAAId,QAAQ,CAACkB,OAAT,CAAiBG,KAAjB,CAAuB,CAAC,CAAxB,EAA2BrB,QAAQ,CAACgB,SAAT,CAAmBM,MAA9C,KAAyD,IAA7D,EAAmER,SAAS,IAAI,EAAb;AACnE,kBAAIX,GAAG,CAACI,IAAJ,GAAWS,SAAX,CAAqBK,KAArB,CAA2B,CAAC,CAA5B,EAA+BlB,GAAG,CAACI,IAAJ,GAAWS,SAAX,CAAqBM,MAApD,KAA+D,IAAnE,EAAyER,SAAS,IAAI,EAAb;AACzE,kBAAIX,GAAG,CAACI,IAAJ,GAAWW,OAAX,CAAmBG,KAAnB,CAAyB,CAAC,CAA1B,EAA6BlB,GAAG,CAACI,IAAJ,GAAWW,OAAX,CAAmBI,MAAhD,KAA2D,IAA/D,EAAqER,SAAS,IAAI,EAAb;AAErE,kBAAKA,SAAS,IAAIK,SAAb,IAA0BL,SAAS,GAAGM,OAAvC,IAAoDH,OAAO,GAAGE,SAAV,IAAuBF,OAAO,IAAIG,OAA1F,EACIG,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,IAAxB;AACP;AACJ,WAfM,CAAP;;AAgBJ,aAAK,MAAL,CAlBJ,CAmBQ;;AACJ,aAAK,aAAL,CApBJ,CAqBQ;;AACJ;AACI;AAvBR;AAyBH,KA5BD;AA6BH,GAhCD,EAHgD,CAqChD;AACA;AACA;AACA;AACH","sourcesContent":["import { db } from \"./firebase\";\r\n\r\nexport function isConflict(progItem: any, uid: any) {\r\n    //let registered: any;\r\n\r\n    db.collection('PersonalScheduler').doc(uid).onSnapshot((snapshot: any) => {\r\n        const registered = snapshot.data().registeredProgrammes;\r\n    \r\n        registered.forEach((item: any) => {\r\n            const itemType = item.split(\"-\");\r\n\r\n            switch (itemType[0]) {\r\n                case \"talk\":\r\n                    return db.collection('ProgrammeTalks').doc(item).onSnapshot((doc: any) => {\r\n                        //console.log(doc.data().startTime.slice(-2, doc.data().startTime.length))\r\n                        if (progItem.date == doc.data().date) {\r\n                            //console.log(true)\r\n                            let progStart = Number(progItem.startTime.split(\":\")[0]), progEnd = Number(progItem.endTime.split(\":\")[0]);\r\n                            let itemStart = Number(doc.data().startTime.split(\":\")[0]), itemEnd = Number(doc.data().endTime.split(\":\")[0]);\r\n                            //console.log(progStart, itemStart)\r\n                            if (progItem.startTime.slice(-2, progItem.startTime.length) == \"PM\") progStart += 12;\r\n                            if (progItem.endTime.slice(-2, progItem.startTime.length) == \"PM\") progStart += 12;\r\n                            if (doc.data().startTime.slice(-2, doc.data().startTime.length) == \"PM\") progStart += 12;\r\n                            if (doc.data().endTime.slice(-2, doc.data().endTime.length) == \"PM\") progStart += 12;\r\n\r\n                            if ((progStart >= itemStart && progStart < itemEnd) || (progEnd > itemStart && progEnd <= itemEnd))\r\n                                console.log(\"conflict\", true)\r\n                        }\r\n                    });\r\n                case \"tour\":\r\n                    //return db.collection('GuidedTours').doc(item).onSnapshot(doc => {});\r\n                case \"performance\":\r\n                    //return db.collection('Performances').doc(item).onSnapshot(doc => {});\r\n                default:\r\n                    return;\r\n            }\r\n        });\r\n    });\r\n\r\n    //progitem is item from main collection\r\n    //get list of registered items\r\n    //get their date and time\r\n    //compare with progitem\r\n}"]},"metadata":{},"sourceType":"module"}