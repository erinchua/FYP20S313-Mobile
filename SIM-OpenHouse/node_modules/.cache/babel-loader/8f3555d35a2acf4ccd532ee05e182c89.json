{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\OpenHouseProgrammes\\\\ProgrammeTalks.tsx\";\nimport { IonButton, IonButtons, IonCol, IonContent, IonGrid, IonHeader, IonPage, IonPopover, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/Global.css';\nimport '../../css/ProgrammeTalks.css';\nimport TopNav from '../../components/TopNav';\nimport ProgTalkSchedule from '../../components/OpenHouseProgrammes/ProgTalkSchedule';\nimport ProgTalkLiveTalks from '../../components/OpenHouseProgrammes/ProgTalkLiveTalks';\nimport ProgTalkPastRec from '../../components/OpenHouseProgrammes/ProgTalkPastRec';\nimport FilterPopoverContent from '../../components/FilterPopoverContent';\nimport { db } from '../../firebase';\n\nconst ProgrammeTalks = () => {\n  const [tab, setTab] = useState(\"schedule\");\n  const [dayNum, setDayNum] = useState(\"day1\");\n\n  const handleDayOne = () => {\n    setDayNum(\"day1\");\n  };\n\n  const handleDayTwo = () => {\n    setDayNum(\"day2\");\n  };\n\n  const handleSchedule = () => {\n    setTab(\"schedule\");\n  };\n\n  const handleLiveTalks = () => {\n    setTab(\"liveTalks\");\n  };\n\n  const handlePastRec = () => {\n    setTab(\"pastRecordings\");\n  };\n\n  const [openhouseDates, setOpenhouseDates] = useState([]);\n  const [initialProgtalk, setIntialProgTalk] = useState([]);\n  const [programmeTalk, setProgrammeTalk] = useState([]);\n  const [recordedTalk, setRecordedTalk] = useState([]);\n  const [liveTalk, setLiveTalk] = useState([]);\n  useEffect(() => {\n    const dates = [];\n    db.collection(\"Openhouse\").get().then(snapshot => {\n      snapshot.forEach(doc => {\n        const data = doc.get('day');\n\n        if (!Array.isArray(data)) {\n          for (var i = 0; i < Object.keys(data).length; i++) {\n            const date = data[Object.keys(data)[i]].date;\n            dates.push(date);\n          }\n        }\n      });\n      setOpenhouseDates(dates);\n    }).catch(error => console.log(error));\n    db.collection(\"ProgrammeTalks\").get().then(snapshot => {\n      const programmeTalk = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        programmeTalk.push(data);\n      });\n      setIntialProgTalk(programmeTalk);\n      setProgrammeTalk(programmeTalk);\n    }).catch(error => console.log(error));\n  }, []);\n  useEffect(() => {\n    const liveTalk = initialProgtalk.filter(talk => {\n      return talk.isLive === true;\n    });\n    const recordedTalk = initialProgtalk.filter(talk => {\n      return talk.hasRecording === true;\n    });\n    setRecordedTalk(recordedTalk);\n    setLiveTalk(liveTalk);\n  }, [initialProgtalk]);\n  /* Display Filter Menu Popover */\n\n  const [showProgTalkFilterPopover, setShowProgTalkFilterPopover] = useState({\n    open: false,\n    event: undefined\n  }); //For Filters\n\n  const [filterCondition, setFilterCondition] = useState({\n    mos: [],\n    discipline: ['Arts & Social Sciences', 'Business', 'IT & Computer Science', 'Nursing', 'Specialty'],\n    uni: [],\n    acadLvl: [],\n    entry: [],\n    subDisc: []\n  });\n\n  const updateScheduleTalks = data => {\n    setProgrammeTalk(data);\n  };\n\n  const updateRecTalks = data => {\n    setRecordedTalk(data);\n  };\n\n  const filterTalks = async (condition, callback) => {\n    const initialList = [];\n    let filteredList = [];\n    let segmentFilter = [];\n    console.log(\"In filterProgrammes, inputs:\" + JSON.stringify(condition));\n    await db.collection('ProgrammeTalks').get().then(snapshot => {\n      snapshot.docs.forEach(doc => {\n        const data = doc.data();\n        console.log(JSON.stringify(data));\n        initialList.push(data);\n      });\n    });\n    console.log(initialList.length + JSON.stringify(initialList));\n    Object.entries(condition).map(([key, value]) => {\n      if (key == 'discipline') {\n        let discFiltered = [];\n\n        if (value.length > 0 && value.length <= 4) {\n          console.log(\"Entered discipline filter\");\n          value.forEach(value => {\n            segmentFilter = initialList.filter(programme => programme.discipline == value);\n            console.log(\"filtering discipline\" + value + segmentFilter.length + JSON.stringify(segmentFilter));\n            discFiltered = discFiltered.concat(segmentFilter);\n          });\n          filteredList = discFiltered;\n        } else {\n          filteredList = initialList;\n        }\n      } else if (key == 'uni') {\n        let uniFiltered = [];\n\n        if (value.length > 0) {\n          value.forEach(value => {\n            segmentFilter = filteredList.filter(programme => programme.awardingUni == value);\n            console.log(\"filtering uni\" + value + segmentFilter.length + JSON.stringify(segmentFilter));\n            uniFiltered = uniFiltered.concat(segmentFilter);\n          });\n          filteredList = uniFiltered;\n        }\n      }\n    }); // console.log(\"New List are \" + filteredList.length + JSON.stringify(filteredList))\n\n    callback(filteredList);\n  };\n\n  const filterRecTalks = async (condition, callback) => {\n    const initialList = [];\n    let filteredList = [];\n    let segmentFilter = [];\n    console.log(\"In filterProgrammes, inputs:\" + JSON.stringify(condition));\n    await db.collection('ProgrammeTalks').where(\"hasRecording\", '==', true).get().then(snapshot => {\n      snapshot.docs.forEach(doc => {\n        const data = doc.data();\n        console.log(JSON.stringify(data));\n        initialList.push(data);\n      });\n    });\n    console.log(initialList.length + JSON.stringify(initialList));\n    Object.entries(condition).map(([key, value]) => {\n      if (key == 'discipline') {\n        let discFiltered = [];\n\n        if (value.length > 0 && value.length <= 4) {\n          console.log(\"Entered discipline filter\");\n          value.forEach(value => {\n            segmentFilter = initialList.filter(programme => programme.discipline == value);\n            console.log(\"filtering discipline\" + value + segmentFilter.length + JSON.stringify(segmentFilter));\n            discFiltered = discFiltered.concat(segmentFilter);\n          });\n          filteredList = discFiltered;\n        } else {\n          filteredList = initialList;\n        }\n      } else if (key == 'uni') {\n        let uniFiltered = [];\n\n        if (value.length > 0) {\n          value.forEach(value => {\n            segmentFilter = filteredList.filter(programme => programme.awardingUni == value);\n            console.log(\"filtering uni\" + value + segmentFilter.length + JSON.stringify(segmentFilter));\n            uniFiltered = uniFiltered.concat(segmentFilter); // console.log(\"current list\" + JSON.stringify(filteredList))\n          });\n          filteredList = uniFiltered;\n        }\n      }\n    }); // console.log(\"New List are \" + filteredList.length + JSON.stringify(filteredList))\n\n    callback(filteredList);\n  };\n\n  const onUpdateFilter = (mosFilter, discFilter, uniFilter, acadLvlFilter, entryFilter, subDiscFilter) => {\n    setFilterCondition(prevState => {\n      let filter = { ...prevState\n      };\n      Object.keys(filter).map(key => {\n        if (key == 'mos') filter[key] = mosFilter;\n        if (key == 'discipline') filter[key] = discFilter;\n        if (key == 'uni') filter[key] = uniFilter;\n        if (key == 'acadLvl') filter[key] = acadLvlFilter;\n        if (key == 'entry') filter[key] = entryFilter;\n        if (key == 'subDisc') filter[key] = subDiscFilter;\n      });\n      return filter;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Programme Talks\",\n    route: \"/u/openHouseMain\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(IonToolbar, {\n    className: \"segmentHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: tab,\n    className: \"segmentHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"schedule\",\n    className: \"segmentBtn ion-text-wrap\",\n    id: \"progTalkSchedule\",\n    onClick: handleSchedule,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, \"Schedule\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"liveTalks\",\n    className: \"segmentBtn ion-text-wrap\",\n    id: \"progTalkLiveTalk\",\n    onClick: handleLiveTalks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, \"Live Talks\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"pastRecordings\",\n    className: \"segmentBtn ion-text-wrap\",\n    id: \"progTalkPastRec\",\n    onClick: handlePastRec,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }, \"Past Recordings\")))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"progTalkIonContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }\n  }, tab === \"schedule\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"progTalk-IonRowCol progTalkIonGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    onIonChange: e => console.log(`${e.detail.value}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 21\n    }\n  }, \"Day 1: \", openhouseDates[0]), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }, \"Day 2: \", openhouseDates[1])))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    className: \"filterHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    className: \"filterHeaderToolBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"end\",\n    id: \"filterIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    onClick: e => {\n      setShowProgTalkFilterPopover({\n        open: true,\n        event: e.nativeEvent\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: faFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 25\n    }\n  }))))))), /*#__PURE__*/React.createElement(ProgTalkSchedule, {\n    day1: dayNum,\n    day2: dayNum,\n    programmeTalk: programmeTalk,\n    openhouseDates: openhouseDates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  })) : \"\", tab === \"liveTalks\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"progTalk-IonRowCol progTalkIonGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    onIonChange: e => console.log(`${e.detail.value}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 23\n    }\n  }, \"Day 1: \", openhouseDates[0]), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 23\n    }\n  }, \"Day 2: \", openhouseDates[1])))))), /*#__PURE__*/React.createElement(ProgTalkLiveTalks, {\n    day1: dayNum,\n    day2: dayNum,\n    liveTalk: liveTalk,\n    openhouseDates: openhouseDates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  })) : \"\", tab === \"pastRecordings\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"progTalk-IonRowCol progTalkIonGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    onIonChange: e => console.log(`${e.detail.value}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 23\n    }\n  }, \"Day 1: \", openhouseDates[0]), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 23\n    }\n  }, \"Day 2: \", openhouseDates[1]))))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    className: \"filterHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    className: \"filterHeaderToolBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"end\",\n    id: \"filterIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    onClick: e => {\n      setShowProgTalkFilterPopover({\n        open: true,\n        event: e.nativeEvent\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: faFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 25\n    }\n  }))))))), /*#__PURE__*/React.createElement(ProgTalkPastRec, {\n    day1: dayNum,\n    day2: dayNum,\n    recordedTalk: recordedTalk,\n    openhouseDates: openhouseDates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  })) : \"\", /*#__PURE__*/React.createElement(IonPopover, {\n    id: \"progCourseFilterPopover\",\n    cssClass: \"progTalkFilterPopover\",\n    isOpen: showProgTalkFilterPopover.open,\n    event: showProgTalkFilterPopover.event,\n    onDidDismiss: e => setShowProgTalkFilterPopover({\n      open: false,\n      event: undefined\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }\n  }, tab === \"schedule\" ? /*#__PURE__*/React.createElement(FilterPopoverContent, {\n    filterFunction: filterTalks,\n    programmes: programmeTalk,\n    filterFor: \"progTalk@SIM\",\n    filterCondition: filterCondition,\n    setState: updateScheduleTalks,\n    onUpdateFilter: onUpdateFilter,\n    discipline: \"\",\n    category: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }\n  }) : '', tab === \"pastRecordings\" ? /*#__PURE__*/React.createElement(FilterPopoverContent, {\n    filterFunction: filterRecTalks,\n    programmes: recordedTalk,\n    filterFor: \"progTalk@SIM\",\n    filterCondition: filterCondition,\n    setState: updateRecTalks,\n    onUpdateFilter: onUpdateFilter,\n    discipline: \"\",\n    category: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 13\n    }\n  }) : '')));\n};\n\nexport default withRouter(ProgrammeTalks);","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/OpenHouseProgrammes/ProgrammeTalks.tsx"],"names":["IonButton","IonButtons","IonCol","IonContent","IonGrid","IonHeader","IonPage","IonPopover","IonRow","IonSegment","IonSegmentButton","IonToolbar","React","useEffect","useState","withRouter","FontAwesomeIcon","faFilter","TopNav","ProgTalkSchedule","ProgTalkLiveTalks","ProgTalkPastRec","FilterPopoverContent","db","ProgrammeTalks","tab","setTab","dayNum","setDayNum","handleDayOne","handleDayTwo","handleSchedule","handleLiveTalks","handlePastRec","openhouseDates","setOpenhouseDates","initialProgtalk","setIntialProgTalk","programmeTalk","setProgrammeTalk","recordedTalk","setRecordedTalk","liveTalk","setLiveTalk","dates","collection","get","then","snapshot","forEach","doc","data","Array","isArray","i","Object","keys","length","date","push","catch","error","console","log","filter","talk","isLive","hasRecording","showProgTalkFilterPopover","setShowProgTalkFilterPopover","open","event","undefined","filterCondition","setFilterCondition","mos","discipline","uni","acadLvl","entry","subDisc","updateScheduleTalks","updateRecTalks","filterTalks","condition","callback","initialList","filteredList","segmentFilter","JSON","stringify","docs","entries","map","key","value","discFiltered","programme","concat","uniFiltered","awardingUni","filterRecTalks","where","onUpdateFilter","mosFilter","discFilter","uniFilter","acadLvlFilter","entryFilter","subDiscFilter","prevState","e","detail","nativeEvent"],"mappings":"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","sourcesContent":["import { IonButton, IonButtons, IonCol, IonContent, IonGrid, IonHeader, IonPage, IonPopover, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/ProgrammeTalks.css';\r\nimport TopNav from '../../components/TopNav';\r\nimport ProgTalkSchedule from '../../components/OpenHouseProgrammes/ProgTalkSchedule';\r\nimport ProgTalkLiveTalks from '../../components/OpenHouseProgrammes/ProgTalkLiveTalks';\r\nimport ProgTalkPastRec from '../../components/OpenHouseProgrammes/ProgTalkPastRec';\r\nimport FilterPopoverContent, { FilterCondition } from '../../components/FilterPopoverContent';\r\nimport { db } from '../../firebase';\r\nimport { TalkFilter } from '../../components/FilterPopoverContent'\r\nimport { Programme } from '../Study@SIM/Study@SIMProgInfo'\r\n\r\nexport interface ProgrammeTalk {\r\n\tid: string,\r\n\ttalkName: string,\r\n\tawardingUni: string,\r\n\tdetails: string,\r\n\tdiscipline: string,\r\n\tdate: string,\r\n\tstartTime: string,\r\n\tendTime: string,\r\n\tvenue: string,\r\n\tcapacityLimit: number,\r\n\tnoRegistered: number,\r\n\tisLive: boolean,\r\n\thasRecording: boolean,\r\n\tlink: string\r\n}\r\nconst ProgrammeTalks: React.FC = () => {\r\n\tconst [tab, setTab] = useState(\"schedule\");\r\n\tconst [dayNum, setDayNum] = useState(\"day1\");\r\n\r\n\r\n\tconst handleDayOne = () => {\r\n\t\tsetDayNum(\"day1\");\r\n\t};\r\n\r\n\tconst handleDayTwo = () => {\r\n\t\tsetDayNum(\"day2\");\r\n\t};\r\n\r\n\tconst handleSchedule = () => {\r\n\t\tsetTab(\"schedule\");\r\n\t};\r\n\r\n\tconst handleLiveTalks = () => {\r\n\t\tsetTab(\"liveTalks\");\r\n\t};\r\n\r\n\tconst handlePastRec = () => {\r\n\t\tsetTab(\"pastRecordings\");\r\n\t};\r\n\r\n\tconst [openhouseDates, setOpenhouseDates] = useState([]);\r\n\tconst [initialProgtalk, setIntialProgTalk] = useState<any[]>([]);\r\n\tconst [programmeTalk, setProgrammeTalk] = useState<any[]>([]);\r\n\tconst [recordedTalk, setRecordedTalk] = useState<ProgrammeTalk[]>([]);\r\n\tconst [liveTalk, setLiveTalk] = useState<ProgrammeTalk[]>([]);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst dates: any = [];\r\n\r\n\t\tdb.collection(\"Openhouse\")\r\n\t\t\t.get()\r\n\t\t\t.then((snapshot) => {\r\n\t\t\t\tsnapshot.forEach((doc) => {\r\n\t\t\t\t\tconst data = doc.get('day')\r\n\t\t\t\t\tif (!Array.isArray(data)) {\r\n\t\t\t\t\t\tfor (var i = 0; i < Object.keys(data).length; i++) {\r\n\t\t\t\t\t\t\tconst date = data[Object.keys(data)[i]].date;\r\n\t\t\t\t\t\t\tdates.push(date)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetOpenhouseDates(dates);\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(error));\r\n\r\n\t\tdb.collection(\"ProgrammeTalks\")\r\n\t\t\t.get()\r\n\t\t\t.then((snapshot) => {\r\n\t\t\t\tconst programmeTalk: any = [];\r\n\t\t\t\tsnapshot.forEach((doc) => {\r\n\t\t\t\t\tconst data = doc.data();\r\n\t\t\t\t\tprogrammeTalk.push(data);\r\n\t\t\t\t});\r\n\t\t\t\tsetIntialProgTalk(programmeTalk)\r\n\t\t\t\tsetProgrammeTalk(programmeTalk);\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(error));\r\n\r\n\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst liveTalk = initialProgtalk.filter(talk => { return talk.isLive === true })\r\n\t\tconst recordedTalk = initialProgtalk.filter(talk => { return talk.hasRecording === true })\r\n\t\tsetRecordedTalk(recordedTalk)\r\n\t\tsetLiveTalk(liveTalk)\r\n\r\n\t}, [initialProgtalk])\r\n\r\n\t/* Display Filter Menu Popover */\r\n\tconst [showProgTalkFilterPopover, setShowProgTalkFilterPopover] = useState<{ open: boolean, event: Event | undefined }>({\r\n\t\topen: false,\r\n\t\tevent: undefined,\r\n\t});\r\n\r\n\t//For Filters\r\n\r\n\tconst [filterCondition, setFilterCondition] = useState<FilterCondition>({\r\n\t\tmos: [],\r\n\t\tdiscipline: ['Arts & Social Sciences', 'Business', 'IT & Computer Science', 'Nursing', 'Specialty'],\r\n\t\tuni: [],\r\n\t\tacadLvl: [],\r\n\t\tentry: [],\r\n\t\tsubDisc: []\r\n\t})\r\n\r\n\tconst updateScheduleTalks = (data: ProgrammeTalk[]) => {\r\n\t\tsetProgrammeTalk(data)\r\n\t}\r\n\r\n\tconst updateRecTalks = (data: ProgrammeTalk[]) => {\r\n\t\tsetRecordedTalk(data)\r\n\t}\r\n\r\n\r\n\tconst filterTalks = async (condition: TalkFilter, callback: any) => {\r\n\r\n\t\tconst initialList: ProgrammeTalk[] = []\r\n\t\tlet filteredList: ProgrammeTalk[] = []\r\n\t\tlet segmentFilter: ProgrammeTalk[] = []\r\n\t\tconsole.log(\"In filterProgrammes, inputs:\" + JSON.stringify(condition))\r\n\t\tawait db.collection('ProgrammeTalks')\r\n\t\t\t.get()\r\n\t\t\t.then(snapshot => {\r\n\t\t\t\tsnapshot.docs.forEach((doc: any) => {\r\n\t\t\t\t\tconst data = doc.data()\r\n\t\t\t\t\tconsole.log(JSON.stringify(data))\r\n\t\t\t\t\tinitialList.push(data)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\tconsole.log(initialList.length + JSON.stringify(initialList))\r\n\t\tObject.entries(condition).map(([key, value]) => {\r\n\t\t\tif (key == 'discipline') {\r\n\t\t\t\tlet discFiltered: ProgrammeTalk[] = []\r\n\t\t\t\tif (value.length > 0 && value.length <= 4) {\r\n\t\t\t\t\tconsole.log(\"Entered discipline filter\")\r\n\t\t\t\t\tvalue.forEach((value: string) => {\r\n\t\t\t\t\t\tsegmentFilter = initialList.filter(programme => programme.discipline == value)\r\n\t\t\t\t\t\tconsole.log(\"filtering discipline\" + value + segmentFilter.length + JSON.stringify(segmentFilter))\r\n\t\t\t\t\t\tdiscFiltered = discFiltered.concat(segmentFilter)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tfilteredList = discFiltered\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfilteredList = initialList\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\telse if (key == 'uni') {\r\n\t\t\t\tlet uniFiltered: ProgrammeTalk[] = []\r\n\t\t\t\tif (value.length > 0) {\r\n\t\t\t\t\tvalue.forEach((value: string) => {\r\n\t\t\t\t\t\tsegmentFilter = filteredList.filter(programme => programme.awardingUni == value)\r\n\t\t\t\t\t\tconsole.log(\"filtering uni\" + value + segmentFilter.length + JSON.stringify(segmentFilter))\r\n\t\t\t\t\t\tuniFiltered = uniFiltered.concat(segmentFilter)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tfilteredList = uniFiltered\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t)\r\n\t\t// console.log(\"New List are \" + filteredList.length + JSON.stringify(filteredList))\r\n\t\tcallback(filteredList)\r\n\r\n\t}\r\n\r\n\tconst filterRecTalks = async (condition: TalkFilter, callback: any) => {\r\n\r\n\t\tconst initialList: ProgrammeTalk[] = []\r\n\t\tlet filteredList: ProgrammeTalk[] = []\r\n\t\tlet segmentFilter: ProgrammeTalk[] = []\r\n\t\tconsole.log(\"In filterProgrammes, inputs:\" + JSON.stringify(condition))\r\n\t\tawait db.collection('ProgrammeTalks')\r\n\t\t\t.where(\"hasRecording\", '==', true)\r\n\t\t\t.get()\r\n\t\t\t.then(snapshot => {\r\n\t\t\t\tsnapshot.docs.forEach((doc: any) => {\r\n\t\t\t\t\tconst data = doc.data()\r\n\t\t\t\t\tconsole.log(JSON.stringify(data))\r\n\t\t\t\t\tinitialList.push(data)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\tconsole.log(initialList.length + JSON.stringify(initialList))\r\n\t\tObject.entries(condition).map(([key, value]) => {\r\n\t\t\tif (key == 'discipline') {\r\n\t\t\t\tlet discFiltered: ProgrammeTalk[] = []\r\n\t\t\t\tif (value.length > 0 && value.length <= 4) {\r\n\t\t\t\t\tconsole.log(\"Entered discipline filter\")\r\n\t\t\t\t\tvalue.forEach((value: string) => {\r\n\t\t\t\t\t\tsegmentFilter = initialList.filter(programme => programme.discipline == value)\r\n\t\t\t\t\t\tconsole.log(\"filtering discipline\" + value + segmentFilter.length + JSON.stringify(segmentFilter))\r\n\t\t\t\t\t\tdiscFiltered = discFiltered.concat(segmentFilter)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tfilteredList = discFiltered\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfilteredList = initialList\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\telse if (key == 'uni') {\r\n\t\t\t\tlet uniFiltered: ProgrammeTalk[] = []\r\n\t\t\t\tif (value.length > 0) {\r\n\t\t\t\t\tvalue.forEach((value: string) => {\r\n\t\t\t\t\t\tsegmentFilter = filteredList.filter(programme => programme.awardingUni == value)\r\n\t\t\t\t\t\tconsole.log(\"filtering uni\" + value + segmentFilter.length + JSON.stringify(segmentFilter))\r\n\t\t\t\t\t\tuniFiltered = uniFiltered.concat(segmentFilter)\r\n\t\t\t\t\t\t// console.log(\"current list\" + JSON.stringify(filteredList))\r\n\t\t\t\t\t})\r\n\t\t\t\t\tfilteredList = uniFiltered\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t)\r\n\t\t// console.log(\"New List are \" + filteredList.length + JSON.stringify(filteredList))\r\n\t\tcallback(filteredList)\r\n\r\n\t}\r\n\r\n\tconst onUpdateFilter = (mosFilter: string[], discFilter: string[], uniFilter: string[], acadLvlFilter: string[], entryFilter: string[], subDiscFilter: string[]) => {\r\n\r\n\t\tsetFilterCondition(prevState => {\r\n\t\t\tlet filter = { ...prevState };\r\n\t\t\tObject.keys(filter).map(key => {\r\n\t\t\t\tif (key == 'mos')\r\n\t\t\t\t\tfilter[key] = mosFilter;\r\n\t\t\t\tif (key == 'discipline')\r\n\t\t\t\t\tfilter[key] = discFilter;\r\n\t\t\t\tif (key == 'uni')\r\n\t\t\t\t\tfilter[key] = uniFilter;\r\n\t\t\t\tif (key == 'acadLvl')\r\n\t\t\t\t\tfilter[key] = acadLvlFilter;\r\n\t\t\t\tif (key == 'entry')\r\n\t\t\t\t\tfilter[key] = entryFilter;\r\n\t\t\t\tif (key == 'subDisc')\r\n\t\t\t\t\tfilter[key] = subDiscFilter;\r\n\t\t\t})\r\n\t\t\treturn filter;\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<IonHeader>\r\n\t\t\t\t<TopNav title=\"Programme Talks\" route=\"/u/openHouseMain\" backarrow={true} hamburger={true} />\r\n\r\n\t\t\t\t<IonToolbar className=\"segmentHeader\">\r\n\t\t\t\t\t<IonSegment scrollable value={tab} className=\"segmentHeader\">\r\n\t\t\t\t\t\t<IonSegmentButton value=\"schedule\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkSchedule\" onClick={handleSchedule}>\r\n\t\t\t\t\t\t\tSchedule\r\n            </IonSegmentButton>\r\n\t\t\t\t\t\t<IonSegmentButton value=\"liveTalks\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkLiveTalk\" onClick={handleLiveTalks}>\r\n\t\t\t\t\t\t\tLive Talks\r\n            </IonSegmentButton>\r\n\t\t\t\t\t\t<IonSegmentButton value=\"pastRecordings\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkPastRec\" onClick={handlePastRec}>\r\n\t\t\t\t\t\t\tPast Recordings\r\n            </IonSegmentButton>\r\n          </IonSegment>\r\n        </IonToolbar>\r\n\r\n      </IonHeader>\r\n\r\n      <IonContent fullscreen className=\"progTalkIonContent\">\r\n\r\n        {/* Programme Talks Schedule */}\r\n        {tab === \"schedule\" ? (\r\n          <>\r\n            <IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n              <IonRow className=\"progTalk-IonRowCol\">\r\n                <IonToolbar>\r\n                  <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                    <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n                      Day 1: {openhouseDates[0]}\r\n                    </IonSegmentButton>\r\n                    <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n                      Day 2: {openhouseDates[1]}\r\n                    </IonSegmentButton>\r\n                  </IonSegment>\r\n                </IonToolbar>\r\n              </IonRow>\r\n\r\n              {/* Filter Button */}\r\n              <IonRow>\r\n                <IonHeader className=\"filterHeader\">\r\n                  <IonToolbar className=\"filterHeaderToolBar\">\r\n                    <IonButtons slot=\"end\" id=\"filterIcon\">\r\n                      <IonButton onClick={(e) => { setShowProgTalkFilterPopover({ open: true, event: e.nativeEvent }) }}>\r\n                        <FontAwesomeIcon size=\"lg\" icon={faFilter} />\r\n                      </IonButton>\r\n                    </IonButtons>\r\n                  </IonToolbar>\r\n                </IonHeader>\r\n              </IonRow>\r\n\r\n            </IonGrid>\r\n\r\n            <ProgTalkSchedule day1={dayNum} day2={dayNum} programmeTalk={programmeTalk} openhouseDates={openhouseDates} />\r\n          </>\r\n        ) : (\r\n            \"\"\r\n          )\r\n        }\r\n\r\n        {/* Live Talks */}\r\n        {tab === \"liveTalks\" ? (\r\n          <>\r\n            <IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n              <IonRow className=\"progTalk-IonRowCol\">\r\n                <IonCol className=\"progTalk-IonRowCol\">\r\n                  <IonToolbar>\r\n                    <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                      <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n                        Day 1: {openhouseDates[0]}\r\n                      </IonSegmentButton>\r\n                      <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n                        Day 2: {openhouseDates[1]}\r\n                      </IonSegmentButton>\r\n                    </IonSegment>\r\n                  </IonToolbar>\r\n                </IonCol>\r\n              </IonRow>\r\n            </IonGrid>\r\n\r\n            <ProgTalkLiveTalks day1={dayNum} day2={dayNum} liveTalk={liveTalk} openhouseDates={openhouseDates} />\r\n          </>\r\n        ) : (\"\")\r\n        }\r\n\r\n        {/* Past Recordings */}\r\n        {tab === \"pastRecordings\" ? (\r\n          <>\r\n            <IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n              <IonRow className=\"progTalk-IonRowCol\">\r\n                <IonCol className=\"progTalk-IonRowCol\">\r\n                  <IonToolbar>\r\n                    <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                      <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n                        Day 1: {openhouseDates[0]}\r\n                      </IonSegmentButton>\r\n                      <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n                        Day 2: {openhouseDates[1]}\r\n                      </IonSegmentButton>\r\n                    </IonSegment>\r\n                  </IonToolbar>\r\n                </IonCol>\r\n              </IonRow>\r\n\r\n\r\n              {/* Filter Button */}\r\n              <IonRow>\r\n                <IonHeader className=\"filterHeader\">\r\n                  <IonToolbar className=\"filterHeaderToolBar\">\r\n                    <IonButtons slot=\"end\" id=\"filterIcon\">\r\n                      <IonButton onClick={(e) => { setShowProgTalkFilterPopover({ open: true, event: e.nativeEvent }) }}>\r\n                        <FontAwesomeIcon size=\"lg\" icon={faFilter} />\r\n                      </IonButton>\r\n                    </IonButtons>\r\n                  </IonToolbar>\r\n                </IonHeader>\r\n              </IonRow>\r\n            </IonGrid>\r\n\r\n            <ProgTalkPastRec day1={dayNum} day2={dayNum} recordedTalk={recordedTalk} openhouseDates={openhouseDates} />\r\n          </>\r\n        ) : (\"\")\r\n        }\r\n\r\n\r\n        {/* Filter Programmes Popover */}\r\n        <IonPopover id=\"progCourseFilterPopover\"\r\n          cssClass='progTalkFilterPopover'\r\n          isOpen={showProgTalkFilterPopover.open}\r\n          event={showProgTalkFilterPopover.event}\r\n          onDidDismiss={e => setShowProgTalkFilterPopover({ open: false, event: undefined })}\r\n        >\r\n          {tab === \"schedule\" ?\r\n            <FilterPopoverContent filterFunction={filterTalks} programmes={programmeTalk} filterFor={\"progTalk@SIM\"} filterCondition={filterCondition} setState={updateScheduleTalks} onUpdateFilter={onUpdateFilter} discipline=\"\" category=\"\" />\r\n\r\n            : ''\r\n          }\r\n\r\n          {tab === \"pastRecordings\" ?\r\n            <FilterPopoverContent filterFunction={filterRecTalks} programmes={recordedTalk} filterFor={\"progTalk@SIM\"} filterCondition={filterCondition} setState={updateRecTalks} onUpdateFilter={onUpdateFilter} discipline=\"\" category=\"\" />\r\n\r\n            : ''\r\n          }\r\n\r\n        </IonPopover>\r\n\r\n\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProgrammeTalks);\r\n"]},"metadata":{},"sourceType":"module"}