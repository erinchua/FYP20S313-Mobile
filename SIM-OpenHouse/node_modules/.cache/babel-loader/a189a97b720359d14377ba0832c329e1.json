{"ast":null,"code":"import _slicedToArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{IonGrid,IonRow,IonCol,IonButton,IonPage,IonContent,IonAlert}from'@ionic/react';import React,{useState}from'react';import'../css/Global.css';import'../css/ProgrammeTalks.css';import TopNav from'./TopNav';var ProgTalkInfo=function ProgTalkInfo(props){{/* Register Alert */}var _useState=useState(false),_useState2=_slicedToArray(_useState,2),registerSuccess=_useState2[0],setRegisterSuccess=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),registerFail=_useState4[0],setRegisterFail=_useState4[1];var displayRegisterAlert=function displayRegisterAlert(){{/* Logic to check if there is another existing programme in My Schedule that is the same day & timing \r\n         of the programme the user wants to add*/}{/* if (exist) {\r\n             setRegisterSuccess(true);\r\n             setRegisterSuccess(false);\r\n         } else {\r\n             setRegisterFail(true);\r\n            setRegisterSuccess(false);\r\n        } */}{/* set state to disable the + btn in else {} */}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IonAlert,{isOpen:registerSuccess,onDidDismiss:function onDidDismiss(){return setRegisterSuccess(false);},cssClass:\"alertBox\",mode:\"md\",header:'Successfully Registered',message:'You have successfully registered for the programme talk and it has been successfully added to My Schedule.',buttons:['Close']}),/*#__PURE__*/React.createElement(IonAlert,{isOpen:registerFail,onDidDismiss:function onDidDismiss(){return setRegisterFail(false);},cssClass:\"alertBox\",mode:\"md\",header:'Registration Unsuccessful',message:'There exists an open house programme in your scheduler at this timing. Please remove the existing programme from your scheduler first!',buttons:['Close']}),/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(TopNav,{title:\"Programme Talks\",route:\"/u/openHouseMain/programmeTalks\",backarrow:true,hamburger:true}),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true,className:\"progTalkIonContent\"},/*#__PURE__*/React.createElement(IonGrid,{id:\"progTalkInfoGrid\"},/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"4\",className:\"progTalkInfoHeader\"},\"Programme Talk:\"),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"8\",className:\"progTalkInfoData\"},\"Sample\",/*#__PURE__*/React.createElement(\"p\",null,props.progTalk))),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"4\",className:\"progTalkInfoHeader\"},\"Awarding University:\"),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"8\",className:\"progTalkInfoData\"},\"Sample\",/*#__PURE__*/React.createElement(\"p\",null,props.awardingUni))),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"4\",className:\"progTalkInfoHeader\"},\"Date:\"),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"8\",className:\"progTalkInfoData\"},\"Sample\",/*#__PURE__*/React.createElement(\"p\",null,props.date))),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"4\",className:\"progTalkInfoHeader\"},\"Time:\"),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"8\",className:\"progTalkInfoData\"},\"Sample\",/*#__PURE__*/React.createElement(\"p\",null,props.time))),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"4\",className:\"progTalkInfoHeader\"},\"Venue:\"),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"8\",className:\"progTalkInfoData\"},\"Sample\",/*#__PURE__*/React.createElement(\"p\",null,props.venue))),/*#__PURE__*/React.createElement(IonRow,{class:\"ion-justify-content-center\",style:{marginTop:\"10%\"}},/*#__PURE__*/React.createElement(IonButton,{size:\"large\",id:\"registerProgTalkBtn\",type:\"submit\",onClick:displayRegisterAlert},\"REGISTER\"))))));};export default ProgTalkInfo;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/components/ProgTalkInfo.tsx"],"names":["IonGrid","IonRow","IonCol","IonButton","IonPage","IonContent","IonAlert","React","useState","TopNav","ProgTalkInfo","props","registerSuccess","setRegisterSuccess","registerFail","setRegisterFail","displayRegisterAlert","progTalk","awardingUni","date","time","venue","marginTop"],"mappings":"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","sourcesContent":["import { IonGrid, IonRow, IonCol, IonButton, IonRouterLink, IonPage, IonContent, IonAlert } from '@ionic/react';\r\nimport React, { useState } from 'react';\r\n\r\nimport '../css/Global.css';\r\nimport '../css/ProgrammeTalks.css'\r\n\r\nimport TopNav from './TopNav';\r\n\r\nconst ProgTalkInfo: React.FC<{\r\n    progTalk: string; \r\n    awardingUni: string;\r\n    date: Date;\r\n    time: string;\r\n    venue: string;\r\n}> = props => {\r\n    \r\n    {/* Register Alert */}\r\n    const [registerSuccess, setRegisterSuccess] = useState(false);\r\n    const [registerFail, setRegisterFail] = useState(false);\r\n\r\n    const displayRegisterAlert = () => {\r\n        {/* Logic to check if there is another existing programme in My Schedule that is the same day & timing \r\n         of the programme the user wants to add*/}\r\n        \r\n        {/* if (exist) {\r\n             setRegisterSuccess(true);\r\n             setRegisterSuccess(false);\r\n         } else {\r\n             setRegisterFail(true);\r\n            setRegisterSuccess(false);\r\n        } */}\r\n\r\n        {/* set state to disable the + btn in else {} */}\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IonAlert\r\n                isOpen={registerSuccess}\r\n                onDidDismiss={() => setRegisterSuccess(false)}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Successfully Registered'}\r\n                message={'You have successfully registered for the programme talk and it has been successfully added to My Schedule.'}\r\n                buttons={['Close']}\r\n             ></IonAlert>\r\n\r\n            <IonAlert\r\n                isOpen={registerFail}\r\n                onDidDismiss={() => setRegisterFail(false)}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Registration Unsuccessful'}\r\n                message={'There exists an open house programme in your scheduler at this timing. Please remove the existing programme from your scheduler first!'}\r\n                buttons={['Close']}\r\n             ></IonAlert>\r\n\r\n            <IonPage>\r\n                <TopNav title=\"Programme Talks\" route=\"/u/openHouseMain/programmeTalks\" backarrow={ true } hamburger={ true } />\r\n            \r\n                <IonContent fullscreen className=\"progTalkIonContent\">\r\n                    <IonGrid id=\"progTalkInfoGrid\">\r\n                        {/* Programme Talk */}\r\n                        <IonRow>\r\n                            <IonCol size-sizeSm=\"4\" className=\"progTalkInfoHeader\">\r\n                                Programme Talk:\r\n                            </IonCol>\r\n\r\n                            <IonCol size-sizeSm=\"8\" className=\"progTalkInfoData\">\r\n                                Sample\r\n                                <p>{props.progTalk}</p>\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        {/* Awarding Uni */}\r\n                        <IonRow>\r\n                            <IonCol size-sizeSm=\"4\" className=\"progTalkInfoHeader\">\r\n                                Awarding University:\r\n                            </IonCol>\r\n\r\n                            <IonCol size-sizeSm=\"8\" className=\"progTalkInfoData\">\r\n                                Sample\r\n                                <p>{props.awardingUni}</p>\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        {/* Date */}\r\n                        <IonRow>\r\n                            <IonCol size-sizeSm=\"4\" className=\"progTalkInfoHeader\">\r\n                                Date:\r\n                            </IonCol>\r\n\r\n                            <IonCol size-sizeSm=\"8\" className=\"progTalkInfoData\">\r\n                                Sample\r\n                                <p>{props.date}</p>\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        {/* Time */}\r\n                        <IonRow>\r\n                            <IonCol size-sizeSm=\"4\" className=\"progTalkInfoHeader\">\r\n                                Time:\r\n                            </IonCol>\r\n\r\n                            <IonCol size-sizeSm=\"8\" className=\"progTalkInfoData\">\r\n                                Sample\r\n                                <p>{props.time}</p>\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        {/* Venue */}\r\n                        <IonRow>\r\n                            <IonCol size-sizeSm=\"4\" className=\"progTalkInfoHeader\">\r\n                                Venue:\r\n                            </IonCol>\r\n\r\n                            <IonCol size-sizeSm=\"8\" className=\"progTalkInfoData\">\r\n                                Sample\r\n                                <p>{props.venue}</p>\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        <IonRow class=\"ion-justify-content-center\" style={{marginTop:\"10%\"}}>\r\n                            <IonButton size=\"large\" id=\"registerProgTalkBtn\" type=\"submit\" onClick={displayRegisterAlert}>REGISTER</IonButton>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                    \r\n\r\n                </IonContent>\r\n            </IonPage>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ProgTalkInfo;"]},"metadata":{},"sourceType":"module"}