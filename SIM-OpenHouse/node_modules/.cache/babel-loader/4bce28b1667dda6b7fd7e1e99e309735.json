{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\OpenHouseProgrammes\\\\ProgrammeTalks.tsx\";\nimport { IonButton, IonButtons, IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/Global.css';\nimport '../../css/ProgrammeTalks.css';\nimport TopNav from '../../components/TopNav';\nimport ProgTalkSchedule from '../../components/OpenHouseProgrammes/ProgTalkSchedule';\nimport ProgTalkLiveTalks from '../../components/OpenHouseProgrammes/ProgTalkLiveTalks';\nimport ProgTalkPastRec from '../../components/OpenHouseProgrammes/ProgTalkPastRec';\nimport { db } from '../../firebase';\n\nconst ProgrammeTalks = () => {\n  const [tab, setTab] = useState(\"schedule\");\n  const [dayNum, setDayNum] = useState(\"day1\");\n\n  const handleDayOne = () => {\n    setDayNum(\"day1\");\n  };\n\n  const handleDayTwo = () => {\n    setDayNum(\"day2\");\n  };\n\n  const handleSchedule = () => {\n    setTab(\"schedule\");\n  };\n\n  const handleLiveTalks = () => {\n    setTab(\"liveTalks\");\n  };\n\n  const handlePastRec = () => {\n    setTab(\"pastRecordings\");\n  };\n\n  const [openhouseDates, setOpenhouseDates] = useState([]);\n  const [programmeTalk, setProgrammeTalk] = useState([]);\n  const liveTalk = programmeTalk.filter(talk => {\n    return talk.isLive == true;\n  });\n  const recordedTalk = programmeTalk.filter(talk => {\n    return talk.hasRecording == true;\n  });\n  useEffect(() => {\n    const dates = [];\n    db.collection(\"Openhouse\").get().then(snapshot => {\n      snapshot.forEach(doc => {\n        const data = doc.get('day');\n        data.forEach(day => {\n          dates.push(day.date);\n        });\n      });\n      setOpenhouseDates(dates);\n    }).catch(error => console.log(error));\n    db.collection(\"ProgrammeTalks\").get().then(snapshot => {\n      const programmeTalk = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        programmeTalk.push(data);\n      });\n      setProgrammeTalk(programmeTalk);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Programme Talks\",\n    route: \"/u/openHouseMain\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"progTalkIonContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"progTalksGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    className: \"segmentHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    className: \"segmentHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: tab,\n    className: \"segmentHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"schedule\",\n    className: \"segmentBtn ion-text-wrap\",\n    id: \"progTalkSchedule\",\n    onClick: handleSchedule,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, \"Schedule\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"liveTalks\",\n    className: \"segmentBtn ion-text-wrap\",\n    id: \"progTalkLiveTalk\",\n    onClick: handleLiveTalks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, \"Live Talks\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"pastRecordings\",\n    className: \"segmentBtn ion-text-wrap\",\n    id: \"progTalkPastRec\",\n    onClick: handlePastRec,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, \"Past Recordings\")))))), tab === \"schedule\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"progTalk-IonRowCol progTalkIonGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    onIonChange: e => console.log(`${e.detail.value}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }\n  }, \"Day 1: 21 Nov 2020\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }\n  }, \"Day 2: 22 Nov 2020\")))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    className: \"filterHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    className: \"filterHeaderToolBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"end\",\n    id: \"filterIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: faFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }))))))), /*#__PURE__*/React.createElement(ProgTalkSchedule, {\n    day1: dayNum,\n    day2: dayNum,\n    programmeTalk: programmeTalk,\n    openhouseDates: openhouseDates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  })) : \"\", tab === \"liveTalks\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"progTalk-IonRowCol progTalkIonGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    onIonChange: e => console.log(`${e.detail.value}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 23\n    }\n  }, \"Day 1: 21 Nov 2020\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 23\n    }\n  }, \"Day 2: 22 Nov 2020\")))))), /*#__PURE__*/React.createElement(ProgTalkLiveTalks, {\n    day1: dayNum,\n    day2: dayNum,\n    liveTalk: liveTalk,\n    openhouseDates: openhouseDates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })) : \"\", tab === \"pastRecordings\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"progTalk-IonRowCol progTalkIonGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    onIonChange: e => console.log(`${e.detail.value}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 23\n    }\n  }, \"Day 1: 21 Nov 2020\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  }, \"Day 2: 22 Nov 2020\"))))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    className: \"filterHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    className: \"filterHeaderToolBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"end\",\n    id: \"filterIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: faFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }))))))), /*#__PURE__*/React.createElement(ProgTalkPastRec, {\n    day1: dayNum,\n    day2: dayNum,\n    recordedTalk: recordedTalk,\n    openhouseDates: openhouseDates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  })) : \"\"));\n};\n\nexport default withRouter(ProgrammeTalks);","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/OpenHouseProgrammes/ProgrammeTalks.tsx"],"names":["IonButton","IonButtons","IonCol","IonContent","IonGrid","IonHeader","IonPage","IonRow","IonSegment","IonSegmentButton","IonToolbar","React","useEffect","useState","withRouter","FontAwesomeIcon","faFilter","TopNav","ProgTalkSchedule","ProgTalkLiveTalks","ProgTalkPastRec","db","ProgrammeTalks","tab","setTab","dayNum","setDayNum","handleDayOne","handleDayTwo","handleSchedule","handleLiveTalks","handlePastRec","openhouseDates","setOpenhouseDates","programmeTalk","setProgrammeTalk","liveTalk","filter","talk","isLive","recordedTalk","hasRecording","dates","collection","get","then","snapshot","forEach","doc","data","day","push","date","catch","error","console","log","e","detail","value"],"mappings":"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","sourcesContent":["import { IonButton, IonButtons, IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/ProgrammeTalks.css';\r\n\r\nimport TopNav from '../../components/TopNav';\r\nimport ProgTalkSchedule from '../../components/OpenHouseProgrammes/ProgTalkSchedule';\r\nimport ProgTalkLiveTalks from '../../components/OpenHouseProgrammes/ProgTalkLiveTalks';\r\nimport ProgTalkPastRec from '../../components/OpenHouseProgrammes/ProgTalkPastRec';\r\nimport { db } from '../../firebase';\r\n\r\nconst ProgrammeTalks: React.FC = () => {\r\n  const [tab, setTab] = useState(\"schedule\");\r\n  const [dayNum, setDayNum] = useState(\"day1\");\r\n\r\n\r\n  const handleDayOne = () => {\r\n    setDayNum(\"day1\");\r\n  };\r\n\r\n  const handleDayTwo = () => {\r\n    setDayNum(\"day2\");\r\n  };\r\n\r\n  const handleSchedule = () => {\r\n    setTab(\"schedule\");\r\n  };\r\n\r\n  const handleLiveTalks = () => {\r\n    setTab(\"liveTalks\");\r\n  };\r\n\r\n  const handlePastRec = () => {\r\n    setTab(\"pastRecordings\");\r\n  };\r\n\r\n  const [openhouseDates, setOpenhouseDates] = useState([])\r\n  const [programmeTalk, setProgrammeTalk] = useState<any[]>([]);\r\n\r\n  const liveTalk = programmeTalk.filter(talk => { return talk.isLive == true })\r\n  const recordedTalk = programmeTalk.filter(talk => { return talk.hasRecording == true })\r\n\r\n  useEffect(() => {\r\n    const dates: any = [];\r\n\r\n    db.collection(\"Openhouse\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.get('day')\r\n          data.forEach((day: any) => { dates.push(day.date) })\r\n        });\r\n        setOpenhouseDates(dates);\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    db.collection(\"ProgrammeTalks\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const programmeTalk: any = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          programmeTalk.push(data);\r\n        });\r\n        setProgrammeTalk(programmeTalk);\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <TopNav title=\"Programme Talks\" route=\"/u/openHouseMain\" backarrow={true} hamburger={true} />\r\n      </IonHeader>\r\n      \r\n      <IonContent fullscreen className=\"progTalkIonContent\">\r\n        <IonGrid id=\"progTalksGrid\">\r\n          <IonRow>\r\n            <IonHeader className=\"segmentHeader\">\r\n              <IonToolbar className=\"segmentHeader\">\r\n                <IonSegment scrollable value={tab} className=\"segmentHeader\">\r\n                  <IonSegmentButton value=\"schedule\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkSchedule\" onClick={handleSchedule}>\r\n                    Schedule\r\n                  </IonSegmentButton>\r\n                  <IonSegmentButton value=\"liveTalks\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkLiveTalk\" onClick={handleLiveTalks}>\r\n                    Live Talks\r\n                  </IonSegmentButton>\r\n                  <IonSegmentButton value=\"pastRecordings\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkPastRec\" onClick={handlePastRec}>\r\n                    Past Recordings\r\n                  </IonSegmentButton>\r\n                </IonSegment>\r\n              </IonToolbar>\r\n            </IonHeader>\r\n          </IonRow>\r\n        </IonGrid>\r\n\r\n        {/* Programme Talks Schedule */}\r\n        {tab === \"schedule\" ? (\r\n          <>\r\n            <IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n              <IonRow className=\"progTalk-IonRowCol\">\r\n                  <IonToolbar>\r\n                    <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                      <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n                        Day 1: 21 Nov 2020\r\n                      </IonSegmentButton>\r\n                      <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n                        Day 2: 22 Nov 2020\r\n                      </IonSegmentButton>\r\n                    </IonSegment>\r\n                  </IonToolbar>\r\n              </IonRow>\r\n\r\n              <IonRow>\r\n                <IonHeader className=\"filterHeader\">\r\n                  <IonToolbar className=\"filterHeaderToolBar\">\r\n                    <IonButtons slot=\"end\" id=\"filterIcon\">\r\n                      <IonButton>\r\n                        <FontAwesomeIcon size=\"lg\" icon={faFilter} />\r\n                      </IonButton>\r\n                    </IonButtons>\r\n                  </IonToolbar>\r\n                </IonHeader>\r\n              </IonRow>\r\n            </IonGrid>\r\n\r\n            <ProgTalkSchedule day1={dayNum} day2={dayNum} programmeTalk={programmeTalk} openhouseDates={openhouseDates} />\r\n          </>\r\n        ) : (\r\n            \"\"\r\n          )}\r\n\r\n        {/* Live Talks */}\r\n        {tab === \"liveTalks\" ? (\r\n          <>\r\n            <IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n              <IonRow className=\"progTalk-IonRowCol\">\r\n                <IonCol className=\"progTalk-IonRowCol\">\r\n                  <IonToolbar>\r\n                    <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                      <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n                        Day 1: 21 Nov 2020\r\n                      </IonSegmentButton>\r\n                      <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n                        Day 2: 22 Nov 2020\r\n                      </IonSegmentButton>\r\n                    </IonSegment>\r\n                  </IonToolbar>\r\n                </IonCol>\r\n              </IonRow>\r\n            </IonGrid>\r\n\r\n            <ProgTalkLiveTalks day1={dayNum} day2={dayNum} liveTalk={liveTalk} openhouseDates={openhouseDates} />\r\n          </>\r\n        ) : (\r\n            \"\"\r\n          )}\r\n\r\n        {/* Past Recordings */}\r\n        {tab === \"pastRecordings\" ? (\r\n          <>\r\n            <IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n              <IonRow className=\"progTalk-IonRowCol\">\r\n                <IonCol className=\"progTalk-IonRowCol\">\r\n                  <IonToolbar>\r\n                    <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                      <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n                        Day 1: 21 Nov 2020\r\n                      </IonSegmentButton>\r\n                      <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n                        Day 2: 22 Nov 2020\r\n                      </IonSegmentButton>\r\n                    </IonSegment>\r\n                  </IonToolbar>\r\n                </IonCol>\r\n              </IonRow>\r\n\r\n              <IonRow>\r\n                <IonHeader className=\"filterHeader\">\r\n                  <IonToolbar className=\"filterHeaderToolBar\">\r\n                    <IonButtons slot=\"end\" id=\"filterIcon\">\r\n                      <IonButton>\r\n                        <FontAwesomeIcon size=\"lg\" icon={faFilter} />\r\n                      </IonButton>\r\n                    </IonButtons>\r\n                  </IonToolbar>\r\n                </IonHeader>\r\n              </IonRow>\r\n            </IonGrid>\r\n\r\n            <ProgTalkPastRec day1={dayNum} day2={dayNum} recordedTalk={recordedTalk} openhouseDates={openhouseDates} />\r\n          </>\r\n        ) : (\r\n            \"\"\r\n          )}\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProgrammeTalks);\r\n"]},"metadata":{},"sourceType":"module"}