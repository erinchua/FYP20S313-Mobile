{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\MySchedule.tsx\";\nimport { IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport { toSchedule } from '../schedule';\nimport '../css/Global.css';\nimport '../css/MySchedule.css';\nimport TopNav from '../components/TopNav';\nimport MyScheduleContent from '../components/MyScheduleContent';\n\nconst MySchedule = () => {\n  const [dayNum, setDayNum] = useState(\"day1\");\n  const [openhouseDates, setOpenhouseDates] = useState([]);\n  const [openhouseProgs, setOpenHouseProgs] = useState([]);\n\n  const handleDayOne = () => {\n    setDayNum(\"day1\");\n  };\n\n  const handleDayTwo = () => {\n    setDayNum(\"day2\");\n  };\n\n  useEffect(() => {\n    const dates = [];\n    const programmeItems = [];\n    db.collection(\"Openhouse\").get().then(snapshot => {\n      snapshot.forEach(doc => {\n        const data = doc.get('day');\n        data.forEach(day => {\n          dates.push(day.date);\n        });\n      });\n      setOpenhouseDates(dates);\n    }).catch(error => console.log(error));\n    db.collection(\"ProgrammeTalks\").get().then(snapshot => {\n      const items = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        items.push(data);\n      });\n      const schedule = items.map(toSchedule);\n      schedule.forEach(i => programmeItems.push(i));\n    }).catch(error => console.log(error));\n    db.collection(\"GuidedTours\").get().then(snapshot => {\n      const items = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        items.push(data);\n      });\n      const schedule = items.map(toSchedule);\n      schedule.forEach(i => programmeItems.push(i));\n    }).catch(error => console.log(error));\n    db.collection(\"Performances\").get().then(snapshot => {\n      const items = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        items.push(data);\n      });\n      const schedule = items.map(toSchedule);\n      schedule.forEach(i => programmeItems.push(i));\n    }).catch(error => console.log(error));\n    db.collection(\"GamesActivities\").get().then(snapshot => {\n      const items = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        items.push(data);\n      });\n      const schedule = items.map(toSchedule);\n      schedule.forEach(i => programmeItems.push(i));\n    }).catch(error => console.log(error)); //console.log(\"progItems\", programmeItems);\n\n    setOpenHouseProgs(programmeItems);\n  }, []); //console.log(\"openHouseProgs\", openhouseProgs);\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"My Schedule\",\n    route: \"/u/home\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"myScheduleIonContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"myScheduleGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-justify-content-center openHouseDateRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    sizeSm: \"6\",\n    className: \"openHouseDateCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateTitleText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, \"From: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, openhouseDates[0]), \" \"), /*#__PURE__*/React.createElement(IonCol, {\n    sizeSm: \"6\",\n    className: \"openHouseDateCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateTitleText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"To: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, openhouseDates[1]), \" \")), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"mySchedule-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    onIonChange: e => console.log(`${e.detail.value}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"mySchedule-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, \"Day 1: \", openhouseDates[0], \"  \"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"mySchedule-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, \"Day 2: \", openhouseDates[1], \"  \"))))), /*#__PURE__*/React.createElement(MyScheduleContent, {\n    day1: dayNum,\n    day2: dayNum,\n    openHouseProgs: openhouseProgs,\n    openhouseDates: openhouseDates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default MySchedule;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/MySchedule.tsx"],"names":["IonCol","IonContent","IonGrid","IonHeader","IonPage","IonRow","IonSegment","IonSegmentButton","IonToolbar","React","useEffect","useState","db","toSchedule","TopNav","MyScheduleContent","MySchedule","dayNum","setDayNum","openhouseDates","setOpenhouseDates","openhouseProgs","setOpenHouseProgs","handleDayOne","handleDayTwo","dates","programmeItems","collection","get","then","snapshot","forEach","doc","data","day","push","date","catch","error","console","log","items","schedule","map","i","e","detail","value"],"mappings":"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","sourcesContent":["import { IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { db } from '../firebase';\r\nimport { ScheduleItem, toSchedule } from '../schedule';\r\nimport '../css/Global.css';\r\nimport '../css/MySchedule.css';\r\n\r\nimport TopNav from '../components/TopNav';\r\nimport Menu from '../components/Menu';\r\nimport MyScheduleContent from '../components/MyScheduleContent';\r\nimport ProgrammeTalks from './OpenHouseProgrammes/ProgrammeTalks';\r\n\r\nconst MySchedule: React.FC = () => {\r\n    const [dayNum, setDayNum] = useState(\"day1\");\r\n    const [openhouseDates, setOpenhouseDates] = useState([]);\r\n    const [openhouseProgs, setOpenHouseProgs] = useState<ScheduleItem[]>([]);\r\n\r\n    const handleDayOne = () => {\r\n        setDayNum(\"day1\");\r\n    };\r\n    \r\n    const handleDayTwo = () => {\r\n        setDayNum(\"day2\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        const dates: any = [];\r\n        const programmeItems: any = [];\r\n    \r\n        db.collection(\"Openhouse\").get().then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n                const data = doc.get('day')\r\n                data.forEach((day: any) => { dates.push(day.date) })\r\n            });\r\n            setOpenhouseDates(dates);\r\n        }).catch((error) => console.log(error));\r\n    \r\n        db.collection(\"ProgrammeTalks\").get().then((snapshot) => {\r\n            const items: any = [];\r\n            snapshot.forEach((doc) => {\r\n              const data = doc.data();\r\n              items.push(data);\r\n            });\r\n            const schedule = items.map(toSchedule);\r\n            schedule.forEach((i: any) => programmeItems.push(i));\r\n        }).catch((error) => console.log(error));\r\n\r\n        db.collection(\"GuidedTours\").get().then((snapshot) => {\r\n            const items: any = [];\r\n            snapshot.forEach((doc) => {\r\n              const data = doc.data();\r\n              items.push(data);\r\n            });\r\n            const schedule = items.map(toSchedule);\r\n            schedule.forEach((i: any) => programmeItems.push(i));\r\n        }).catch((error) => console.log(error));\r\n\r\n        db.collection(\"Performances\").get().then((snapshot) => {\r\n            const items: any = [];\r\n            snapshot.forEach((doc) => {\r\n              const data = doc.data();\r\n              items.push(data);\r\n            });\r\n            const schedule = items.map(toSchedule);\r\n            schedule.forEach((i: any) => programmeItems.push(i));\r\n        }).catch((error) => console.log(error));\r\n\r\n        db.collection(\"GamesActivities\").get().then((snapshot) => {\r\n            const items: any = [];\r\n            snapshot.forEach((doc) => {\r\n              const data = doc.data();\r\n              items.push(data);\r\n            });\r\n            const schedule = items.map(toSchedule);\r\n            schedule.forEach((i: any) => programmeItems.push(i));\r\n        }).catch((error) => console.log(error));\r\n\r\n        //console.log(\"progItems\", programmeItems);\r\n\r\n        setOpenHouseProgs(programmeItems);\r\n    }, []);\r\n\r\n    //console.log(\"openHouseProgs\", openhouseProgs);\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <TopNav title=\"My Schedule\" route='/u/home' backarrow={ true } hamburger = { true }/>\r\n            </IonHeader>\r\n            \r\n            <IonContent fullscreen={true} className=\"myScheduleIonContent\">\r\n                <IonGrid className=\"myScheduleGrid\">\r\n                    <IonRow className=\"ion-justify-content-center openHouseDateRow\">\r\n                        <IonCol sizeSm=\"6\" className=\"openHouseDateCol\">\r\n                            <span className=\"openHouseDateTitleText\">From: </span> \r\n                            <span className=\"openHouseDateText\">{openhouseDates[0]}</span> {/* Date is not hardcoded */}\r\n                        </IonCol>\r\n                        <IonCol sizeSm=\"6\" className=\"openHouseDateCol\">\r\n                            <span className=\"openHouseDateTitleText\">To: </span> \r\n                            <span className=\"openHouseDateText\">{openhouseDates[1]}</span> {/* Date is not hardcoded */}\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow className=\"mySchedule-IonRowCol\">\r\n                        <IonToolbar>\r\n                            <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                                <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"mySchedule-DayTab\">\r\n                                    Day 1: {openhouseDates[0]}  {/* Date is not hardcoded, only Day 1: is */}\r\n                                </IonSegmentButton>\r\n                                \r\n                                <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"mySchedule-DayTab\">\r\n                                    Day 2: {openhouseDates[1]}  {/* Date is not hardcoded, only Day 2: is */}\r\n                                </IonSegmentButton>\r\n                            </IonSegment>\r\n                        </IonToolbar>\r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <MyScheduleContent day1={dayNum} day2={dayNum} openHouseProgs={openhouseProgs} openhouseDates={openhouseDates} />\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default MySchedule;"]},"metadata":{},"sourceType":"module"}