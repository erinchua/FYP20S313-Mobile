{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\Registration.tsx\";\nimport { IonButton, IonCol, IonContent, IonDatetime, IonGrid, IonHeader, IonInput, IonLabel, IonPage, IonRow, IonSelect, IonSelectOption, IonTitle, IonToolbar, IonButtons, IonIcon, IonItem, IonCheckbox, IonText } from \"@ionic/react\";\nimport React, { useRef, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { arrowBackOutline } from \"ionicons/icons\";\nimport { useAuth } from \"../auth\";\nimport { auth, db } from \"../firebase\";\nimport \"../css/Global.css\";\nimport \"../css/Registration.css\";\n\nconst Registration = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch,\n    formState\n  } = useForm();\n  const {\n    loggedIn\n  } = useAuth();\n  const [status, setStatus] = useState({\n    loading: false,\n    error: false\n  });\n  const [checked, setChecked] = useState(false);\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n  const history = useHistory();\n\n  const addNewStudent = data => {\n    console.log(data);\n    db.collection(\"students\").add({\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      contactNo: data.contactNo,\n      dob: data.dob,\n      highestQualification: data.highestQualification,\n      nationality: data.nationality\n    });\n  };\n\n  const onSubmit = async data => {\n    if (data.password !== data.confirmPassword) {\n      return console.log(\"Passwords don't match\"); // replace this with error message\n    }\n\n    try {\n      setStatus({\n        loading: true,\n        error: false\n      });\n      await auth.createUserWithEmailAndPassword(data.email, data.password);\n      addNewStudent(data);\n      setStatus({\n        loading: false,\n        error: false\n      });\n    } catch (e) {\n      setStatus({\n        loading: false,\n        error: true\n      });\n      console.log(e);\n    }\n  };\n\n  console.log(loggedIn);\n  if (loggedIn) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 24\n    }\n  });\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    id: \"toolBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    routerLink: \"/main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"icon-only\",\n    icon: arrowBackOutline,\n    id: \"backBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(IonTitle, {\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Registration\"))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"text\",\n    placeholder: \"First Name\",\n    name: \"firstName\",\n    ref: register({\n      required: true,\n      minLength: 3,\n      pattern: /^[A-Za-z]+$/i\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), errors.firstName && errors.firstName.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 78\n    }\n  }, \"First name is required!\"), errors.firstName && errors.firstName.type === \"minLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 79\n    }\n  }, \"First name has to be more than 2 characters\"), errors.firstName && errors.firstName.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 77\n    }\n  }, \"Please enter a valid First Name\")), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"text\",\n    placeholder: \"Last Name\",\n    name: \"lastName\",\n    ref: register({\n      required: true,\n      minLength: 3,\n      pattern: /^[A-Za-z]+$/i\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), errors.lastName && errors.lastName.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 76\n    }\n  }, \"Last name is required!\"), errors.lastName && errors.lastName.type === \"minLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 77\n    }\n  }, \"Last name has to be more than 2 characters\"), errors.lastName && errors.lastName.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 75\n    }\n  }, \"Please enter a valid Last Name\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    ref: register({\n      required: true,\n      pattern: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), errors.email && errors.email.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 70\n    }\n  }, \"Email is required!\"), errors.email && errors.email.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 69\n    }\n  }, \"Please enter a valid Email\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"tel\",\n    placeholder: \"Contact Number\",\n    name: \"contactNo\",\n    ref: register({\n      required: true,\n      minLength: 8,\n      maxLength: 8,\n      pattern: /(6|8|9)\\d{7}/\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), errors.contactNo && errors.contactNo.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 78\n    }\n  }, \"Contact number is required!\"), errors.contactNo && errors.contactNo.type === \"minLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 79\n    }\n  }, \"Contact number consist of only 8 digits\"), errors.contactNo && errors.contactNo.type === \"maxLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 79\n    }\n  }, \"Contact number consist of only 8 digits\"), errors.contactNo && errors.contactNo.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 77\n    }\n  }, \"Please enter a valid Contact Number\")), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonDatetime, {\n    className: \"inputField\",\n    displayFormat: \"DD-MM-YYYY\",\n    placeholder: \"D.O.B\",\n    name: \"dob\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }), errors.dob && errors.dob.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 66\n    }\n  }, \"Date of Birth is required!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    id: \"highestQualificationLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, \"Highest Qualification\"), /*#__PURE__*/React.createElement(IonSelect, {\n    placeholder: \"Please select\",\n    name: \"highestQualification\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"aLevel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, \"'A' Level\"), /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"oLevel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"'O' Level\"), /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"degree\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"Degree\"), /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"Diploma\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Diploma\"))), errors.highestQualification && errors.highestQualification.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 100\n    }\n  }, \"Highest Qualification is required!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"text\",\n    placeholder: \"Nationality\",\n    name: \"nationality\",\n    ref: register({\n      required: true,\n      pattern: /^[A-Za-z]+$/i,\n      minLength: 3\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), errors.nationality && errors.nationality.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 82\n    }\n  }, \"Nationality is required!\"), errors.nationality && errors.nationality.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 81\n    }\n  }, \"Please enter a valid Nationality\"), errors.nationality && errors.nationality.type === \"minLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 83\n    }\n  }, \"Please enter a valid Nationality\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register({\n      required: true,\n      minLength: 8,\n      pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }), errors.password && errors.password.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 76\n    }\n  }, \"Password is required!\"), errors.password && errors.password.type === \"minLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 77\n    }\n  }, \"Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"), errors.password && errors.password.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 75\n    }\n  }, \"Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    className: \"inputField\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"confirmPassword\",\n    ref: register({\n      required: true,\n      validate: value => value === password.current\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }), errors.confirmPassword && errors.confirmPassword.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 90\n    }\n  }, \"Confirm Password is required!\"), errors.confirmPassword && errors.confirmPassword.type === \"validate\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 90\n    }\n  }, \"Password does not match!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonCheckbox, {\n    name: \"privacyCheckbox\",\n    checked: checked,\n    onIonChange: e => setChecked(e.detail.checked),\n    slot: \"start\",\n    ref: register({\n      validate: value => checked === true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IonLabel, {\n    style: {\n      fontSize: \"80%\",\n      marginLeft: \"10%\"\n    },\n    className: \"ion-text-wrap\",\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"I agree with SIM's Terms of Use and Privary Policy and thereby give my consent to receive marketing communications from SIM.\")), errors.privacyCheckbox && errors.privacyCheckbox.type === \"validate\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 88\n    }\n  }, \"*Terms of Use and Privacy Policy checkbox not checked\")), /*#__PURE__*/React.createElement(IonRow, {\n    class: \"ion-justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, status.error && /*#__PURE__*/React.createElement(IonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 32\n    }\n  }, \"Error occured.\"), /*#__PURE__*/React.createElement(IonButton, {\n    id: \"registrationBtn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"REGISTER\"))))));\n};\n\nexport default Registration;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/Registration.tsx"],"names":["IonButton","IonCol","IonContent","IonDatetime","IonGrid","IonHeader","IonInput","IonLabel","IonPage","IonRow","IonSelect","IonSelectOption","IonTitle","IonToolbar","IonButtons","IonIcon","IonItem","IonCheckbox","IonText","React","useRef","useState","Redirect","useHistory","useForm","arrowBackOutline","useAuth","auth","db","Registration","register","handleSubmit","errors","watch","formState","loggedIn","status","setStatus","loading","error","checked","setChecked","password","current","history","addNewStudent","data","console","log","collection","add","firstName","lastName","email","contactNo","dob","highestQualification","nationality","onSubmit","confirmPassword","createUserWithEmailAndPassword","e","required","minLength","pattern","type","maxLength","validate","value","detail","fontSize","marginLeft","privacyCheckbox"],"mappings":"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","sourcesContent":["import {\r\n  IonButton,\r\n  IonCol,\r\n  IonContent,\r\n  IonDatetime,\r\n  IonGrid,\r\n  IonHeader,\r\n  IonInput,\r\n  IonLabel,\r\n  IonPage,\r\n  IonRow,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonIcon,\r\n  IonItem,\r\n  IonCheckbox,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm  } from \"react-hook-form\";\r\nimport { arrowBackOutline } from \"ionicons/icons\";\r\nimport { useAuth } from \"../auth\";\r\nimport { auth, db } from \"../firebase\";\r\nimport \"../css/Global.css\";\r\nimport \"../css/Registration.css\";\r\n\r\nconst Registration: React.FC = () => {\r\n  const { register, handleSubmit, errors, watch, formState } = useForm();\r\n\r\n  const { loggedIn } = useAuth();\r\n\r\n  const [status, setStatus] = useState({ loading: false, error: false });\r\n  const [checked, setChecked] = useState(false);\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const addNewStudent = (data: any) => {\r\n    console.log(data);\r\n    db.collection(\"students\").add({\r\n      firstName: data.firstName,\r\n      lastName: data.lastName,\r\n      email: data.email,\r\n      contactNo: data.contactNo,\r\n      dob: data.dob,\r\n      highestQualification: data.highestQualification,\r\n      nationality: data.nationality,\r\n    });\r\n  };\r\n  \r\n  const onSubmit = async (data: any) => {\r\n    if (data.password !== data.confirmPassword) {\r\n      return console.log(\"Passwords don't match\"); // replace this with error message\r\n    }\r\n    try {\r\n      setStatus({ loading: true, error: false });\r\n      await auth.createUserWithEmailAndPassword(data.email, data.password);\r\n      addNewStudent(data);\r\n      setStatus({ loading: false, error: false });\r\n    } catch (e) {\r\n      setStatus({ loading: false, error: true });\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  console.log(loggedIn);\r\n\r\n  if (loggedIn) return <Redirect to=\"/login\" />;\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar id=\"toolBar\">\r\n          <IonButtons slot=\"start\">\r\n            <IonButton routerLink=\"/main\">\r\n              <IonIcon slot=\"icon-only\" icon={arrowBackOutline} id=\"backBtn\" />\r\n            </IonButton>\r\n          </IonButtons>\r\n\r\n          <IonTitle id=\"title\">Registration</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent fullscreen>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <IonGrid>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonInput className=\"inputField\" type=\"text\" placeholder=\"First Name\" name=\"firstName\" ref={register({ required: true, minLength: 3, pattern: /^[A-Za-z]+$/i })}></IonInput>\r\n                {errors.firstName && errors.firstName.type === \"required\" && <div className=\"errorMessage\">First name is required!</div>}\r\n                {errors.firstName && errors.firstName.type === \"minLength\" && <div className=\"errorMessage\">First name has to be more than 2 characters</div>}\r\n                {errors.firstName && errors.firstName.type === \"pattern\" && <div className=\"errorMessage\">Please enter a valid First Name</div>}\r\n              </IonCol>\r\n              <IonCol>\r\n                <IonInput className=\"inputField\" type=\"text\" placeholder=\"Last Name\" name=\"lastName\" ref={register({ required: true, minLength: 3, pattern: /^[A-Za-z]+$/i })}></IonInput>\r\n                {errors.lastName && errors.lastName.type === \"required\" && <div className=\"errorMessage\">Last name is required!</div>}\r\n                {errors.lastName && errors.lastName.type === \"minLength\" && <div className=\"errorMessage\">Last name has to be more than 2 characters</div>}\r\n                {errors.lastName && errors.lastName.type === \"pattern\" && <div className=\"errorMessage\">Please enter a valid Last Name</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonInput\r\n                  className=\"inputField\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  ref={register({ required: true, pattern: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ })}\r\n                ></IonInput>\r\n                {errors.email && errors.email.type === \"required\" && <div className=\"errorMessage\">Email is required!</div>}\r\n                {errors.email && errors.email.type === \"pattern\" && <div className=\"errorMessage\">Please enter a valid Email</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonInput className=\"inputField\" type=\"tel\" placeholder=\"Contact Number\" name=\"contactNo\" ref={register({ required: true, minLength: 8, maxLength: 8, pattern: /(6|8|9)\\d{7}/ })}></IonInput>\r\n                {errors.contactNo && errors.contactNo.type === \"required\" && <div className=\"errorMessage\">Contact number is required!</div>}\r\n                {errors.contactNo && errors.contactNo.type === \"minLength\" && <div className=\"errorMessage\">Contact number consist of only 8 digits</div>}\r\n                {errors.contactNo && errors.contactNo.type === \"maxLength\" && <div className=\"errorMessage\">Contact number consist of only 8 digits</div>}\r\n                {errors.contactNo && errors.contactNo.type === \"pattern\" && <div className=\"errorMessage\">Please enter a valid Contact Number</div>}\r\n              </IonCol>\r\n              <IonCol>\r\n                <IonDatetime className=\"inputField\" displayFormat=\"DD-MM-YYYY\" placeholder=\"D.O.B\" name=\"dob\" ref={register({ required: true })}></IonDatetime>\r\n                {errors.dob && errors.dob.type === \"required\" && <div className=\"errorMessage\">Date of Birth is required!</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel id=\"highestQualificationLabel\">Highest Qualification</IonLabel>\r\n                  <IonSelect placeholder=\"Please select\" name=\"highestQualification\" ref={register({ required: true })}>\r\n                    <IonSelectOption value=\"aLevel\">'A' Level</IonSelectOption>\r\n                    <IonSelectOption value=\"oLevel\">'O' Level</IonSelectOption>\r\n                    <IonSelectOption value=\"degree\">Degree</IonSelectOption>\r\n                    <IonSelectOption value=\"Diploma\">Diploma</IonSelectOption>\r\n                  </IonSelect>\r\n                </IonItem>\r\n                {errors.highestQualification && errors.highestQualification.type === \"required\" && <div className=\"errorMessage\">Highest Qualification is required!</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonInput className=\"inputField\" type=\"text\" placeholder=\"Nationality\" name=\"nationality\" ref={register({ required: true, pattern: /^[A-Za-z]+$/i, minLength: 3 })}></IonInput>\r\n                {errors.nationality && errors.nationality.type === \"required\" && <div className=\"errorMessage\">Nationality is required!</div>}\r\n                {errors.nationality && errors.nationality.type === \"pattern\" && <div className=\"errorMessage\">Please enter a valid Nationality</div>}\r\n                {errors.nationality && errors.nationality.type === \"minLength\" && <div className=\"errorMessage\">Please enter a valid Nationality</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonInput className=\"inputField\" type=\"password\" placeholder=\"Password\" name=\"password\" ref={register({ required: true, minLength: 8, pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/ })}></IonInput>\r\n                {errors.password && errors.password.type === \"required\" && <div className=\"errorMessage\">Password is required!</div>}\r\n                {errors.password && errors.password.type === \"minLength\" && <div className=\"errorMessage\">Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</div>}\r\n                {errors.password && errors.password.type === \"pattern\" && <div className=\"errorMessage\">Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonInput className=\"inputField\" type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" ref={register({ required: true, validate: (value) => value === password.current })}></IonInput>\r\n                {errors.confirmPassword && errors.confirmPassword.type === \"required\" && <div className=\"errorMessage\">Confirm Password is required!</div>}\r\n                {errors.confirmPassword && errors.confirmPassword.type === \"validate\" && <div className=\"errorMessage\">Password does not match!</div>}\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonItem>\r\n                <IonCheckbox name=\"privacyCheckbox\" checked={checked} onIonChange={(e) => setChecked(e.detail.checked)} slot=\"start\" ref={register({ validate: (value) => checked === true })}></IonCheckbox>\r\n                <IonLabel style={{ fontSize: \"80%\", marginLeft: \"10%\" }} className=\"ion-text-wrap\" color=\"dark\">\r\n                  I agree with SIM's Terms of Use and Privary Policy and thereby give my consent to receive marketing communications from SIM.\r\n                </IonLabel>\r\n              </IonItem>\r\n              {errors.privacyCheckbox && errors.privacyCheckbox.type === \"validate\" && <div className=\"errorMessage\">*Terms of Use and Privacy Policy checkbox not checked</div>}\r\n            </IonRow>\r\n            <IonRow class=\"ion-justify-content-center\">\r\n              {status.error && <IonText>Error occured.</IonText>}\r\n              <IonButton id=\"registrationBtn\" type=\"submit\">\r\n                REGISTER\r\n              </IonButton>\r\n            </IonRow>\r\n          </IonGrid>\r\n        </form>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"]},"metadata":{},"sourceType":"module"}