{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{IonAlert,IonButton,IonCol,IonContent,IonGrid,IonHeader,IonItem,IonLabel,IonPage,IonRadio,IonRadioGroup,IonRow,IonSelect,IonSelectOption,IonTextarea,IonTitle}from'@ionic/react';import React,{useEffect,useState}from'react';import{useForm}from'react-hook-form';import'../../css/Global.css';import'../../css/OpenHouseFeedback.css';import TopNav from'../../components/TopNav';import{db}from'../../firebase';var OpenHouseFeedback=function OpenHouseFeedback(){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors,getValues=_useForm.getValues,reset=_useForm.reset;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),submitFeedbackSuccess=_useState2[0],setSubmitFeedbackSuccess=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),openhouseDates=_useState4[0],setOpenhouseDates=_useState4[1];useEffect(function(){db.collection('Openhouse').get().then(function(snapshot){var dates=[];snapshot.forEach(function(doc){var data=doc.get('day');for(var i=0;i<Object.keys(data).length;i++){var day=data[Object.keys(data)[i]];dates.push(day.date);}});setOpenhouseDates(dates);}).catch(function(error){return console.log(error);});},[]);var submitNewFeedback=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(date,feedbackNature,feedbackDesc){var msTime;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:msTime=new Date().getTime();_context.next=3;return db.collection('Feedback').doc(msTime.toString()).set({id:msTime,attendedDate:date,natureOfFeedback:feedbackNature,feedbackDescription:feedbackDesc});case 3:console.log(date);console.log(feedbackNature);console.log(feedbackDesc);case 6:case\"end\":return _context.stop();}}},_callee);}));return function submitNewFeedback(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var onSubmit=function onSubmit(data){var attendedDate=getValues(\"attendedDate\");var feedbackNature=getValues(\"feedbackNature\");var feedbackTextarea=getValues(\"feedbackTextarea\");if(attendedDate!==\"\"&&feedbackNature!==\"\"&&feedbackTextarea!==\"\"&&attendedDate!==null&&feedbackNature!==null&&feedbackTextarea!==null){console.log(\"Date: \"+data.attendedDate);console.log(\"Feedback Nature: \"+data.feedbackNature);console.log(\"Feedback: \"+data.feedbackTextarea);submitNewFeedback(attendedDate,feedbackNature,feedbackTextarea);setSubmitFeedbackSuccess(true);}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IonAlert,{isOpen:submitFeedbackSuccess,onDidDismiss:function onDidDismiss(){return setSubmitFeedbackSuccess(false);},cssClass:\"alertBox\",mode:\"md\",header:'Your feedback has been successfully sent!',message:'Thank you for your feedback!',buttons:[{text:'Close',handler:function handler(){reset({attendedDate:null,feedbackNature:null,feedbackTextarea:null});}}]}),/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(IonHeader,null,/*#__PURE__*/React.createElement(TopNav,{title:\"Open House Feedback Form\",route:\"/u/usefulInfoMain\",backarrow:true,hamburger:true})),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true,className:\"openHouseFeedbackIonContent\"},/*#__PURE__*/React.createElement(IonGrid,{id:\"openHouseFeedbackGrid\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(IonRow,{id:\"openHouseFeedbackMainTitleRow\"},/*#__PURE__*/React.createElement(IonCol,{style:{padding:\"0\"}},/*#__PURE__*/React.createElement(IonRow,{id:\"openHouseFeedbackMainTitle\"},\"SIM Open House Feedback\"),/*#__PURE__*/React.createElement(IonRow,{id:\"openHouseFeedbackSubtitle\"},\"We'll love to hear from you!\"))),/*#__PURE__*/React.createElement(IonRow,{className:\"openHouseFeedbackTitleRow\"},/*#__PURE__*/React.createElement(IonTitle,{className:\"openHouseFeedbackTitle\"},\"Attended Open House Date *\")),/*#__PURE__*/React.createElement(IonRow,{id:\"attendedDateRow\"},/*#__PURE__*/React.createElement(IonCol,{size:\"12\",sizeSm:\"12\",style:{padding:\"0\"}},/*#__PURE__*/React.createElement(IonItem,{id:\"attendedDateItem\",lines:\"none\"},/*#__PURE__*/React.createElement(IonSelect,{id:\"attendedDateSelect\",name:\"attendedDate\",placeholder:\"Select Date\",ref:register({required:true})},openhouseDates.map(function(date){return/*#__PURE__*/React.createElement(IonSelectOption,{key:date,value:date,className:\"attendedDateSelectOption\"},date);}))),errors.attendedDate&&errors.attendedDate.type===\"required\"&&/*#__PURE__*/React.createElement(\"p\",{className:\"errorMsg\"},\"Attended open house date is required!\"))),/*#__PURE__*/React.createElement(IonRow,{className:\"openHouseFeedbackTitleRow\"},/*#__PURE__*/React.createElement(IonTitle,{className:\"openHouseFeedbackTitle\"},\"Nature of Feedback *\")),/*#__PURE__*/React.createElement(IonRow,{id:\"feedbackNatureRow\"},/*#__PURE__*/React.createElement(IonCol,{size:\"12\",sizeSm:\"12\",style:{padding:\"0\"}},/*#__PURE__*/React.createElement(IonItem,{id:\"feedbackNatureMainItem\",lines:\"none\"},/*#__PURE__*/React.createElement(IonRadioGroup,{id:\"feedbackNatureRadioGroup\",name:\"feedbackNature\",ref:register({required:true})},/*#__PURE__*/React.createElement(IonItem,{id:\"feedbackNatureItem\",lines:\"none\"},/*#__PURE__*/React.createElement(IonLabel,null,\"Compliment\"),/*#__PURE__*/React.createElement(IonRadio,{slot:\"start\",value:\"compliment\",className:\"feedbackNatureRadio\"},\"Compliment\")),/*#__PURE__*/React.createElement(IonItem,{id:\"feedbackNatureItem\",lines:\"none\"},/*#__PURE__*/React.createElement(IonLabel,null,\"Complaint\"),/*#__PURE__*/React.createElement(IonRadio,{slot:\"start\",value:\"complaint\",className:\"feedbackNatureRadio\"},\"Complaint\")),/*#__PURE__*/React.createElement(IonItem,{id:\"feedbackNatureItem\",lines:\"none\"},/*#__PURE__*/React.createElement(IonLabel,null,\"Suggestion\"),/*#__PURE__*/React.createElement(IonRadio,{slot:\"start\",value:\"suggestion\",className:\"feedbackNatureRadio\"},\"Suggestion\")))),errors.feedbackNature&&errors.feedbackNature.type===\"required\"&&/*#__PURE__*/React.createElement(\"p\",{className:\"errorMsg\"},\"Nature of feedback is required!\"))),/*#__PURE__*/React.createElement(IonRow,{className:\"openHouseFeedbackTitleRow\"},/*#__PURE__*/React.createElement(IonTitle,{className:\"openHouseFeedbackTitle\"},\"Your Feedback/ Comments *\")),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonTextarea,{id:\"feedbackTextarea\",name:\"feedbackTextarea\",wrap:\"hard\",rows:8,inputmode:\"text\",placeholder:\"Type your feedback/ comments here...\",ref:register({required:true})})),errors.feedbackTextarea&&errors.feedbackTextarea.type===\"required\"&&/*#__PURE__*/React.createElement(\"p\",{className:\"errorMsg\"},\"Your feedback/ comment is required!\"),/*#__PURE__*/React.createElement(IonRow,{class:\"ion-justify-content-center\",style:{marginTop:\"5%\",marginBottom:\"3%\"}},/*#__PURE__*/React.createElement(IonButton,{size:\"large\",id:\"feedbackBtn\",type:\"submit\"},\"SUBMIT\")))))));};export default OpenHouseFeedback;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/UsefulInfo/OpenHouseFeedback.tsx"],"names":["IonAlert","IonButton","IonCol","IonContent","IonGrid","IonHeader","IonItem","IonLabel","IonPage","IonRadio","IonRadioGroup","IonRow","IonSelect","IonSelectOption","IonTextarea","IonTitle","React","useEffect","useState","useForm","TopNav","db","OpenHouseFeedback","register","handleSubmit","errors","getValues","reset","submitFeedbackSuccess","setSubmitFeedbackSuccess","openhouseDates","setOpenhouseDates","collection","get","then","snapshot","dates","forEach","doc","data","i","Object","keys","length","day","push","date","catch","error","console","log","submitNewFeedback","feedbackNature","feedbackDesc","msTime","Date","getTime","toString","set","id","attendedDate","natureOfFeedback","feedbackDescription","onSubmit","feedbackTextarea","text","handler","padding","required","map","type","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import { IonAlert, IonButton, IonCol, IonContent, IonGrid, IonHeader, IonItem, IonLabel, IonPage, IonRadio, IonRadioGroup, IonRow, IonSelect, IonSelectOption, IonTextarea, IonTitle } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/OpenHouseFeedback.css';\r\nimport TopNav from '../../components/TopNav';\r\nimport { db } from '../../firebase'\r\n\r\n\r\nconst OpenHouseFeedback: React.FC = () => {\r\n\r\n    const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n    const [submitFeedbackSuccess, setSubmitFeedbackSuccess] = useState(false);\r\n    const [openhouseDates, setOpenhouseDates] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('Openhouse').get().then(snapshot => {\r\n            const dates: any = [];\r\n\r\n            snapshot.forEach(doc => {\r\n                const data = doc.get('day');\r\n\r\n                for (let i = 0; i < Object.keys(data).length; i++) {\r\n                    const day = data[Object.keys(data)[i]];\r\n                    dates.push(day.date);\r\n                }\r\n            });\r\n\r\n            setOpenhouseDates(dates);\r\n        }).catch((error) => console.log(error));\r\n    }, []);\r\n\r\n    const submitNewFeedback = async (date: string, feedbackNature: string, feedbackDesc: string) => {\r\n        const msTime = new Date().getTime();\r\n\r\n        await db.collection('Feedback').doc(msTime.toString()).set({\r\n            id: msTime,\r\n            attendedDate: date,\r\n            natureOfFeedback: feedbackNature,\r\n            feedbackDescription: feedbackDesc\r\n        });\r\n\r\n        console.log(date)\r\n        console.log(feedbackNature)\r\n        console.log(feedbackDesc)\r\n    }\r\n\r\n    const onSubmit = (data: any) => {\r\n        const attendedDate = getValues(\"attendedDate\");\r\n        const feedbackNature = getValues(\"feedbackNature\");\r\n        const feedbackTextarea = getValues(\"feedbackTextarea\");\r\n\r\n        if ((attendedDate !== \"\" && feedbackNature !== \"\" && feedbackTextarea !== \"\") &&\r\n            (attendedDate !== null && feedbackNature !== null && feedbackTextarea !== null)) {\r\n            console.log(\"Date: \" + data.attendedDate);\r\n            console.log(\"Feedback Nature: \" + data.feedbackNature);\r\n            console.log(\"Feedback: \" + data.feedbackTextarea);\r\n            submitNewFeedback(attendedDate, feedbackNature, feedbackTextarea)\r\n            setSubmitFeedbackSuccess(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IonAlert\r\n                isOpen={submitFeedbackSuccess}\r\n                onDidDismiss={() => setSubmitFeedbackSuccess(false)}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Your feedback has been successfully sent!'}\r\n                message={'Thank you for your feedback!'}\r\n                buttons={[\r\n                    {\r\n                        text: 'Close',\r\n                        handler: () => {\r\n                            reset({\r\n                                attendedDate: null,\r\n                                feedbackNature: null,\r\n                                feedbackTextarea: null\r\n                            });\r\n                        }\r\n                    }\r\n                ]}\r\n            ></IonAlert>\r\n\r\n            <IonPage>\r\n                <IonHeader>\r\n                    <TopNav title=\"Open House Feedback Form\" route='/u/usefulInfoMain' backarrow={true} hamburger={true} />\r\n                </IonHeader>\r\n\r\n                <IonContent fullscreen={true} className=\"openHouseFeedbackIonContent\">\r\n                    <IonGrid id=\"openHouseFeedbackGrid\">\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <IonRow id=\"openHouseFeedbackMainTitleRow\">\r\n                                <IonCol style={{ padding: \"0\" }}>\r\n                                    <IonRow id=\"openHouseFeedbackMainTitle\">SIM Open House Feedback</IonRow>\r\n                                    <IonRow id=\"openHouseFeedbackSubtitle\">We'll love to hear from you!</IonRow>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Attended Open House Date */}\r\n                            <IonRow className=\"openHouseFeedbackTitleRow\">\r\n                                <IonTitle className=\"openHouseFeedbackTitle\">Attended Open House Date *</IonTitle>\r\n                            </IonRow>\r\n\r\n                            <IonRow id=\"attendedDateRow\">\r\n                                <IonCol size=\"12\" sizeSm=\"12\" style={{ padding: \"0\" }}>\r\n                                    <IonItem id=\"attendedDateItem\" lines=\"none\">\r\n                                        <IonSelect id=\"attendedDateSelect\" name=\"attendedDate\" placeholder=\"Select Date\" ref={register({ required: true })}>\r\n                                            {openhouseDates.map((date) => {\r\n                                                return (<IonSelectOption key={date} value={date} className=\"attendedDateSelectOption\">{date}</IonSelectOption>)\r\n                                            })}\r\n                                        </IonSelect>\r\n                                    </IonItem>\r\n                                    {errors.attendedDate && errors.attendedDate.type === \"required\" && <p className=\"errorMsg\">Attended open house date is required!</p>}\r\n\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Nature of Feedback */}\r\n                            <IonRow className=\"openHouseFeedbackTitleRow\">\r\n                                <IonTitle className=\"openHouseFeedbackTitle\">Nature of Feedback *</IonTitle>\r\n                            </IonRow>\r\n\r\n                            <IonRow id=\"feedbackNatureRow\">\r\n                                <IonCol size=\"12\" sizeSm=\"12\" style={{ padding: \"0\" }}>\r\n                                    <IonItem id=\"feedbackNatureMainItem\" lines=\"none\">\r\n                                        <IonRadioGroup id=\"feedbackNatureRadioGroup\" name=\"feedbackNature\" ref={register({ required: true })}>\r\n                                            <IonItem id=\"feedbackNatureItem\" lines=\"none\">\r\n                                                <IonLabel>Compliment</IonLabel>\r\n                                                <IonRadio slot=\"start\" value=\"compliment\" className=\"feedbackNatureRadio\">Compliment</IonRadio>\r\n                                            </IonItem>\r\n\r\n                                            <IonItem id=\"feedbackNatureItem\" lines=\"none\">\r\n                                                <IonLabel>Complaint</IonLabel>\r\n                                                <IonRadio slot=\"start\" value=\"complaint\" className=\"feedbackNatureRadio\">Complaint</IonRadio>\r\n                                            </IonItem>\r\n\r\n                                            <IonItem id=\"feedbackNatureItem\" lines=\"none\">\r\n                                                <IonLabel>Suggestion</IonLabel>\r\n                                                <IonRadio slot=\"start\" value=\"suggestion\" className=\"feedbackNatureRadio\">Suggestion</IonRadio>\r\n                                            </IonItem>\r\n                                        </IonRadioGroup>\r\n                                    </IonItem>\r\n                                    {errors.feedbackNature && errors.feedbackNature.type === \"required\" && <p className=\"errorMsg\">Nature of feedback is required!</p>}\r\n\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Feedback/ Comments */}\r\n                            <IonRow className=\"openHouseFeedbackTitleRow\">\r\n                                <IonTitle className=\"openHouseFeedbackTitle\">Your Feedback/ Comments *</IonTitle>\r\n                            </IonRow>\r\n\r\n                            <IonRow>\r\n                                <IonTextarea id=\"feedbackTextarea\" name=\"feedbackTextarea\" wrap=\"hard\" rows={8} inputmode=\"text\" placeholder=\"Type your feedback/ comments here...\" ref={register({ required: true })}></IonTextarea>\r\n                            </IonRow>\r\n                            {errors.feedbackTextarea && errors.feedbackTextarea.type === \"required\" && <p className=\"errorMsg\">Your feedback/ comment is required!</p>}\r\n\r\n                            <IonRow class=\"ion-justify-content-center\" style={{ marginTop: \"5%\", marginBottom: \"3%\" }}>\r\n                                <IonButton size=\"large\" id=\"feedbackBtn\" type=\"submit\">SUBMIT</IonButton>\r\n                            </IonRow>\r\n                        </form>\r\n                    </IonGrid>\r\n                </IonContent>\r\n            </IonPage>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default OpenHouseFeedback;"]},"metadata":{},"sourceType":"module"}