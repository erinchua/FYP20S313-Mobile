{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\MySchedule.tsx\";\nimport { IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport { useAuth } from '../auth';\nimport { toSchedule } from '../schedule';\nimport '../css/Global.css';\nimport '../css/MySchedule.css';\nimport TopNav from '../components/TopNav';\nimport MyScheduleContent from '../components/MyScheduleContent';\n\nconst MySchedule = () => {\n  const {\n    userID\n  } = useAuth();\n  const [dayNum, setDayNum] = useState(\"day1\");\n  const [openhouseDates, setOpenhouseDates] = useState([]);\n  const [programmeTalks, setProgrammeTalks] = useState([]);\n  const [guidedTours, setGuidedTours] = useState([]);\n  const [performances, setPerformances] = useState([]);\n  const [gamesActivities, setGamesActivities] = useState([]);\n  const [openHouseProgs, setOpenHouseProgs] = useState([]);\n\n  const handleDayOne = () => {\n    setDayNum(\"day1\");\n  };\n\n  const handleDayTwo = () => {\n    setDayNum(\"day2\");\n  };\n\n  useEffect(() => {\n    const dates = [];\n    db.collection('Openhouse').get().then(snapshot => {\n      snapshot.forEach(doc => {\n        const data = doc.get('day');\n        data.forEach(day => {\n          dates.push(day.date);\n        });\n      });\n      setOpenhouseDates(dates);\n    }).catch(error => console.log(error)); // Have problem\n\n    db.collection('PersonalScheduler').doc(userID).get().then(snapshot => {\n      const registered = snapshot.data().registeredProgrammes; //const talks: any = [], tours: any = [], perform: any = [], games: any = [];\n\n      const scheduleProgs = [];\n      registered.forEach(item => {\n        const itemType = item.split(\"-\");\n\n        switch (itemType[0]) {\n          case \"talk\":\n            //console.log(item);\n            db.collection('ProgrammeTalks').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\n            break;\n\n          case \"tour\":\n            //db.collection('GuidedTours').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\n            break;\n\n          case \"performance\":\n            //db.collection('Performances').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\n            break;\n\n          case \"activity\":\n            //db.collection('GamesActivities').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\n            break;\n\n          default:\n            return;\n        }\n      });\n      console.log(scheduleProgs); // this one returns no value, length is 0\n      // setProgrammeTalks(talks.map(toSchedule));\n      // setGuidedTours(tours.map(toSchedule));\n      // setPerformances(perform.map(toSchedule));\n      // setGamesActivities(games.map(toSchedule));\n\n      setOpenHouseProgs(scheduleProgs.map(toSchedule));\n    }); // No problem\n\n    db.collection('ProgrammeTalks').get().then(snapshot => {\n      const items = [];\n      snapshot.forEach(doc => items.push(doc.data()));\n      console.log(items); // this one returns a value, length is 6\n\n      return setProgrammeTalks(items.map(toSchedule));\n    }).catch(err => console.log(err));\n    ;\n    /* db.collection('GuidedTours').get().then(snapshot => {\r\n        const items: any = [];\r\n        snapshot.forEach((doc) => items.push(doc.data()));\r\n        return setGuidedTours(items.map(toSchedule));\r\n    }).catch(err => console.log(err));;\r\n      db.collection('Performances').get().then(snapshot => {\r\n        const items: any = [];\r\n        snapshot.forEach((doc) => items.push(doc.data()));\r\n        return setPerformances(items.map(toSchedule));\r\n    }).catch(err => console.log(err));;\r\n      db.collection('GamesActivities').get().then(snapshot => {\r\n        const items: any = [];\r\n        snapshot.forEach((doc) => items.push(doc.data()));\r\n        return setGamesActivities(items.map(toSchedule));\r\n    }).catch(err => console.log(err)); */\n  }, []); //console.log(programmeTalks)\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"My Schedule\",\n    route: \"/u/home\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"myScheduleIonContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"myScheduleGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-justify-content-center openHouseDateRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    sizeSm: \"6\",\n    className: \"openHouseDateCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateTitleText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, \"From: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, openhouseDates[0]), \" \"), /*#__PURE__*/React.createElement(IonCol, {\n    sizeSm: \"6\",\n    className: \"openHouseDateCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateTitleText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, \"To: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, openhouseDates[1]), \" \")), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"mySchedule-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    onIonChange: e => console.log(`${e.detail.value}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"mySchedule-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, \"Day 1: \", openhouseDates[0], \"  \"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"mySchedule-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, \"Day 2: \", openhouseDates[1], \"  \"))))), /*#__PURE__*/React.createElement(MyScheduleContent, {\n    day1: dayNum,\n    day2: dayNum,\n    openhouseDates: openhouseDates,\n    openHouseProgs: [...programmeTalks, ...guidedTours, ...performances, ...gamesActivities],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default MySchedule;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/MySchedule.tsx"],"names":["IonCol","IonContent","IonGrid","IonHeader","IonPage","IonRow","IonSegment","IonSegmentButton","IonToolbar","React","useEffect","useState","db","useAuth","toSchedule","TopNav","MyScheduleContent","MySchedule","userID","dayNum","setDayNum","openhouseDates","setOpenhouseDates","programmeTalks","setProgrammeTalks","guidedTours","setGuidedTours","performances","setPerformances","gamesActivities","setGamesActivities","openHouseProgs","setOpenHouseProgs","handleDayOne","handleDayTwo","dates","collection","get","then","snapshot","forEach","doc","data","day","push","date","catch","error","console","log","registered","registeredProgrammes","scheduleProgs","item","itemType","split","map","items","err","e","detail","value"],"mappings":"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","sourcesContent":["import { IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { db } from '../firebase';\r\nimport { useAuth } from '../auth';\r\nimport { ScheduleItem, toSchedule } from '../schedule';\r\nimport '../css/Global.css';\r\nimport '../css/MySchedule.css';\r\n\r\nimport TopNav from '../components/TopNav';\r\nimport Menu from '../components/Menu';\r\nimport MyScheduleContent from '../components/MyScheduleContent';\r\n\r\nconst MySchedule: React.FC = () => {\r\n    const { userID } = useAuth();\r\n    const [dayNum, setDayNum] = useState(\"day1\");\r\n    const [openhouseDates, setOpenhouseDates] = useState([]);\r\n    const [programmeTalks, setProgrammeTalks] = useState<ScheduleItem[]>([]);\r\n    const [guidedTours, setGuidedTours] = useState<ScheduleItem[]>([]);\r\n    const [performances, setPerformances] = useState<ScheduleItem[]>([]);\r\n    const [gamesActivities, setGamesActivities] = useState<ScheduleItem[]>([]);\r\n    const [openHouseProgs, setOpenHouseProgs] = useState<ScheduleItem[]>([]);\r\n\r\n    const handleDayOne = () => {\r\n        setDayNum(\"day1\");\r\n    };\r\n    \r\n    const handleDayTwo = () => {\r\n        setDayNum(\"day2\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        const dates: any = [];\r\n    \r\n        db.collection('Openhouse').get().then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n                const data = doc.get('day')\r\n                data.forEach((day: any) => { dates.push(day.date) })\r\n            });\r\n            setOpenhouseDates(dates);\r\n        }).catch((error) => console.log(error));\r\n\r\n        // Have problem\r\n        db.collection('PersonalScheduler').doc(userID).get().then((snapshot: any) => {\r\n            const registered = snapshot.data().registeredProgrammes;\r\n            //const talks: any = [], tours: any = [], perform: any = [], games: any = [];\r\n            const scheduleProgs: any = [];\r\n            registered.forEach((item: any) => {\r\n                const itemType = item.split(\"-\");\r\n                switch (itemType[0]) {\r\n                    case \"talk\":\r\n                        //console.log(item);\r\n                        db.collection('ProgrammeTalks').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\r\n                        break;\r\n                    case \"tour\":\r\n                        //db.collection('GuidedTours').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\r\n                        break;\r\n                    case \"performance\":\r\n                        //db.collection('Performances').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\r\n                        break;\r\n                    case \"activity\":\r\n                        //db.collection('GamesActivities').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\r\n                        break;\r\n                    default:\r\n                        return;\r\n                }\r\n            });\r\n            console.log(scheduleProgs) // this one returns no value, length is 0\r\n            // setProgrammeTalks(talks.map(toSchedule));\r\n            // setGuidedTours(tours.map(toSchedule));\r\n            // setPerformances(perform.map(toSchedule));\r\n            // setGamesActivities(games.map(toSchedule));\r\n            setOpenHouseProgs(scheduleProgs.map(toSchedule));\r\n        });\r\n    \r\n        // No problem\r\n        db.collection('ProgrammeTalks').get().then(snapshot => {\r\n            const items: any = [];\r\n            snapshot.forEach((doc) => items.push(doc.data()));\r\n            console.log(items) // this one returns a value, length is 6\r\n            return setProgrammeTalks(items.map(toSchedule));\r\n        }).catch(err => console.log(err));;\r\n\r\n        /* db.collection('GuidedTours').get().then(snapshot => {\r\n            const items: any = [];\r\n            snapshot.forEach((doc) => items.push(doc.data()));\r\n            return setGuidedTours(items.map(toSchedule));\r\n        }).catch(err => console.log(err));;\r\n\r\n        db.collection('Performances').get().then(snapshot => {\r\n            const items: any = [];\r\n            snapshot.forEach((doc) => items.push(doc.data()));\r\n            return setPerformances(items.map(toSchedule));\r\n        }).catch(err => console.log(err));;\r\n\r\n        db.collection('GamesActivities').get().then(snapshot => {\r\n            const items: any = [];\r\n            snapshot.forEach((doc) => items.push(doc.data()));\r\n            return setGamesActivities(items.map(toSchedule));\r\n        }).catch(err => console.log(err)); */\r\n\r\n    }, []);\r\n\r\n    //console.log(programmeTalks)\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <TopNav title=\"My Schedule\" route='/u/home' backarrow={ true } hamburger = { true }/>\r\n            </IonHeader>\r\n            \r\n            <IonContent fullscreen={true} className=\"myScheduleIonContent\">\r\n                <IonGrid className=\"myScheduleGrid\">\r\n                    <IonRow className=\"ion-justify-content-center openHouseDateRow\">\r\n                        <IonCol sizeSm=\"6\" className=\"openHouseDateCol\">\r\n                            <span className=\"openHouseDateTitleText\">From: </span> \r\n                            <span className=\"openHouseDateText\">{openhouseDates[0]}</span> {/* Date is not hardcoded */}\r\n                        </IonCol>\r\n                        <IonCol sizeSm=\"6\" className=\"openHouseDateCol\">\r\n                            <span className=\"openHouseDateTitleText\">To: </span> \r\n                            <span className=\"openHouseDateText\">{openhouseDates[1]}</span> {/* Date is not hardcoded */}\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow className=\"mySchedule-IonRowCol\">\r\n                        <IonToolbar>\r\n                            <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                                <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"mySchedule-DayTab\">\r\n                                    Day 1: {openhouseDates[0]}  {/* Date is not hardcoded, only Day 1: is */}\r\n                                </IonSegmentButton>\r\n                                \r\n                                <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"mySchedule-DayTab\">\r\n                                    Day 2: {openhouseDates[1]}  {/* Date is not hardcoded, only Day 2: is */}\r\n                                </IonSegmentButton>\r\n                            </IonSegment>\r\n                        </IonToolbar>\r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <MyScheduleContent day1={dayNum} day2={dayNum} openhouseDates={openhouseDates} openHouseProgs={[...programmeTalks, ...guidedTours, ...performances, ...gamesActivities]} />\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default MySchedule;"]},"metadata":{},"sourceType":"module"}