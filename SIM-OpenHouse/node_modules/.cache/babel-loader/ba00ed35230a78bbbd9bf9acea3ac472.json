{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\components\\\\OpenHouseProgrammes\\\\GamesContent.tsx\";\nimport { IonGrid, IonRow, IonCol, IonButton, IonLoading, IonAlert } from '@ionic/react';\nimport React, { useState } from 'react';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport firebase from 'firebase';\nimport '../../css/Global.css';\nimport '../../css/OpenHouseActivities.css';\nimport { db } from '../../firebase';\nimport { useAuth } from '../../modules/auth';\nimport { notification } from '../../modules/notifications';\n\nconst GamesContent = props => {\n  const {\n    userID\n  } = useAuth();\n  const [alert, setAlert] = useState({\n    registerSuccess: false,\n    registerFail: false,\n    loading: false\n  });\n  const gamesActivitiesDay1 = props.gamesActivities.filter(activity => {\n    return activity.date === props.openhouseDates[0];\n  });\n  const gamesActivitiesDay2 = props.gamesActivities.filter(activity => {\n    return activity.date === props.openhouseDates[1];\n  });\n\n  const addToSchedule = async programme => {\n    try {\n      setAlert({\n        registerSuccess: false,\n        registerFail: false,\n        loading: true\n      });\n      notification(programme.date, programme.startTime, programme.gameBoothName, \"programme\");\n      await db.collection('PersonalScheduler').doc(userID).update({\n        registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id)\n      });\n      setAlert({\n        registerSuccess: true,\n        registerFail: false,\n        loading: false\n      });\n    } catch (e) {\n      setAlert({\n        registerSuccess: false,\n        registerFail: false,\n        loading: false\n      });\n      return console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: alert.registerSuccess,\n    onDidDismiss: () => setAlert({\n      registerSuccess: false,\n      registerFail: false,\n      loading: false\n    }),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    header: 'Successfully Added',\n    message: 'You have successfully added the game/ activity to My Schedule.',\n    buttons: ['Close'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: alert.registerFail,\n    onDidDismiss: () => setAlert({\n      registerSuccess: false,\n      registerFail: false,\n      loading: false\n    }),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    header: 'Error Occurred',\n    message: 'There exists a game/ activity in your scheduler at this timing. Please remove the existing activity from your scheduler first!',\n    buttons: ['Close'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"gamesContent-tableGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    id: \"gamesContent-tableHeader\",\n    className: \"ion-justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"gamesContent-Header ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Booth No.\"), /*#__PURE__*/React.createElement(IonCol, {\n    className: \"gamesContent-Header ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Booth Name\"), /*#__PURE__*/React.createElement(IonCol, {\n    className: \"gamesContent-Header ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Venue\"), /*#__PURE__*/React.createElement(IonCol, {\n    className: \"gamesContent-Header ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Points\"), /*#__PURE__*/React.createElement(IonCol, {\n    className: \"gamesContent-Header ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Add to My Schedule\")), props.day1 === 'day1' ? gamesActivitiesDay1.map(activity => {\n    return /*#__PURE__*/React.createElement(IonRow, {\n      className: \"ion-justify-content-center\",\n      key: activity.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      className: \"gamesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, activity.boothNumber), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"gamesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, activity.gameBoothName), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"gamesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, activity.venue), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"gamesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, activity.pointsAward), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"gamesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IonButton, {\n      className: \"gamesContent-DataBtn\",\n      size: \"small\",\n      style: {\n        marginTop: \"-5%\",\n        marginBottom: \"-5%\"\n      },\n      onClick: () => addToSchedule(activity),\n      disabled: props.scheduleItems.includes(activity.id) ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 41\n      }\n    }))));\n  }) : '', props.day2 === 'day2' ? gamesActivitiesDay2.map(activity => {\n    return /*#__PURE__*/React.createElement(IonRow, {\n      className: \"ion-justify-content-center\",\n      key: activity.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      className: \"gamesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, activity.boothNumber), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"gamesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, activity.gameBoothName), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"gamesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, activity.venue), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"gamesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, activity.pointsAward), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"gamesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IonButton, {\n      className: \"gamesContent-DataBtn\",\n      size: \"small\",\n      style: {\n        marginTop: \"-5%\",\n        marginBottom: \"-5%\"\n      },\n      onClick: () => addToSchedule(activity),\n      disabled: props.scheduleItems.includes(activity.id) ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    }))));\n  }) : ''), /*#__PURE__*/React.createElement(IonLoading, {\n    isOpen: alert.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default GamesContent;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/components/OpenHouseProgrammes/GamesContent.tsx"],"names":["IonGrid","IonRow","IonCol","IonButton","IonLoading","IonAlert","React","useState","faPlus","FontAwesomeIcon","firebase","db","useAuth","notification","GamesContent","props","userID","alert","setAlert","registerSuccess","registerFail","loading","gamesActivitiesDay1","gamesActivities","filter","activity","date","openhouseDates","gamesActivitiesDay2","addToSchedule","programme","startTime","gameBoothName","collection","doc","update","registeredProgrammes","firestore","FieldValue","arrayUnion","id","e","console","log","day1","map","boothNumber","venue","pointsAward","marginTop","marginBottom","scheduleItems","includes","day2"],"mappings":"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","sourcesContent":["import { IonGrid, IonRow, IonCol, IonButton, IonLoading, IonAlert } from '@ionic/react';\r\nimport React, { useState } from 'react';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport firebase from 'firebase';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/OpenHouseActivities.css'\r\nimport { db } from '../../firebase';\r\nimport { useAuth } from '../../modules/auth';\r\nimport { notification } from '../../modules/notifications';\r\n\r\nconst GamesContent: React.FC<{ day1: any, day2: any, gamesActivities: any, openhouseDates: any, scheduleItems: any[] }> = props => {\r\n    const { userID } = useAuth();\r\n\r\n    const [alert, setAlert] = useState({ registerSuccess: false, registerFail: false, loading: false });\r\n\r\n    const gamesActivitiesDay1 = props.gamesActivities.filter((activity: any) => { return activity.date === props.openhouseDates[0] });\r\n    const gamesActivitiesDay2 = props.gamesActivities.filter((activity: any) => { return activity.date === props.openhouseDates[1] });\r\n\r\n    const addToSchedule = async (programme: any) => {\r\n        try {\r\n            setAlert({ registerSuccess: false, registerFail: false, loading: true });\r\n            notification(programme.date, programme.startTime, programme.gameBoothName, \"programme\");\r\n            \r\n            await db.collection('PersonalScheduler').doc(userID).update({\r\n                registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id)\r\n            });\r\n            setAlert({ registerSuccess: true, registerFail: false, loading: false });\r\n        } catch (e) {\r\n            setAlert({ registerSuccess: false, registerFail: false, loading: false });\r\n            return console.log(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IonAlert\r\n                isOpen={alert.registerSuccess}\r\n                onDidDismiss={() => setAlert({ registerSuccess: false, registerFail: false, loading: false })}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Successfully Added'}\r\n                message={'You have successfully added the game/ activity to My Schedule.'}\r\n                buttons={['Close']}\r\n            ></IonAlert>\r\n\r\n            <IonAlert\r\n                isOpen={alert.registerFail}\r\n                onDidDismiss={() => setAlert({ registerSuccess: false, registerFail: false, loading: false })}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Error Occurred'}\r\n                message={'There exists a game/ activity in your scheduler at this timing. Please remove the existing activity from your scheduler first!'}\r\n                buttons={['Close']}\r\n            ></IonAlert>\r\n\r\n            <IonGrid id=\"gamesContent-tableGrid\">\r\n                <IonRow id=\"gamesContent-tableHeader\" className=\"ion-justify-content-center\">\r\n                    <IonCol className=\"gamesContent-Header ion-text-wrap\">Booth No.</IonCol>\r\n                    <IonCol className=\"gamesContent-Header ion-text-wrap\">Booth Name</IonCol>\r\n                    <IonCol className=\"gamesContent-Header ion-text-wrap\">Venue</IonCol>\r\n                    <IonCol className=\"gamesContent-Header ion-text-wrap\">Points</IonCol>\r\n                    <IonCol className=\"gamesContent-Header ion-text-wrap\">Add to My Schedule</IonCol>\r\n                </IonRow>\r\n                {props.day1 === 'day1' ?\r\n                    gamesActivitiesDay1.map((activity: any) => {\r\n                        return (\r\n                            <IonRow className=\"ion-justify-content-center\" key={activity.id}>\r\n                                <IonCol className=\"gamesContent-Data ion-text-wrap\">{activity.boothNumber}</IonCol>\r\n                                <IonCol className=\"gamesContent-Data ion-text-wrap\">{activity.gameBoothName}</IonCol>\r\n                                <IonCol className=\"gamesContent-Data ion-text-wrap\">{activity.venue}</IonCol>\r\n                                <IonCol className=\"gamesContent-Data ion-text-wrap\">{activity.pointsAward}</IonCol>\r\n                                <IonCol className=\"gamesContent-Data ion-text-wrap\">\r\n                                    <IonButton className=\"gamesContent-DataBtn\" size=\"small\" style={{ marginTop: \"-5%\", marginBottom: \"-5%\" }} onClick={() => addToSchedule(activity)} disabled={props.scheduleItems.includes(activity.id) ? true : false}>\r\n                                        <FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        )\r\n                    })\r\n                    : ''\r\n                }\r\n                {props.day2 === 'day2' ?\r\n                    gamesActivitiesDay2.map((activity: any) => {\r\n                        return (\r\n                            <IonRow className=\"ion-justify-content-center\" key={activity.id}>\r\n                                <IonCol className=\"gamesContent-Data ion-text-wrap\">{activity.boothNumber}</IonCol>\r\n                                <IonCol className=\"gamesContent-Data ion-text-wrap\">{activity.gameBoothName}</IonCol>\r\n                                <IonCol className=\"gamesContent-Data ion-text-wrap\">{activity.venue}</IonCol>\r\n                                <IonCol className=\"gamesContent-Data ion-text-wrap\">{activity.pointsAward}</IonCol>\r\n                                <IonCol className=\"gamesContent-Data ion-text-wrap\">\r\n                                    <IonButton className=\"gamesContent-DataBtn\" size=\"small\" style={{ marginTop: \"-5%\", marginBottom: \"-5%\" }} onClick={() => addToSchedule(activity)} disabled={props.scheduleItems.includes(activity.id) ? true : false}>\r\n                                        <FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        )\r\n                    })\r\n                    : ''\r\n                }\r\n            </IonGrid>\r\n            <IonLoading isOpen={alert.loading} />\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default GamesContent;"]},"metadata":{},"sourceType":"module"}