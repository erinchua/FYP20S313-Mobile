{"ast":null,"code":"import{IonContent,IonPage,IonGrid,IonRow,IonCol,IonButton,IonItem,IonInput}from'@ionic/react';import React from'react';import{useForm}from\"react-hook-form\";import{withRouter}from'react-router-dom';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPaperPlane}from'@fortawesome/free-regular-svg-icons';import'../css/ForgetPassword1.css';import'../css/Global.css';import TopNav from'../components/TopNav';import{auth}from'../firebase';var ForgetPassword1=function ForgetPassword1(){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors;var onSubmit=function onSubmit(data){//console.log(auth);\nauth.sendPasswordResetEmail(data.emailID).then(function(){//alert for verification email sent\nconsole.log(\"Email sent\");}).catch(function(err){return console.log(err);});};return/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(TopNav,{title:\"Forget Password?\",route:\"/main\",backarrow:true,hamburger:false}),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true,style:{display:\"flex\"}},/*#__PURE__*/React.createElement(IonGrid,{className:\"forgetPwdGrid\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(IonRow,{class:\"ion-justify-content-center\"},/*#__PURE__*/React.createElement(IonCol,null),/*#__PURE__*/React.createElement(IonCol,{size:\"6\",style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{id:\"registeredEmail_logo\",size:\"5x\",icon:faPaperPlane})),/*#__PURE__*/React.createElement(IonCol,null)),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonCol,null),/*#__PURE__*/React.createElement(IonCol,{size:\"10\"},/*#__PURE__*/React.createElement(\"p\",{id:\"text1\"},/*#__PURE__*/React.createElement(\"b\",null,\"Please enter your registered Email ID\")),/*#__PURE__*/React.createElement(\"p\",{id:\"text2\"},\"We will send a verification code to your registered email ID.\"),/*#__PURE__*/React.createElement(IonItem,null,/*#__PURE__*/React.createElement(IonInput,{id:\"emailID\",type:\"email\",placeholder:\"Email ID\",name:\"emailID\",ref:register({required:\"Email ID is required!\",pattern:{value:/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,message:\"Invalid Email ID!\"}})})),/*#__PURE__*/React.createElement(\"p\",{id:\"errorMsg\"},/*#__PURE__*/React.createElement(\"span\",null,errors.emailID&&errors.emailID.message))),/*#__PURE__*/React.createElement(IonCol,null)),/*#__PURE__*/React.createElement(IonRow,{class:\"ion-justify-content-center\",style:{marginTop:\"10%\"}},/*#__PURE__*/React.createElement(IonButton,{size:\"large\",className:\"otpBtn\",type:\"submit\"},\"SEND CODE\"))))));};export default withRouter(ForgetPassword1);","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/ForgetPassword1.tsx"],"names":["IonContent","IonPage","IonGrid","IonRow","IonCol","IonButton","IonItem","IonInput","React","useForm","withRouter","FontAwesomeIcon","faPaperPlane","TopNav","auth","ForgetPassword1","register","handleSubmit","errors","onSubmit","data","sendPasswordResetEmail","emailID","then","console","log","catch","err","display","textAlign","required","pattern","value","message","marginTop"],"mappings":"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","sourcesContent":["import { IonContent, \r\n    IonPage, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonButton, \r\n    IonItem, \r\n    IonInput } from '@ionic/react';\r\nimport React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPaperPlane } from '@fortawesome/free-regular-svg-icons'\r\n\r\nimport '../css/ForgetPassword1.css';\r\nimport '../css/Global.css';\r\n\r\nimport TopNav from '../components/TopNav';\r\nimport { auth } from '../firebase';\r\n\r\n\r\nconst ForgetPassword1: React.FC = () => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = (data: any) => {\r\n        //console.log(auth);\r\n        auth.sendPasswordResetEmail(data.emailID).then(() => {\r\n            //alert for verification email sent\r\n            console.log(\"Email sent\");\r\n        }).catch(err => { return console.log(err) });\r\n    };\r\n\r\n    return (\r\n      <IonPage>\r\n        <TopNav title=\"Forget Password?\" route=\"/main\" backarrow={ true } hamburger = { false }/>\r\n\r\n        <IonContent fullscreen style={{display: \"flex\"}}>\r\n            <IonGrid className=\"forgetPwdGrid\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <IonRow class=\"ion-justify-content-center\">\r\n                        <IonCol></IonCol>\r\n                        <IonCol size=\"6\" style={{textAlign: \"center\"}}>\r\n                            <FontAwesomeIcon id=\"registeredEmail_logo\" size=\"5x\" icon={faPaperPlane} />\r\n                        </IonCol>\r\n                        <IonCol></IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow>\r\n                        <IonCol></IonCol>\r\n                        <IonCol size=\"10\">\r\n                            <p id=\"text1\"><b>Please enter your registered Email ID</b></p>\r\n                            <p id=\"text2\">We will send a verification code to your registered email ID.</p>\r\n                            <IonItem>\r\n                                <IonInput id=\"emailID\" type=\"email\" placeholder=\"Email ID\" name=\"emailID\" \r\n                                ref={register({\r\n                                    required: \"Email ID is required!\",\r\n                                    pattern: {\r\n                                      value: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                      message: \"Invalid Email ID!\"\r\n                                    }\r\n                                  })}>\r\n                                </IonInput>\r\n                            </IonItem>\r\n                            <p id=\"errorMsg\">\r\n                                <span>\r\n                                    {errors.emailID && errors.emailID.message}\r\n                                </span>\r\n                            </p>\r\n                        </IonCol>\r\n                        <IonCol></IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow class=\"ion-justify-content-center\" style={{marginTop:\"10%\"}}>\r\n                        <IonButton size=\"large\" className=\"otpBtn\" type=\"submit\">SEND CODE</IonButton>\r\n                    </IonRow>\r\n                </form>\r\n            </IonGrid>\r\n        </IonContent>\r\n      </IonPage>\r\n    );\r\n  };\r\n  \r\n  export default withRouter(ForgetPassword1);"]},"metadata":{},"sourceType":"module"}