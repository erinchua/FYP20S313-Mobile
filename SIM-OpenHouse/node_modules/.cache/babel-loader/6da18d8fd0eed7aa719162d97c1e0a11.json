{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\OpenHouseProgrammes\\\\ProgrammeTalks.tsx\";\nimport { IonButton, IonButtons, IonCol, IonContent, IonGrid, IonHeader, IonPage, IonPopover, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/Global.css';\nimport '../../css/ProgrammeTalks.css';\nimport TopNav from '../../components/TopNav';\nimport ProgTalkSchedule from '../../components/OpenHouseProgrammes/ProgTalkSchedule';\nimport ProgTalkLiveTalks from '../../components/OpenHouseProgrammes/ProgTalkLiveTalks';\nimport ProgTalkPastRec from '../../components/OpenHouseProgrammes/ProgTalkPastRec';\nimport FilterPopoverContent from '../../components/FilterPopoverContent';\nimport { db } from '../../firebase';\nimport { useAuth } from '../../modules/auth';\n\nconst ProgrammeTalks = () => {\n  const {\n    userID\n  } = useAuth();\n  const [tab, setTab] = useState(\"schedule\");\n  const [dayNum, setDayNum] = useState(\"day1\");\n  const [scheduleItems, setScheduleItems] = useState([]);\n\n  const handleDayOne = () => {\n    setDayNum(\"day1\");\n  };\n\n  const handleDayTwo = () => {\n    setDayNum(\"day2\");\n  };\n\n  const handleSchedule = () => {\n    setTab(\"schedule\");\n  };\n\n  const handleLiveTalks = () => {\n    setTab(\"liveTalks\");\n  };\n\n  const handlePastRec = () => {\n    setTab(\"pastRecordings\");\n  };\n\n  const [openhouseDates, setOpenhouseDates] = useState([]);\n  const [initialProgtalk, setIntialProgTalk] = useState([]);\n  const [programmeTalk, setProgrammeTalk] = useState([]);\n  const [recordedTalk, setRecordedTalk] = useState([]);\n  const [liveTalk, setLiveTalk] = useState([]);\n  useEffect(() => {\n    const dates = [];\n    db.collection(\"Openhouse\").get().then(snapshot => {\n      snapshot.forEach(doc => {\n        const data = doc.get('day');\n\n        if (!Array.isArray(data)) {\n          for (var i = 0; i < Object.keys(data).length; i++) {\n            const date = data[Object.keys(data)[i]].date;\n            dates.push(date);\n          }\n        }\n      });\n      setOpenhouseDates(dates);\n    }).catch(error => console.log(error));\n    db.collection(\"ProgrammeTalks\").get().then(snapshot => {\n      const programmeTalk = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        programmeTalk.push(data);\n      });\n      setIntialProgTalk(programmeTalk);\n      setProgrammeTalk(programmeTalk);\n    }).catch(error => console.log(error));\n    return db.collection('PersonalScheduler').doc(userID).onSnapshot(snap => {\n      var _snap$data;\n\n      setScheduleItems((_snap$data = snap.data()) === null || _snap$data === void 0 ? void 0 : _snap$data.registeredProgrammes);\n    });\n  }, []);\n  useEffect(() => {\n    const liveTalk = initialProgtalk.filter(talk => {\n      return talk.isLive === true;\n    });\n    const recordedTalk = initialProgtalk.filter(talk => {\n      return talk.hasRecording === true;\n    });\n    setRecordedTalk(recordedTalk);\n    setLiveTalk(liveTalk);\n  }, [initialProgtalk]);\n  /* Display Filter Menu Popover */\n\n  const [showProgTalkFilterPopover, setShowProgTalkFilterPopover] = useState({\n    open: false,\n    event: undefined\n  }); //For Filters\n\n  const [filterCondition, setFilterCondition] = useState({\n    mos: [],\n    discipline: ['Arts & Social Sciences', 'Business', 'IT & Computer Science', 'Nursing', 'Specialty'],\n    uni: [],\n    acadLvl: [],\n    entry: [],\n    subDisc: []\n  });\n\n  const updateScheduleTalks = data => {\n    setProgrammeTalk(data);\n  };\n\n  const updateRecTalks = data => {\n    setRecordedTalk(data);\n  };\n\n  const filterTalks = async (condition, callback) => {\n    const initialList = [];\n    let filteredList = [];\n    let segmentFilter = [];\n    await db.collection('ProgrammeTalks').get().then(snapshot => {\n      snapshot.docs.forEach(doc => {\n        const data = doc.data();\n        initialList.push(data);\n      });\n    });\n    Object.entries(condition).map(([key, value]) => {\n      if (key === 'discipline') {\n        let discFiltered = [];\n\n        if (value.length > 0 && value.length <= 4) {\n          value.forEach(value => {\n            segmentFilter = initialList.filter(programme => programme.discipline.includes(value));\n            discFiltered = discFiltered.concat(segmentFilter);\n          });\n          filteredList = discFiltered;\n        } else {\n          filteredList = initialList;\n        }\n      } else if (key === 'uni') {\n        let uniFiltered = [];\n\n        if (value.length > 0) {\n          value.forEach(value => {\n            segmentFilter = filteredList.filter(programme => programme.awardingUni === value);\n            uniFiltered = uniFiltered.concat(segmentFilter);\n          });\n          filteredList = uniFiltered;\n        }\n      }\n    });\n    callback(filteredList);\n  };\n\n  const filterRecTalks = async (condition, callback) => {\n    const initialList = [];\n    let filteredList = [];\n    let segmentFilter = [];\n    await db.collection('ProgrammeTalks').where(\"hasRecording\", '==', true).get().then(snapshot => {\n      snapshot.docs.forEach(doc => {\n        const data = doc.data();\n        initialList.push(data);\n      });\n    });\n    Object.entries(condition).map(([key, value]) => {\n      if (key === 'discipline') {\n        let discFiltered = [];\n\n        if (value.length > 0 && value.length <= 4) {\n          value.forEach(value => {\n            segmentFilter = initialList.filter(programme => programme.discipline.includes(value));\n            discFiltered = discFiltered.concat(segmentFilter);\n          });\n          filteredList = discFiltered;\n        } else {\n          filteredList = initialList;\n        }\n      } else if (key === 'uni') {\n        let uniFiltered = [];\n\n        if (value.length > 0) {\n          value.forEach(value => {\n            segmentFilter = filteredList.filter(programme => programme.awardingUni === value);\n            uniFiltered = uniFiltered.concat(segmentFilter);\n          });\n          filteredList = uniFiltered;\n        }\n      }\n    });\n    callback(filteredList);\n  };\n\n  const onUpdateFilter = (mosFilter, discFilter, uniFilter, acadLvlFilter, entryFilter, subDiscFilter) => {\n    setFilterCondition(prevState => {\n      let filter = { ...prevState\n      };\n      Object.keys(filter).map(key => {\n        if (key === 'mos') filter[key] = mosFilter;\n        if (key === 'discipline') filter[key] = discFilter;\n        if (key === 'uni') filter[key] = uniFilter;\n        if (key === 'acadLvl') filter[key] = acadLvlFilter;\n        if (key === 'entry') filter[key] = entryFilter;\n        if (key === 'subDisc') filter[key] = subDiscFilter;\n      });\n      return filter;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Programme Talks\",\n    route: \"/u/openHouseMain\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(IonToolbar, {\n    className: \"segmentHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: tab,\n    className: \"segmentHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"schedule\",\n    className: \"segmentBtn ion-text-wrap\",\n    id: \"progTalkSchedule\",\n    onClick: handleSchedule,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, \"Schedule\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"liveTalks\",\n    className: \"segmentBtn ion-text-wrap\",\n    id: \"progTalkLiveTalk\",\n    onClick: handleLiveTalks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, \"Live Talks\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"pastRecordings\",\n    className: \"segmentBtn ion-text-wrap\",\n    id: \"progTalkPastRec\",\n    onClick: handlePastRec,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }, \"Past Recordings\")))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"progTalkIonContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 4\n    }\n  }, tab === \"schedule\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"progTalk-IonRowCol progTalkIonGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, \"Day 1: \", openhouseDates[0]), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, \"Day 2: \", openhouseDates[1])))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    className: \"filterHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    className: \"filterHeaderToolBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"end\",\n    id: \"filterIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    onClick: e => {\n      setShowProgTalkFilterPopover({\n        open: true,\n        event: e.nativeEvent\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: faFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }))))))), /*#__PURE__*/React.createElement(ProgTalkSchedule, {\n    day1: dayNum,\n    day2: dayNum,\n    programmeTalk: programmeTalk,\n    openhouseDates: openhouseDates,\n    scheduleItems: scheduleItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  })) : \"\", tab === \"liveTalks\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"progTalk-IonRowCol progTalkIonGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 12\n    }\n  }, \"Day 1: \", openhouseDates[0]), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 12\n    }\n  }, \"Day 2: \", openhouseDates[1])))))), /*#__PURE__*/React.createElement(ProgTalkLiveTalks, {\n    day1: dayNum,\n    day2: dayNum,\n    liveTalk: liveTalk,\n    openhouseDates: openhouseDates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }\n  })) : \"\", tab === \"pastRecordings\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"progTalk-IonRowCol progTalkIonGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 12\n    }\n  }, \"Day 1: \", openhouseDates[0]), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 12\n    }\n  }, \"Day 2: \", openhouseDates[1]))))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    className: \"filterHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    className: \"filterHeaderToolBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"end\",\n    id: \"filterIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    onClick: e => {\n      setShowProgTalkFilterPopover({\n        open: true,\n        event: e.nativeEvent\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: faFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }))))))), /*#__PURE__*/React.createElement(ProgTalkPastRec, {\n    day1: dayNum,\n    day2: dayNum,\n    recordedTalk: recordedTalk,\n    openhouseDates: openhouseDates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }\n  })) : \"\", /*#__PURE__*/React.createElement(IonPopover, {\n    id: \"progCourseFilterPopover\",\n    cssClass: \"progTalkFilterPopover\",\n    isOpen: showProgTalkFilterPopover.open,\n    event: showProgTalkFilterPopover.event,\n    onDidDismiss: e => setShowProgTalkFilterPopover({\n      open: false,\n      event: undefined\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 5\n    }\n  }, tab === \"schedule\" ? /*#__PURE__*/React.createElement(FilterPopoverContent, {\n    filterFunction: filterTalks,\n    programmes: programmeTalk,\n    filterFor: \"progTalk@SIM\",\n    filterCondition: filterCondition,\n    setState: updateScheduleTalks,\n    onUpdateFilter: onUpdateFilter,\n    discipline: \"\",\n    category: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }\n  }) : '', tab === \"pastRecordings\" ? /*#__PURE__*/React.createElement(FilterPopoverContent, {\n    filterFunction: filterRecTalks,\n    programmes: recordedTalk,\n    filterFor: \"progTalk@SIM\",\n    filterCondition: filterCondition,\n    setState: updateRecTalks,\n    onUpdateFilter: onUpdateFilter,\n    discipline: \"\",\n    category: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }\n  }) : '')));\n};\n\nexport default withRouter(ProgrammeTalks);","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/OpenHouseProgrammes/ProgrammeTalks.tsx"],"names":["IonButton","IonButtons","IonCol","IonContent","IonGrid","IonHeader","IonPage","IonPopover","IonRow","IonSegment","IonSegmentButton","IonToolbar","React","useEffect","useState","withRouter","FontAwesomeIcon","faFilter","TopNav","ProgTalkSchedule","ProgTalkLiveTalks","ProgTalkPastRec","FilterPopoverContent","db","useAuth","ProgrammeTalks","userID","tab","setTab","dayNum","setDayNum","scheduleItems","setScheduleItems","handleDayOne","handleDayTwo","handleSchedule","handleLiveTalks","handlePastRec","openhouseDates","setOpenhouseDates","initialProgtalk","setIntialProgTalk","programmeTalk","setProgrammeTalk","recordedTalk","setRecordedTalk","liveTalk","setLiveTalk","dates","collection","get","then","snapshot","forEach","doc","data","Array","isArray","i","Object","keys","length","date","push","catch","error","console","log","onSnapshot","snap","registeredProgrammes","filter","talk","isLive","hasRecording","showProgTalkFilterPopover","setShowProgTalkFilterPopover","open","event","undefined","filterCondition","setFilterCondition","mos","discipline","uni","acadLvl","entry","subDisc","updateScheduleTalks","updateRecTalks","filterTalks","condition","callback","initialList","filteredList","segmentFilter","docs","entries","map","key","value","discFiltered","programme","includes","concat","uniFiltered","awardingUni","filterRecTalks","where","onUpdateFilter","mosFilter","discFilter","uniFilter","acadLvlFilter","entryFilter","subDiscFilter","prevState","e","nativeEvent"],"mappings":"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","sourcesContent":["import { IonButton, IonButtons, IonCol, IonContent, IonGrid, IonHeader, IonPage, IonPopover, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/ProgrammeTalks.css';\r\nimport TopNav from '../../components/TopNav';\r\nimport ProgTalkSchedule from '../../components/OpenHouseProgrammes/ProgTalkSchedule';\r\nimport ProgTalkLiveTalks from '../../components/OpenHouseProgrammes/ProgTalkLiveTalks';\r\nimport ProgTalkPastRec from '../../components/OpenHouseProgrammes/ProgTalkPastRec';\r\nimport FilterPopoverContent from '../../components/FilterPopoverContent';\r\nimport { db } from '../../firebase';\r\nimport { useAuth } from '../../modules/auth';\r\nimport { ProgrammeTalk, TalkFilter, ProgrammeFilter } from '../../modules/map'\r\n\r\n\r\nconst ProgrammeTalks: React.FC = () => {\r\n\tconst { userID } = useAuth();\r\n\r\n\tconst [tab, setTab] = useState(\"schedule\");\r\n\tconst [dayNum, setDayNum] = useState(\"day1\");\r\n\tconst [scheduleItems, setScheduleItems] = useState([]);\r\n\r\n\tconst handleDayOne = () => {\r\n\t\tsetDayNum(\"day1\");\r\n\t};\r\n\r\n\tconst handleDayTwo = () => {\r\n\t\tsetDayNum(\"day2\");\r\n\t};\r\n\r\n\tconst handleSchedule = () => {\r\n\t\tsetTab(\"schedule\");\r\n\t};\r\n\r\n\tconst handleLiveTalks = () => {\r\n\t\tsetTab(\"liveTalks\");\r\n\t};\r\n\r\n\tconst handlePastRec = () => {\r\n\t\tsetTab(\"pastRecordings\");\r\n\t};\r\n\r\n\tconst [openhouseDates, setOpenhouseDates] = useState([]);\r\n\tconst [initialProgtalk, setIntialProgTalk] = useState<any[]>([]);\r\n\tconst [programmeTalk, setProgrammeTalk] = useState<any[]>([]);\r\n\tconst [recordedTalk, setRecordedTalk] = useState<ProgrammeTalk[]>([]);\r\n\tconst [liveTalk, setLiveTalk] = useState<ProgrammeTalk[]>([]);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst dates: any = [];\r\n\r\n\t\tdb.collection(\"Openhouse\")\r\n\t\t\t.get()\r\n\t\t\t.then((snapshot) => {\r\n\t\t\t\tsnapshot.forEach((doc) => {\r\n\t\t\t\t\tconst data = doc.get('day')\r\n\t\t\t\t\tif (!Array.isArray(data)) {\r\n\t\t\t\t\t\tfor (var i = 0; i < Object.keys(data).length; i++) {\r\n\t\t\t\t\t\t\tconst date = data[Object.keys(data)[i]].date;\r\n\t\t\t\t\t\t\tdates.push(date)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetOpenhouseDates(dates);\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(error));\r\n\r\n\t\tdb.collection(\"ProgrammeTalks\")\r\n\t\t\t.get()\r\n\t\t\t.then((snapshot) => {\r\n\t\t\t\tconst programmeTalk: any = [];\r\n\t\t\t\tsnapshot.forEach((doc) => {\r\n\t\t\t\t\tconst data = doc.data();\r\n\t\t\t\t\tprogrammeTalk.push(data);\r\n\t\t\t\t});\r\n\t\t\t\tsetIntialProgTalk(programmeTalk)\r\n\t\t\t\tsetProgrammeTalk(programmeTalk);\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(error));\r\n\r\n\t\treturn db.collection('PersonalScheduler').doc(userID).onSnapshot(snap => {\r\n\t\t\tsetScheduleItems(snap.data()?.registeredProgrammes);\r\n\t\t});\r\n\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst liveTalk = initialProgtalk.filter(talk => { return talk.isLive === true })\r\n\t\tconst recordedTalk = initialProgtalk.filter(talk => { return talk.hasRecording === true })\r\n\t\tsetRecordedTalk(recordedTalk)\r\n\t\tsetLiveTalk(liveTalk)\r\n\r\n\t}, [initialProgtalk])\r\n\r\n\t/* Display Filter Menu Popover */\r\n\tconst [showProgTalkFilterPopover, setShowProgTalkFilterPopover] = useState<{ open: boolean, event: Event | undefined }>({\r\n\t\topen: false,\r\n\t\tevent: undefined,\r\n\t});\r\n\r\n\t//For Filters\r\n\r\n\tconst [filterCondition, setFilterCondition] = useState<ProgrammeFilter>({\r\n\t\tmos: [],\r\n\t\tdiscipline: ['Arts & Social Sciences', 'Business', 'IT & Computer Science', 'Nursing', 'Specialty'],\r\n\t\tuni: [],\r\n\t\tacadLvl: [],\r\n\t\tentry: [],\r\n\t\tsubDisc: []\r\n\t})\r\n\r\n\tconst updateScheduleTalks = (data: ProgrammeTalk[]) => {\r\n\t\tsetProgrammeTalk(data)\r\n\t}\r\n\r\n\tconst updateRecTalks = (data: ProgrammeTalk[]) => {\r\n\t\tsetRecordedTalk(data)\r\n\t}\r\n\r\n\r\n\tconst filterTalks = async (condition: TalkFilter, callback: any) => {\r\n\r\n\t\tconst initialList: ProgrammeTalk[] = []\r\n\t\tlet filteredList: ProgrammeTalk[] = []\r\n\t\tlet segmentFilter: ProgrammeTalk[] = []\r\n\r\n\t\tawait db.collection('ProgrammeTalks')\r\n\t\t\t.get()\r\n\t\t\t.then(snapshot => {\r\n\t\t\t\tsnapshot.docs.forEach((doc: any) => {\r\n\t\t\t\t\tconst data = doc.data()\r\n\t\t\t\t\tinitialList.push(data)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\tObject.entries(condition).map(([key, value]) => {\r\n\t\t\tif (key === 'discipline') {\r\n\t\t\t\tlet discFiltered: ProgrammeTalk[] = []\r\n\t\t\t\tif (value.length > 0 && value.length <= 4) {\r\n\t\t\t\t\tvalue.forEach((value: string) => {\r\n\t\t\t\t\t\tsegmentFilter = initialList.filter(programme => programme.discipline.includes(value))\r\n\t\t\t\t\t\tdiscFiltered = discFiltered.concat(segmentFilter)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tfilteredList = discFiltered\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfilteredList = initialList\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\telse if (key === 'uni') {\r\n\t\t\t\tlet uniFiltered: ProgrammeTalk[] = []\r\n\t\t\t\tif (value.length > 0) {\r\n\t\t\t\t\tvalue.forEach((value: string) => {\r\n\t\t\t\t\t\tsegmentFilter = filteredList.filter(programme => programme.awardingUni === value)\r\n\t\t\t\t\t\tuniFiltered = uniFiltered.concat(segmentFilter)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tfilteredList = uniFiltered\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t)\r\n\t\tcallback(filteredList)\r\n\r\n\t}\r\n\r\n\tconst filterRecTalks = async (condition: TalkFilter, callback: any) => {\r\n\r\n\t\tconst initialList: ProgrammeTalk[] = []\r\n\t\tlet filteredList: ProgrammeTalk[] = []\r\n\t\tlet segmentFilter: ProgrammeTalk[] = []\r\n\r\n\t\tawait db.collection('ProgrammeTalks')\r\n\t\t\t.where(\"hasRecording\", '==', true)\r\n\t\t\t.get()\r\n\t\t\t.then(snapshot => {\r\n\t\t\t\tsnapshot.docs.forEach((doc: any) => {\r\n\t\t\t\t\tconst data = doc.data()\r\n\t\t\t\t\tinitialList.push(data)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\tObject.entries(condition).map(([key, value]) => {\r\n\t\t\tif (key === 'discipline') {\r\n\t\t\t\tlet discFiltered: ProgrammeTalk[] = []\r\n\t\t\t\tif (value.length > 0 && value.length <= 4) {\r\n\t\t\t\t\tvalue.forEach((value: string) => {\r\n\t\t\t\t\t\tsegmentFilter = initialList.filter(programme => programme.discipline.includes(value))\r\n\t\t\t\t\t\tdiscFiltered = discFiltered.concat(segmentFilter)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tfilteredList = discFiltered\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfilteredList = initialList\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\telse if (key === 'uni') {\r\n\t\t\t\tlet uniFiltered: ProgrammeTalk[] = []\r\n\t\t\t\tif (value.length > 0) {\r\n\t\t\t\t\tvalue.forEach((value: string) => {\r\n\t\t\t\t\t\tsegmentFilter = filteredList.filter(programme => programme.awardingUni === value)\r\n\t\t\t\t\t\tuniFiltered = uniFiltered.concat(segmentFilter)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tfilteredList = uniFiltered\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t)\r\n\t\tcallback(filteredList)\r\n\t}\r\n\r\n\tconst onUpdateFilter = (mosFilter: string[], discFilter: string[], uniFilter: string[], acadLvlFilter: string[], entryFilter: string[], subDiscFilter: string[]) => {\r\n\r\n\t\tsetFilterCondition(prevState => {\r\n\t\t\tlet filter = { ...prevState };\r\n\t\t\tObject.keys(filter).map(key => {\r\n\t\t\t\tif (key === 'mos')\r\n\t\t\t\t\tfilter[key] = mosFilter;\r\n\t\t\t\tif (key === 'discipline')\r\n\t\t\t\t\tfilter[key] = discFilter;\r\n\t\t\t\tif (key === 'uni')\r\n\t\t\t\t\tfilter[key] = uniFilter;\r\n\t\t\t\tif (key === 'acadLvl')\r\n\t\t\t\t\tfilter[key] = acadLvlFilter;\r\n\t\t\t\tif (key === 'entry')\r\n\t\t\t\t\tfilter[key] = entryFilter;\r\n\t\t\t\tif (key === 'subDisc')\r\n\t\t\t\t\tfilter[key] = subDiscFilter;\r\n\t\t\t})\r\n\t\t\treturn filter;\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<IonHeader>\r\n\t\t\t\t<TopNav title=\"Programme Talks\" route=\"/u/openHouseMain\" backarrow={true} hamburger={true} />\r\n\r\n\t\t\t\t<IonToolbar className=\"segmentHeader\">\r\n\t\t\t\t\t<IonSegment scrollable value={tab} className=\"segmentHeader\">\r\n\t\t\t\t\t\t<IonSegmentButton value=\"schedule\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkSchedule\" onClick={handleSchedule}>\r\n\t\t\t\t\t\t\tSchedule\r\n            </IonSegmentButton>\r\n\t\t\t\t\t\t<IonSegmentButton value=\"liveTalks\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkLiveTalk\" onClick={handleLiveTalks}>\r\n\t\t\t\t\t\t\tLive Talks\r\n            </IonSegmentButton>\r\n\t\t\t\t\t\t<IonSegmentButton value=\"pastRecordings\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkPastRec\" onClick={handlePastRec}>\r\n\t\t\t\t\t\t\tPast Recordings\r\n            </IonSegmentButton>\r\n\t\t\t\t\t</IonSegment>\r\n\t\t\t\t</IonToolbar>\r\n\r\n\t\t\t</IonHeader>\r\n\r\n\t\t\t<IonContent fullscreen className=\"progTalkIonContent\">\r\n\r\n\t\t\t\t{/* Programme Talks Schedule */}\r\n\t\t\t\t{tab === \"schedule\" ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n\t\t\t\t\t\t\t<IonRow className=\"progTalk-IonRowCol\">\r\n\t\t\t\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t\t\t\t\t<IonSegment scrollable value={dayNum}>\r\n\t\t\t\t\t\t\t\t\t\t<IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n\t\t\t\t\t\t\t\t\t\t\tDay 1: {openhouseDates[0]}\r\n\t\t\t\t\t\t\t\t\t\t</IonSegmentButton>\r\n\t\t\t\t\t\t\t\t\t\t<IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n\t\t\t\t\t\t\t\t\t\t\tDay 2: {openhouseDates[1]}\r\n\t\t\t\t\t\t\t\t\t\t</IonSegmentButton>\r\n\t\t\t\t\t\t\t\t\t</IonSegment>\r\n\t\t\t\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t\t\t\t</IonRow>\r\n\r\n\t\t\t\t\t\t\t{/* Filter Button */}\r\n\t\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t\t<IonHeader className=\"filterHeader\">\r\n\t\t\t\t\t\t\t\t\t<IonToolbar className=\"filterHeaderToolBar\">\r\n\t\t\t\t\t\t\t\t\t\t<IonButtons slot=\"end\" id=\"filterIcon\">\r\n\t\t\t\t\t\t\t\t\t\t\t<IonButton onClick={(e) => { setShowProgTalkFilterPopover({ open: true, event: e.nativeEvent }) }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon size=\"lg\" icon={faFilter} />\r\n\t\t\t\t\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t\t\t\t\t</IonHeader>\r\n\t\t\t\t\t\t\t</IonRow>\r\n\r\n\t\t\t\t\t\t</IonGrid>\r\n\r\n\t\t\t\t\t\t<ProgTalkSchedule day1={dayNum} day2={dayNum} programmeTalk={programmeTalk} openhouseDates={openhouseDates} scheduleItems={scheduleItems} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{/* Live Talks */}\r\n\t\t\t\t{tab === \"liveTalks\" ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n\t\t\t\t\t\t\t<IonRow className=\"progTalk-IonRowCol\">\r\n\t\t\t\t\t\t\t\t<IonCol className=\"progTalk-IonRowCol\">\r\n\t\t\t\t\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t\t\t\t\t\t<IonSegment scrollable value={dayNum}>\r\n\t\t\t\t\t\t\t\t\t\t\t<IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tDay 1: {openhouseDates[0]}\r\n\t\t\t\t\t\t\t\t\t\t\t</IonSegmentButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tDay 2: {openhouseDates[1]}\r\n\t\t\t\t\t\t\t\t\t\t\t</IonSegmentButton>\r\n\t\t\t\t\t\t\t\t\t\t</IonSegment>\r\n\t\t\t\t\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t</IonGrid>\r\n\r\n\t\t\t\t\t\t<ProgTalkLiveTalks day1={dayNum} day2={dayNum} liveTalk={liveTalk} openhouseDates={openhouseDates} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\"\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{/* Past Recordings */}\r\n\t\t\t\t{tab === \"pastRecordings\" ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n\t\t\t\t\t\t\t<IonRow className=\"progTalk-IonRowCol\">\r\n\t\t\t\t\t\t\t\t<IonCol className=\"progTalk-IonRowCol\">\r\n\t\t\t\t\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t\t\t\t\t\t<IonSegment scrollable value={dayNum}>\r\n\t\t\t\t\t\t\t\t\t\t\t<IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tDay 1: {openhouseDates[0]}\r\n\t\t\t\t\t\t\t\t\t\t\t</IonSegmentButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tDay 2: {openhouseDates[1]}\r\n\t\t\t\t\t\t\t\t\t\t\t</IonSegmentButton>\r\n\t\t\t\t\t\t\t\t\t\t</IonSegment>\r\n\t\t\t\t\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t</IonRow>\r\n\r\n\r\n\t\t\t\t\t\t\t{/* Filter Button */}\r\n\t\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t\t<IonHeader className=\"filterHeader\">\r\n\t\t\t\t\t\t\t\t\t<IonToolbar className=\"filterHeaderToolBar\">\r\n\t\t\t\t\t\t\t\t\t\t<IonButtons slot=\"end\" id=\"filterIcon\">\r\n\t\t\t\t\t\t\t\t\t\t\t<IonButton onClick={(e) => { setShowProgTalkFilterPopover({ open: true, event: e.nativeEvent }) }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon size=\"lg\" icon={faFilter} />\r\n\t\t\t\t\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t\t\t\t\t</IonHeader>\r\n\t\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t</IonGrid>\r\n\r\n\t\t\t\t\t\t<ProgTalkPastRec day1={dayNum} day2={dayNum} recordedTalk={recordedTalk} openhouseDates={openhouseDates} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\"\")\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t{/* Filter Programmes Popover */}\r\n\t\t\t\t<IonPopover id=\"progCourseFilterPopover\"\r\n\t\t\t\t\tcssClass='progTalkFilterPopover'\r\n\t\t\t\t\tisOpen={showProgTalkFilterPopover.open}\r\n\t\t\t\t\tevent={showProgTalkFilterPopover.event}\r\n\t\t\t\t\tonDidDismiss={e => setShowProgTalkFilterPopover({ open: false, event: undefined })}\r\n\t\t\t\t>\r\n\t\t\t\t\t{tab === \"schedule\" ?\r\n\t\t\t\t\t\t<FilterPopoverContent filterFunction={filterTalks} programmes={programmeTalk} filterFor={\"progTalk@SIM\"} filterCondition={filterCondition} setState={updateScheduleTalks} onUpdateFilter={onUpdateFilter} discipline=\"\" category=\"\" />\r\n\r\n\t\t\t\t\t\t: ''\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{tab === \"pastRecordings\" ?\r\n\t\t\t\t\t\t<FilterPopoverContent filterFunction={filterRecTalks} programmes={recordedTalk} filterFor={\"progTalk@SIM\"} filterCondition={filterCondition} setState={updateRecTalks} onUpdateFilter={onUpdateFilter} discipline=\"\" category=\"\" />\r\n\r\n\t\t\t\t\t\t: ''\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</IonPopover>\r\n\r\n\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default withRouter(ProgrammeTalks);\r\n"]},"metadata":{},"sourceType":"module"}