{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\Study@SIM\\\\Study@SIMProgList.tsx\";\nimport { IonAlert, IonBadge, IonButton, IonCol, IonContent, IonGrid, IonHeader, IonLabel, IonPage, IonPopover, IonRouterLink, IonRow, IonTitle, IonToolbar } from '@ionic/react';\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faFilter } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/Global.css';\nimport '../../css/Study@SIMProgList.css';\nimport TopNav from '../../components/TopNav';\nimport CompareProgPopoverContent from '../../components/Study@SIM/CompareProgPopoverContent';\nimport FilterPopoverContent from '../../components/FilterPopoverContent';\nimport { db } from '../../firebase';\n\nconst StudySIMProgList = ({\n  match\n}) => {\n  const discipline = match.params.discipline;\n  const category = match.params.category;\n  const [disciplineName, setDisciplineName] = useState(['Art & Social Sciences', 'Business', 'IT & Computer Science', 'Nursing', 'Speciality']);\n  const [programmes, setProgrammes] = useState([]);\n  const [compareProgList, setCompareProgList] = useState([]);\n  {\n    /* Adding programme for comparison - Need to be generated dynamically */\n  }\n\n  const compareProgramme = programme => {\n    const newProgList = [...compareProgList];\n    const newProgID = programme.id;\n\n    if (compareProgList.length < 3) {\n      if (newProgList.includes(programme)) {\n        const updatedProgList = newProgList.filter(existingProg => {\n          return existingProg.id != newProgID;\n        });\n        setCompareProgList(updatedProgList);\n      } else {\n        newProgList.push(programme);\n        setCompareProgList(newProgList);\n      }\n    } else {\n      if (newProgList.includes(programme)) {\n        const updatedProgList = newProgList.filter(existingProg => {\n          return existingProg.id != newProgID;\n        });\n        setCompareProgList(updatedProgList);\n      } else {\n        setShowCompareProgAlert(true);\n      }\n    }\n  };\n  /*To remove selected programmes in comparePopOver */\n\n\n  const removeProg = programme => {\n    const newProgList = [...compareProgList];\n    const newProgID = programme.id;\n    const updatedProgList = newProgList.filter(programme => {\n      return programme.id != newProgID;\n    });\n    setCompareProgList(updatedProgList);\n  };\n  /*To remove all selected programmes in comparePopOver */\n\n\n  const removeAllProg = programmes => {\n    const newProgList = [...compareProgList];\n    const updatedProgList = newProgList.filter(programme => {\n      return programme.id == '';\n    });\n    setCompareProgList(updatedProgList);\n  };\n\n  {\n    /* Display Compare Prog Popover */\n  }\n  const [showCompareProgPopover, setShowCompareProgPopover] = useState({\n    open: false,\n    event: undefined\n  });\n  {\n    /* \"If no prog is added to compare\" Alert */\n  }\n  const [showCompareProgAlert, setShowCompareProgAlert] = useState(false);\n  {\n    /* Display Filter Menu Popover */\n  }\n  const [showProgCourseFilterPopover, setShowProgCourseFilterPopover] = useState({\n    open: false,\n    event: undefined\n  });\n  {\n    /* When page first load */\n  }\n  useEffect(() => {\n    {\n      /*Fetching Programmes Data from firestore*/\n    }\n\n    const fetchData = async (discipline, category) => {\n      const programmes = [];\n      await db.collection('TestProgrammes').where(\"discipline\", \"array-contains\", match.params.discipline).where(\"academicLevel\", '==', match.params.category).get().then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          const data = doc.data();\n          programmes.push(data);\n        });\n        setProgrammes(programmes);\n      }).catch(error => console.log(error));\n    };\n\n    fetchData(match.params.discipline, match.params.category);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: showCompareProgAlert,\n    onDidDismiss: () => setShowCompareProgAlert(false),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    message: 'You may compare up to 3 programmes at a time by tapping on the Compare button of the programme(s).',\n    buttons: ['OK'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Study@SIM\",\n    route: \"/u/study@SIMMain\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(IonToolbar, {\n    id: \"studySIMProgListHeaderToolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    style: {\n      padding: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    id: \"studySIMProgListHeaderRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"6\",\n    sizeSm: \"6\",\n    class: \"ion-text-left\",\n    className: \"studySIMProgListCol\",\n    style: {\n      paddingLeft: \"3%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"studyProgListTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 37\n    }\n  }, match.params.discipline === 'artSocialSciences' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 45\n    }\n  }, disciplineName[0]) : '', match.params.discipline === 'business' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 45\n    }\n  }, disciplineName[1]) : '', match.params.discipline === 'itComputerScience' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 45\n    }\n  }, disciplineName[2]) : '', match.params.discipline === 'nursing' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 45\n    }\n  }, disciplineName[3]) : '', match.params.discipline === 'speciality' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 45\n    }\n  }, disciplineName[4]) : '')), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"4\",\n    sizeSm: \"4\",\n    class: \"ion-text-right\",\n    className: \"studySIMProgListCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    id: \"compareBtn\",\n    fill: \"clear\",\n    onClick: e => {\n      if (compareProgList.length < 1 || compareProgList.length > 3) {\n        setShowCompareProgAlert(true);\n      } else {\n        setShowCompareProgPopover({\n          open: true,\n          event: e.nativeEvent\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"compareLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 41\n    }\n  }, \"Compare\"), /*#__PURE__*/React.createElement(IonBadge, {\n    id: \"compareBadge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 41\n    }\n  }, compareProgList.length))), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    sizeSm: \"2\",\n    class: \"ion-text-center\",\n    className: \"studySIMProgListCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    id: \"filterBtn\",\n    fill: \"clear\",\n    onClick: e => {\n      setShowProgCourseFilterPopover({\n        open: true,\n        event: e.nativeEvent\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"filterIcon\",\n    size: \"lg\",\n    icon: faFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 41\n    }\n  }))))))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    id: \"studySIMProgListContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"studySIMProgListGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, programmes ? programmes.map(programme => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: programme.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonRow, {\n      className: \"studySIMProgListRow\",\n      class: \"ion-align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      size: \"4\",\n      sizeSm: \"4\",\n      class: \"ion-text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: programme.uniLogo,\n      className: \"studyProgUniImg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"8\",\n      sizeSm: \"8\",\n      className: \"studySIMProgListColDetails\",\n      class: \"ion-text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(IonRow, {\n      className: \"progCourseRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(IonRouterLink, {\n      id: \"progCourseTitleLink\",\n      href: `/u/study@SIMMain/Study@SIMProgInfo/${programme.id}/${discipline}/${category}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      className: \"progCourseTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 65\n      }\n    }, programme.programmeTitle)))), /*#__PURE__*/React.createElement(IonRow, {\n      className: \"progCourseRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      size: \"4\",\n      sizeSm: \"4\",\n      class: \"ion-text-left\",\n      className: \"progCourseAwardingUniCol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(IonLabel, {\n      className: \"progCourseAwardingUniLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 65\n      }\n    }, \"Awarded by:\"))), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"8\",\n      sizeSm: \"8\",\n      class: \"ion-text-left\",\n      className: \"progCourseAwardingUniCol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(IonLabel, {\n      className: \"progCourseAwardingUniName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 65\n      }\n    }, programme.awardedBy)))), /*#__PURE__*/React.createElement(IonRow, {\n      className: \"progCompareBtnRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      size: \"12\",\n      sizeSm: \"12\",\n      class: \"ion-text-right\",\n      className: \"progCompareBtnCol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 57\n      }\n    }, compareProgList.includes(programme) ? /*#__PURE__*/React.createElement(IonButton, {\n      className: \"progCompareBtnSelected\",\n      size: \"small\",\n      type: \"submit\",\n      onClick: e => compareProgramme(programme),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 65\n      }\n    }, \"Compared\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        paddingLeft: \"3%\"\n      },\n      icon: faCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 53\n      }\n    })) : /*#__PURE__*/React.createElement(IonButton, {\n      className: \"progCompareBtn\",\n      size: \"small\",\n      type: \"submit\",\n      onClick: e => compareProgramme(programme),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 66\n      }\n    }, \"Compare\")))))));\n  }) : ''), /*#__PURE__*/React.createElement(IonPopover, {\n    id: \"compareProgPopover\",\n    cssClass: \"compareProgPopover\",\n    isOpen: showCompareProgPopover.open,\n    event: showCompareProgPopover.event,\n    onDidDismiss: e => setShowCompareProgPopover({\n      open: false,\n      event: undefined\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CompareProgPopoverContent, {\n    compareProgList: compareProgList,\n    removeProg: removeProg,\n    removeAllProg: removeAllProg,\n    viewResults: () => console.log('Add viewResults function here'),\n    href: `/u/study@SIMMain/${match.params.discipline}/${match.params.category}/courseComparator`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IonPopover, {\n    id: \"progCourseFilterPopover\",\n    cssClass: \"progCourseFilterPopover\",\n    isOpen: showProgCourseFilterPopover.open,\n    event: showProgCourseFilterPopover.event,\n    onDidDismiss: e => setShowProgCourseFilterPopover({\n      open: false,\n      event: undefined\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, match.params.discipline === \"artSocialSciences\" ? /*#__PURE__*/React.createElement(FilterPopoverContent, {\n    filterResults: () => console.log('Add filterResults function here'),\n    params: match.params.discipline === \"artSocialSciences\",\n    href: \"/u/study@SIMMain/artSocialSciences\",\n    filterFor: \"study@SIM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 29\n    }\n  }) : '', match.params.discipline === \"business\" ? /*#__PURE__*/React.createElement(FilterPopoverContent, {\n    filterResults: () => console.log('Add filterResults function here'),\n    params: match.params.discipline === \"business\",\n    href: \"/u/study@SIMMain/business\",\n    filterFor: \"study@SIM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 29\n    }\n  }) : '', match.params.discipline === \"itComputerScience\" ? /*#__PURE__*/React.createElement(FilterPopoverContent, {\n    filterResults: () => console.log('Add filterResults function here'),\n    params: match.params.discipline === \"itComputerScience\",\n    href: \"/u/study@SIMMain/itComputerScience\",\n    filterFor: \"study@SIM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 29\n    }\n  }) : '', match.params.discipline === \"nursing\" ? /*#__PURE__*/React.createElement(FilterPopoverContent, {\n    filterResults: () => console.log('Add filterResults function here'),\n    params: match.params.discipline === \"nursing\",\n    href: \"/u/study@SIMMain/nursing\",\n    filterFor: \"study@SIM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 29\n    }\n  }) : '', match.params.discipline === \"speciality\" ? /*#__PURE__*/React.createElement(FilterPopoverContent, {\n    filterResults: () => console.log('Add filterResults function here'),\n    params: match.params.discipline === \"speciality\",\n    href: \"/u/study@SIMMain/speciality\",\n    filterFor: \"study@SIM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }) : ''))));\n};\n\nexport default StudySIMProgList;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/Study@SIM/Study@SIMProgList.tsx"],"names":["IonAlert","IonBadge","IonButton","IonCol","IonContent","IonGrid","IonHeader","IonLabel","IonPage","IonPopover","IonRouterLink","IonRow","IonTitle","IonToolbar","React","useState","useEffect","FontAwesomeIcon","faCheck","faFilter","TopNav","CompareProgPopoverContent","FilterPopoverContent","db","StudySIMProgList","match","discipline","params","category","disciplineName","setDisciplineName","programmes","setProgrammes","compareProgList","setCompareProgList","compareProgramme","programme","newProgList","newProgID","id","length","includes","updatedProgList","filter","existingProg","push","setShowCompareProgAlert","removeProg","removeAllProg","showCompareProgPopover","setShowCompareProgPopover","open","event","undefined","showCompareProgAlert","showProgCourseFilterPopover","setShowProgCourseFilterPopover","fetchData","collection","where","get","then","snapshot","docs","forEach","doc","data","catch","error","console","log","padding","paddingLeft","e","nativeEvent","map","uniLogo","programmeTitle","awardedBy"],"mappings":"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","sourcesContent":["import { IonAlert, IonBadge, IonButton, IonCol, IonContent, IonGrid, IonHeader, IonLabel, IonPage, IonPopover, IonRouterLink, IonRow, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faFilter } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/Study@SIMProgList.css';\r\nimport Grenoble from '../../img/study@SIM/GrenobleEcoleDeManagement.png';\r\nimport TopNav from '../../components/TopNav';\r\nimport CompareProgPopoverContent from '../../components/Study@SIM/CompareProgPopoverContent';\r\nimport FilterPopoverContent from '../../components/FilterPopoverContent';\r\nimport { db } from '../../firebase';\r\nimport { Programme } from './Study@SIMProgInfo'\r\n\r\ninterface StudySIMProgList_Props extends RouteComponentProps<{\r\n    discipline: string;\r\n    category: string\r\n}> { }\r\n\r\nconst StudySIMProgList: React.FC<StudySIMProgList_Props> = ({ match }) => {\r\n\r\n    const discipline = match.params.discipline\r\n    const category = match.params.category\r\n\r\n    const [disciplineName, setDisciplineName] = useState([\r\n        'Art & Social Sciences',\r\n        'Business',\r\n        'IT & Computer Science',\r\n        'Nursing',\r\n        'Speciality'\r\n    ]);\r\n\r\n\r\n    const [programmes, setProgrammes] = useState<Programme[]>([])\r\n    const [compareProgList, setCompareProgList] = useState<Programme[]>([])\r\n\r\n    {/* Adding programme for comparison - Need to be generated dynamically */ }\r\n    const compareProgramme = (programme: Programme) => {\r\n        const newProgList = [...compareProgList]\r\n        const newProgID = programme.id\r\n\r\n        if (compareProgList.length < 3) {\r\n            if (newProgList.includes(programme)) {\r\n                const updatedProgList = newProgList.filter(existingProg => { return existingProg.id != newProgID })\r\n                setCompareProgList(updatedProgList)\r\n            }\r\n            else {\r\n                newProgList.push(programme)\r\n                setCompareProgList(newProgList)\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (newProgList.includes(programme)) {\r\n                const updatedProgList = newProgList.filter(existingProg => { return existingProg.id != newProgID })\r\n                setCompareProgList(updatedProgList)\r\n            }\r\n            else {\r\n                setShowCompareProgAlert(true);\r\n            }\r\n\r\n        }\r\n    };\r\n    /*To remove selected programmes in comparePopOver */\r\n    const removeProg = (programme: Programme) => {\r\n        const newProgList = [...compareProgList]\r\n        const newProgID = programme.id\r\n        const updatedProgList = newProgList.filter(programme => { return programme.id != newProgID })\r\n        setCompareProgList(updatedProgList)\r\n\r\n    }\r\n    /*To remove all selected programmes in comparePopOver */\r\n    const removeAllProg = (programmes: Programme[]) => {\r\n        const newProgList = [...compareProgList]\r\n        const updatedProgList = newProgList.filter(programme => { return programme.id == '' })\r\n        setCompareProgList(updatedProgList)\r\n\r\n    }\r\n\r\n    {/* Display Compare Prog Popover */ }\r\n    const [showCompareProgPopover, setShowCompareProgPopover] = useState<{ open: boolean, event: Event | undefined }>({\r\n        open: false,\r\n        event: undefined,\r\n    });\r\n\r\n    {/* \"If no prog is added to compare\" Alert */ }\r\n    const [showCompareProgAlert, setShowCompareProgAlert] = useState(false);\r\n\r\n    {/* Display Filter Menu Popover */ }\r\n    const [showProgCourseFilterPopover, setShowProgCourseFilterPopover] = useState<{ open: boolean, event: Event | undefined }>({\r\n        open: false,\r\n        event: undefined,\r\n    });\r\n\r\n    {/* When page first load */ }\r\n    useEffect(() => {\r\n\r\n        {/*Fetching Programmes Data from firestore*/ }\r\n        const fetchData = async (discipline: string, category: string) => {\r\n            const programmes: any = []\r\n            await db.collection('TestProgrammes')\r\n                .where(\"discipline\", \"array-contains\", match.params.discipline)\r\n                .where(\"academicLevel\", '==', match.params.category)\r\n                .get()\r\n                .then((snapshot: any) => {\r\n                    snapshot.docs.forEach((doc: any) => {\r\n                        const data = doc.data()\r\n                        programmes.push(data)\r\n                    })\r\n                    setProgrammes(programmes)\r\n                }).catch((error) => console.log(error));\r\n\r\n        }\r\n\r\n        fetchData(match.params.discipline, match.params.category)\r\n    }, [])\r\n    return (\r\n        <React.Fragment>\r\n            <IonAlert\r\n                isOpen={showCompareProgAlert}\r\n                onDidDismiss={() => setShowCompareProgAlert(false)}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                message={'You may compare up to 3 programmes at a time by tapping on the Compare button of the programme(s).'}\r\n                buttons={['OK']}\r\n            ></IonAlert>\r\n\r\n\r\n            <IonPage>\r\n                <IonHeader>\r\n                    <TopNav title=\"Study@SIM\" route='/u/study@SIMMain' backarrow={true} hamburger={true} />\r\n\r\n                    <IonToolbar id=\"studySIMProgListHeaderToolbar\">\r\n                        <IonGrid style={{ padding: \"0\" }}>\r\n                            <IonRow id=\"studySIMProgListHeaderRow\" class=\"ion-align-items-center\">\r\n                                <IonCol size=\"6\" sizeSm=\"6\" class=\"ion-text-left\" className=\"studySIMProgListCol\" style={{ paddingLeft: \"3%\" }}>\r\n                                    <IonTitle className=\"studyProgListTitle\">\r\n                                        {match.params.discipline === 'artSocialSciences' ?\r\n                                            <div className=\"ion-text-wrap\">{disciplineName[0]}</div>\r\n                                            : ''\r\n                                        }\r\n\r\n                                        {match.params.discipline === 'business' ?\r\n                                            <div className=\"ion-text-wrap\">{disciplineName[1]}</div>\r\n                                            : ''\r\n                                        }\r\n\r\n                                        {match.params.discipline === 'itComputerScience' ?\r\n                                            <div className=\"ion-text-wrap\">{disciplineName[2]}</div>\r\n                                            : ''\r\n                                        }\r\n\r\n                                        {match.params.discipline === 'nursing' ?\r\n                                            <div className=\"ion-text-wrap\">{disciplineName[3]}</div>\r\n                                            : ''\r\n                                        }\r\n\r\n                                        {match.params.discipline === 'speciality' ?\r\n                                            <div className=\"ion-text-wrap\">{disciplineName[4]}</div>\r\n                                            : ''\r\n                                        }\r\n\r\n                                    </IonTitle>\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"4\" sizeSm=\"4\" class=\"ion-text-right\" className=\"studySIMProgListCol\">\r\n                                    <IonButton id=\"compareBtn\" fill=\"clear\" onClick={(e) => {\r\n                                        if (compareProgList.length < 1 || compareProgList.length > 3) {\r\n                                            setShowCompareProgAlert(true);\r\n                                        } else {\r\n                                            setShowCompareProgPopover({ open: true, event: e.nativeEvent })\r\n                                        }\r\n                                    }\r\n                                    }>\r\n                                        <IonLabel className=\"compareLabel\">Compare</IonLabel>\r\n                                        <IonBadge id=\"compareBadge\">{compareProgList.length}</IonBadge>\r\n                                    </IonButton>\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"2\" sizeSm=\"2\" class=\"ion-text-center\" className=\"studySIMProgListCol\">\r\n                                    <IonButton id=\"filterBtn\" fill=\"clear\" onClick={(e) => {\r\n                                        setShowProgCourseFilterPopover({ open: true, event: e.nativeEvent })\r\n                                    }\r\n                                    }>\r\n                                        <FontAwesomeIcon className=\"filterIcon\" size=\"lg\" icon={faFilter} />\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>\r\n                    </IonToolbar>\r\n\r\n                </IonHeader>\r\n\r\n                <IonContent fullscreen={true} id=\"studySIMProgListContent\">\r\n                    <IonGrid id=\"studySIMProgListGrid\">\r\n\r\n                        {/* Programme List */}\r\n                        {programmes ?\r\n                            programmes.map((programme: Programme) => {\r\n                                return (\r\n                                    <div key={programme.id}>\r\n                                        <>\r\n                                            <IonRow className=\"studySIMProgListRow\" class=\"ion-align-items-center\">\r\n                                                <IonCol size=\"4\" sizeSm=\"4\" class=\"ion-text-center\">\r\n                                                    <img src={programme.uniLogo} className=\"studyProgUniImg\"></img>\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"8\" sizeSm=\"8\" className=\"studySIMProgListColDetails\" class=\"ion-text-left\">\r\n                                                    {/* Programme Title */}\r\n                                                    <IonRow className=\"progCourseRow\">\r\n                                                        {/* <IonRouterLink id=\"progCourseTitleLink\" href={`/u/study@SIMMain/Study@SIMProgInfo/${programme.id}`}> */}\r\n                                                        <IonRouterLink id=\"progCourseTitleLink\" href={`/u/study@SIMMain/Study@SIMProgInfo/${programme.id}/${discipline}/${category}`}>\r\n                                                            <IonTitle className=\"progCourseTitle\">\r\n                                                                <div className=\"ion-text-wrap\">{programme.programmeTitle}</div>\r\n                                                            </IonTitle>\r\n                                                        </IonRouterLink>\r\n                                                    </IonRow>\r\n\r\n                                                    {/* Awarding Uni */}\r\n                                                    <IonRow className=\"progCourseRow\">\r\n                                                        <IonCol size=\"4\" sizeSm=\"4\" class=\"ion-text-left\" className=\"progCourseAwardingUniCol\">\r\n                                                            <IonLabel className=\"progCourseAwardingUniLabel\">\r\n                                                                <div className=\"ion-text-wrap\">Awarded by:</div>\r\n                                                            </IonLabel>\r\n                                                        </IonCol>\r\n\r\n                                                        <IonCol size=\"8\" sizeSm=\"8\" class=\"ion-text-left\" className=\"progCourseAwardingUniCol\">\r\n                                                            <IonLabel className=\"progCourseAwardingUniName\">\r\n                                                                <div className=\"ion-text-wrap\">{programme.awardedBy}</div>\r\n                                                            </IonLabel>\r\n                                                        </IonCol>\r\n                                                    </IonRow>\r\n\r\n                                                    <IonRow className=\"progCompareBtnRow\">\r\n                                                        <IonCol size=\"12\" sizeSm=\"12\" class=\"ion-text-right\" className=\"progCompareBtnCol\">\r\n                                                            {compareProgList.includes(programme) ?\r\n                                                                <IonButton className=\"progCompareBtnSelected\" size=\"small\" type=\"submit\" onClick={e => compareProgramme(programme)}>Compared\r\n                                                    <FontAwesomeIcon style={{ paddingLeft: \"3%\" }} icon={faCheck} />\r\n                                                                </IonButton>\r\n                                                                :\r\n                                                                (<IonButton className=\"progCompareBtn\" size=\"small\" type=\"submit\" onClick={e => compareProgramme(programme)}>Compare</IonButton>)\r\n                                                            }\r\n\r\n                                                        </IonCol>\r\n                                                    </IonRow>\r\n                                                </IonCol>\r\n                                            </IonRow>\r\n                                        </></div>\r\n                                )\r\n                            })\r\n\r\n                            : ''\r\n                        }\r\n\r\n                    </IonGrid>\r\n\r\n                    {/* Compare Programme Popover */}\r\n                    <IonPopover id=\"compareProgPopover\"\r\n                        cssClass='compareProgPopover'\r\n                        isOpen={showCompareProgPopover.open}\r\n                        event={showCompareProgPopover.event}\r\n                        onDidDismiss={e => setShowCompareProgPopover({ open: false, event: undefined })}\r\n                    >\r\n                        <CompareProgPopoverContent compareProgList={compareProgList} removeProg={removeProg} removeAllProg={removeAllProg} viewResults={() => (console.log('Add viewResults function here'))}\r\n                            href={`/u/study@SIMMain/${match.params.discipline}/${match.params.category}/courseComparator`} />\r\n\r\n                    </IonPopover>\r\n\r\n\r\n                    {/* Filter Programmes Popover */}\r\n                    <IonPopover id=\"progCourseFilterPopover\"\r\n                        cssClass='progCourseFilterPopover'\r\n                        isOpen={showProgCourseFilterPopover.open}\r\n                        event={showProgCourseFilterPopover.event}\r\n                        onDidDismiss={e => setShowProgCourseFilterPopover({ open: false, event: undefined })}\r\n                    >\r\n                        {match.params.discipline === \"artSocialSciences\" ?\r\n                            <FilterPopoverContent filterResults={() => (console.log('Add filterResults function here'))}\r\n                                params={match.params.discipline === \"artSocialSciences\"} href={\"/u/study@SIMMain/artSocialSciences\"} filterFor={\"study@SIM\"} />\r\n                            : ''\r\n                        }\r\n\r\n                        {match.params.discipline === \"business\" ?\r\n                            <FilterPopoverContent filterResults={() => (console.log('Add filterResults function here'))}\r\n                                params={match.params.discipline === \"business\"} href={\"/u/study@SIMMain/business\"} filterFor={\"study@SIM\"} />\r\n                            : ''\r\n                        }\r\n\r\n                        {match.params.discipline === \"itComputerScience\" ?\r\n                            <FilterPopoverContent filterResults={() => (console.log('Add filterResults function here'))}\r\n                                params={match.params.discipline === \"itComputerScience\"} href={\"/u/study@SIMMain/itComputerScience\"} filterFor={\"study@SIM\"} />\r\n                            : ''\r\n                        }\r\n\r\n                        {match.params.discipline === \"nursing\" ?\r\n                            <FilterPopoverContent filterResults={() => (console.log('Add filterResults function here'))}\r\n                                params={match.params.discipline === \"nursing\"} href={\"/u/study@SIMMain/nursing\"} filterFor={\"study@SIM\"} />\r\n                            : ''\r\n                        }\r\n\r\n                        {match.params.discipline === \"speciality\" ?\r\n                            <FilterPopoverContent filterResults={() => (console.log('Add filterResults function here'))}\r\n                                params={match.params.discipline === \"speciality\"} href={\"/u/study@SIMMain/speciality\"} filterFor={\"study@SIM\"} />\r\n                            : ''\r\n                        }\r\n\r\n                    </IonPopover>\r\n\r\n\r\n                </IonContent>\r\n\r\n            </IonPage>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default StudySIMProgList;"]},"metadata":{},"sourceType":"module"}