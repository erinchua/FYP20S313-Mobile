{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\components\\\\OpenHouseProgrammes\\\\ProgTalkSchedule.tsx\";\nimport { IonGrid, IonRow, IonCol, IonButton, IonAlert, IonLoading } from '@ionic/react';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../../css/Global.css';\nimport '../../css/ProgrammeTalks.css';\nimport { db } from '../../firebase';\nimport { useAuth } from '../../modules/auth';\nimport { toDateObject } from '../../modules/convert';\nimport { notification } from '../../modules/notifications';\n\nconst ProgTalkSchedule = props => {\n  const {\n    userID\n  } = useAuth();\n  const [alert, setAlert] = useState({\n    registerSuccess: false,\n    registerFail: false,\n    loading: false\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const programmeTalkDay1 = props.programmeTalk.filter(talk => {\n    return talk.date === props.openhouseDates[0];\n  });\n  const programmeTalkDay2 = props.programmeTalk.filter(talk => {\n    return talk.date === props.openhouseDates[1];\n  });\n\n  const addToSchedule = async programme => {\n    try {\n      setAlert({\n        registerSuccess: false,\n        registerFail: false,\n        loading: true\n      });\n\n      if (programme.noRegistered < programme.capacityLimit) {\n        await db.collection('PersonalScheduler').doc(userID).get().then(async snapshot => {\n          const registered = snapshot.data().registeredProgrammes;\n          const scheduler = db.collection('PersonalScheduler').doc(userID);\n          const progTalk = db.collection('ProgrammeTalks').doc(programme.id);\n          const increment = firebase.firestore.FieldValue.increment(1);\n          const batch = db.batch();\n\n          if (registered) {\n            if (registered.length > 0) {\n              let check = false;\n              registered.forEach(async item => {\n                const itemType = item.split(\"-\");\n\n                switch (itemType[0]) {\n                  case \"talk\":\n                    await db.collection('ProgrammeTalks').doc(item).get().then(doc => {\n                      if (programme.date === doc.data().date) {\n                        const progStart = toDateObject(programme.date, programme.startTime),\n                              progEnd = toDateObject(programme.date, programme.endTime);\n                        const itemStart = toDateObject(doc.data().date, doc.data().startTime),\n                              itemEnd = toDateObject(doc.data().date, doc.data().endTime);\n\n                        if (progStart >= itemStart && progStart < itemEnd || progEnd > itemStart && progEnd <= itemEnd) {\n                          check = true;\n                        }\n                      }\n                    });\n                    break;\n\n                  case \"tour\":\n                    await db.collection('GuidedTours').doc(item).get().then(doc => {\n                      if (programme.date === doc.data().date) {\n                        const progStart = toDateObject(programme.date, programme.startTime),\n                              progEnd = toDateObject(programme.date, programme.endTime);\n                        const itemStart = toDateObject(doc.data().date, doc.data().startTime),\n                              itemEnd = toDateObject(doc.data().date, doc.data().endTime);\n\n                        if (progStart >= itemStart && progStart < itemEnd || progEnd > itemStart && progEnd <= itemEnd) {\n                          check = true;\n                        }\n                      }\n                    });\n                    break;\n\n                  case \"performance\":\n                    await db.collection('Performances').doc(item).get().then(doc => {\n                      if (programme.date === doc.data().date) {\n                        const progStart = toDateObject(programme.date, programme.startTime),\n                              progEnd = toDateObject(programme.date, programme.endTime);\n                        const itemStart = toDateObject(doc.data().date, doc.data().startTime),\n                              itemEnd = toDateObject(doc.data().date, doc.data().endTime);\n\n                        if (progStart >= itemStart && progStart < itemEnd || progEnd > itemStart && progEnd <= itemEnd) {\n                          check = true;\n                        }\n                      }\n                    });\n                    break;\n\n                  default:\n                }\n              });\n              setTimeout(async () => {\n                if (check) {\n                  setErrorMessage(\"There exists an open house programme in your scheduler at this timing. Please remove the existing programme from your scheduler first!\");\n                  setAlert({\n                    registerSuccess: false,\n                    registerFail: true,\n                    loading: false\n                  });\n                } else {\n                  notification(programme.date, programme.startTime, programme.talkName, \"programme\");\n                  batch.update(scheduler, {\n                    registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id)\n                  });\n                  batch.update(progTalk, {\n                    noRegistered: increment\n                  });\n                  await batch.commit();\n                  setAlert({\n                    registerSuccess: true,\n                    registerFail: false,\n                    loading: false\n                  });\n                }\n\n                ;\n                check = false;\n              }, 500);\n            } else {\n              notification(programme.date, programme.startTime, programme.talkName, \"programme\");\n              batch.update(scheduler, {\n                registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id)\n              });\n              batch.update(progTalk, {\n                noRegistered: increment\n              });\n              await batch.commit();\n              setAlert({\n                registerSuccess: true,\n                registerFail: false,\n                loading: false\n              });\n            }\n          } else {\n            notification(programme.date, programme.startTime, programme.talkName, \"programme\");\n            batch.update(scheduler, {\n              registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id)\n            });\n            batch.update(progTalk, {\n              noRegistered: increment\n            });\n            await batch.commit();\n            setAlert({\n              registerSuccess: true,\n              registerFail: false,\n              loading: false\n            });\n          }\n        });\n      } else {\n        setErrorMessage(\"Sorry. We have reach the capacity limit for this talk.\");\n        setAlert({\n          registerSuccess: false,\n          registerFail: true,\n          loading: false\n        });\n      }\n    } catch (e) {\n      setErrorMessage(\"Something went wrong with the registration. Please try again.\");\n      setAlert({\n        registerSuccess: false,\n        registerFail: true,\n        loading: false\n      });\n      return console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: alert.registerSuccess,\n    onDidDismiss: () => setAlert({\n      registerSuccess: false,\n      registerFail: false,\n      loading: false\n    }),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    header: 'Successfully Registered',\n    message: 'You have successfully registered for the programme talk and it has been successfully added to My Schedule.',\n    buttons: ['Close'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: alert.registerFail,\n    onDidDismiss: () => setAlert({\n      registerSuccess: false,\n      registerFail: false,\n      loading: false\n    }),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    header: 'Registration Unsuccessful',\n    message: errorMessage,\n    buttons: ['Close'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"progTalk-TableGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-justify-content-center progTalk-TableHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"3\",\n    sizeSm: \"3\",\n    className: \"progTalk-DataHeader ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, \"Programme Talk\"), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"3\",\n    sizeSm: \"3\",\n    className: \"progTalk-DataHeader ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, \"Awarding University\"), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    sizeSm: \"2\",\n    className: \"progTalk-DataHeader ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    sizeSm: \"2\",\n    className: \"progTalk-DataHeader ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, \"Venue\"), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    sizeSm: \"2\",\n    className: \"progTalk-DataHeader ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, \"Add to My Schedule\")), props.day1 === 'day1' ? programmeTalkDay1.map(programmeTalk => {\n    return /*#__PURE__*/React.createElement(IonRow, {\n      className: \"ion-justify-content-center\",\n      id: \"progTalk-DataRow\",\n      key: programmeTalk.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      size: \"3\",\n      sizeSm: \"3\",\n      className: \"progTalk-DataInfo ion-text-wrap progName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      id: \"uniLink\",\n      to: `/u/openHouseMain/programmeTalks/progTalkInfo/${programmeTalk.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }\n    }, programmeTalk.talkName)), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"3\",\n      sizeSm: \"3\",\n      className: \"progTalk-DataInfo ion-text-wrap\",\n      id: \"awardingUni\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 33\n      }\n    }, programmeTalk.awardingUni, \" \"), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"2\",\n      sizeSm: \"2\",\n      className: \"progTalk-DataInfo ion-text-wrap\",\n      id: \"talkTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, programmeTalk.startTime + \" to \" + programmeTalk.endTime), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"2\",\n      sizeSm: \"2\",\n      className: \"progTalk-DataInfo ion-text-wrap\",\n      id: \"talkVenue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 33\n      }\n    }, programmeTalk.venue), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"2\",\n      sizeSm: \"2\",\n      className: \"progTalk-DataInfo ion-text-wrap\",\n      id: \"addCol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IonButton, {\n      className: \"progTalk-DataBtn\",\n      id: \"addBtn\",\n      size: \"small\",\n      style: {\n        marginTop: \"-5%\",\n        marginBottom: \"-5%\"\n      },\n      onClick: () => addToSchedule(programmeTalk),\n      disabled: props.scheduleItems.includes(programmeTalk.id) ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 41\n      }\n    }))));\n  }) : '', props.day2 === 'day2' ? programmeTalkDay2.map(programmeTalk => {\n    return /*#__PURE__*/React.createElement(IonRow, {\n      className: \"ion-justify-content-center\",\n      id: \"progTalk-DataRow\",\n      key: programmeTalk.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      sizeSm: \"3\",\n      className: \"progTalk-DataInfo ion-text-wrap progName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      id: \"uniLink\",\n      to: `/u/openHouseMain/programmeTalks/progTalkInfo/${programmeTalk.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }\n    }, programmeTalk.talkName)), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"3\",\n      sizeSm: \"3\",\n      className: \"progTalk-DataInfo ion-text-wrap\",\n      id: \"awardingUni\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 33\n      }\n    }, programmeTalk.awardingUni), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"2\",\n      sizeSm: \"2\",\n      className: \"progTalk-DataInfo ion-text-wrap\",\n      id: \"talkTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 33\n      }\n    }, programmeTalk.startTime + \" to \" + programmeTalk.endTime), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"2\",\n      sizeSm: \"2\",\n      className: \"progTalk-DataInfo ion-text-wrap\",\n      id: \"talkVenue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 33\n      }\n    }, programmeTalk.venue), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"2\",\n      sizeSm: \"2\",\n      className: \"progTalk-DataInfo ion-text-wrap\",\n      id: \"addCol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IonButton, {\n      className: \"progTalk-DataBtn\",\n      id: \"addBtn\",\n      size: \"small\",\n      style: {\n        marginTop: \"-5%\",\n        marginBottom: \"-5%\"\n      },\n      onClick: () => addToSchedule(programmeTalk),\n      disabled: props.scheduleItems.includes(programmeTalk.id) ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 41\n      }\n    }))));\n  }) : ''), /*#__PURE__*/React.createElement(IonLoading, {\n    isOpen: alert.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ProgTalkSchedule;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/components/OpenHouseProgrammes/ProgTalkSchedule.tsx"],"names":["IonGrid","IonRow","IonCol","IonButton","IonAlert","IonLoading","React","useState","Link","firebase","faPlus","FontAwesomeIcon","db","useAuth","toDateObject","notification","ProgTalkSchedule","props","userID","alert","setAlert","registerSuccess","registerFail","loading","errorMessage","setErrorMessage","programmeTalkDay1","programmeTalk","filter","talk","date","openhouseDates","programmeTalkDay2","addToSchedule","programme","noRegistered","capacityLimit","collection","doc","get","then","snapshot","registered","data","registeredProgrammes","scheduler","progTalk","id","increment","firestore","FieldValue","batch","length","check","forEach","item","itemType","split","progStart","startTime","progEnd","endTime","itemStart","itemEnd","setTimeout","talkName","update","arrayUnion","commit","e","console","log","day1","map","awardingUni","venue","marginTop","marginBottom","scheduleItems","includes","day2"],"mappings":"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","sourcesContent":["import { IonGrid, IonRow, IonCol, IonButton, IonAlert, IonLoading } from '@ionic/react';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/ProgrammeTalks.css'\r\nimport { db } from '../../firebase';\r\nimport { useAuth } from '../../modules/auth';\r\nimport { toDateObject } from '../../modules/convert';\r\nimport { notification } from '../../modules/notifications';\r\n\r\nconst ProgTalkSchedule: React.FC<{ day1: any, day2: any, programmeTalk: any, openhouseDates: any, scheduleItems: any[] }> = props => {\r\n    const { userID } = useAuth();\r\n\r\n    const [alert, setAlert] = useState({ registerSuccess: false, registerFail: false, loading: false });\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const programmeTalkDay1 = props.programmeTalk.filter((talk: any) => { return talk.date === props.openhouseDates[0] });\r\n    const programmeTalkDay2 = props.programmeTalk.filter((talk: any) => { return talk.date === props.openhouseDates[1] });\r\n\r\n    const addToSchedule = async (programme: any) => {\r\n        try {\r\n            setAlert({ registerSuccess: false, registerFail: false, loading: true });\r\n\r\n            if (programme.noRegistered < programme.capacityLimit) {\r\n                await db.collection('PersonalScheduler').doc(userID).get().then(async (snapshot: any) => {\r\n                    const registered = snapshot.data().registeredProgrammes;\r\n                    const scheduler = db.collection('PersonalScheduler').doc(userID);\r\n                    const progTalk = db.collection('ProgrammeTalks').doc(programme.id);\r\n                    const increment = firebase.firestore.FieldValue.increment(1);\r\n                    const batch = db.batch();\r\n\r\n                    if (registered) {\r\n                        if (registered.length > 0) {\r\n                            let check = false;\r\n\r\n                            registered.forEach(async (item: any) => {\r\n                                const itemType = item.split(\"-\");\r\n\r\n                                switch (itemType[0]) {\r\n                                    case \"talk\":\r\n                                        await db.collection('ProgrammeTalks').doc(item).get().then((doc: any) => {\r\n\r\n                                            if (programme.date === doc.data().date) {\r\n\r\n                                                const progStart = toDateObject(programme.date, programme.startTime), progEnd = toDateObject(programme.date, programme.endTime);\r\n                                                const itemStart = toDateObject(doc.data().date, doc.data().startTime), itemEnd = toDateObject(doc.data().date, doc.data().endTime);\r\n\r\n                                                if ((progStart >= itemStart && progStart < itemEnd) || (progEnd > itemStart && progEnd <= itemEnd)) {\r\n                                                    check = true;\r\n                                                }\r\n                                            }\r\n                                        });\r\n\r\n                                        break;\r\n\r\n                                    case \"tour\":\r\n                                        await db.collection('GuidedTours').doc(item).get().then((doc: any) => {\r\n\r\n                                            if (programme.date === doc.data().date) {\r\n\r\n                                                const progStart = toDateObject(programme.date, programme.startTime), progEnd = toDateObject(programme.date, programme.endTime);\r\n                                                const itemStart = toDateObject(doc.data().date, doc.data().startTime), itemEnd = toDateObject(doc.data().date, doc.data().endTime);\r\n\r\n                                                if ((progStart >= itemStart && progStart < itemEnd) || (progEnd > itemStart && progEnd <= itemEnd)) {\r\n                                                    check = true;\r\n                                                }\r\n                                            }\r\n                                        });\r\n\r\n                                        break;\r\n\r\n                                    case \"performance\":\r\n                                        await db.collection('Performances').doc(item).get().then((doc: any) => {\r\n\r\n                                            if (programme.date === doc.data().date) {\r\n\r\n                                                const progStart = toDateObject(programme.date, programme.startTime), progEnd = toDateObject(programme.date, programme.endTime);\r\n                                                const itemStart = toDateObject(doc.data().date, doc.data().startTime), itemEnd = toDateObject(doc.data().date, doc.data().endTime);\r\n\r\n                                                if ((progStart >= itemStart && progStart < itemEnd) || (progEnd > itemStart && progEnd <= itemEnd)) {\r\n                                                    check = true;\r\n                                                }\r\n                                            }\r\n                                        });\r\n\r\n                                        break;\r\n\r\n                                    default:\r\n                                }\r\n                            });\r\n\r\n                            setTimeout(async () => {\r\n                                if (check) {\r\n                                    setErrorMessage(\"There exists an open house programme in your scheduler at this timing. Please remove the existing programme from your scheduler first!\")\r\n                                    setAlert({ registerSuccess: false, registerFail: true, loading: false });\r\n                                } else {\r\n                                    notification(programme.date, programme.startTime, programme.talkName, \"programme\")\r\n                                    batch.update(scheduler, { registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id) });\r\n                                    batch.update(progTalk, { noRegistered: increment });\r\n\r\n                                    await batch.commit();\r\n                                    setAlert({ registerSuccess: true, registerFail: false, loading: false });\r\n                                };\r\n\r\n                                check = false;\r\n                            }, 500);\r\n\r\n                        } else {\r\n                            notification(programme.date, programme.startTime, programme.talkName, \"programme\")\r\n                            batch.update(scheduler, { registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id) });\r\n                            batch.update(progTalk, { noRegistered: increment });\r\n\r\n                            await batch.commit();\r\n                            setAlert({ registerSuccess: true, registerFail: false, loading: false });\r\n                        }\r\n\r\n                    } else {\r\n                        notification(programme.date, programme.startTime, programme.talkName, \"programme\")\r\n                        batch.update(scheduler, { registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programme.id) });\r\n                        batch.update(progTalk, { noRegistered: increment });\r\n\r\n                        await batch.commit();\r\n                        setAlert({ registerSuccess: true, registerFail: false, loading: false });\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                setErrorMessage(\"Sorry. We have reach the capacity limit for this talk.\");\r\n                setAlert({ registerSuccess: false, registerFail: true, loading: false });\r\n            }\r\n\r\n        } catch (e) {\r\n            setErrorMessage(\"Something went wrong with the registration. Please try again.\");\r\n            setAlert({ registerSuccess: false, registerFail: true, loading: false });\r\n            return console.log(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IonAlert\r\n                isOpen={alert.registerSuccess}\r\n                onDidDismiss={() => setAlert({ registerSuccess: false, registerFail: false, loading: false })}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Successfully Registered'}\r\n                message={'You have successfully registered for the programme talk and it has been successfully added to My Schedule.'}\r\n                buttons={['Close']}\r\n            ></IonAlert>\r\n\r\n            <IonAlert\r\n                isOpen={alert.registerFail}\r\n                onDidDismiss={() => setAlert({ registerSuccess: false, registerFail: false, loading: false })}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Registration Unsuccessful'}\r\n                message={errorMessage}\r\n                buttons={['Close']}\r\n            ></IonAlert>\r\n\r\n            <IonGrid className=\"progTalk-TableGrid\">\r\n                <IonRow className=\"ion-justify-content-center progTalk-TableHeader\">\r\n                    <IonCol size=\"3\" sizeSm=\"3\" className=\"progTalk-DataHeader ion-text-wrap\">Programme Talk</IonCol>\r\n                    <IonCol size=\"3\" sizeSm=\"3\" className=\"progTalk-DataHeader ion-text-wrap\">Awarding University</IonCol>\r\n                    <IonCol size=\"2\" sizeSm=\"2\" className=\"progTalk-DataHeader ion-text-wrap\">Time</IonCol>\r\n                    <IonCol size=\"2\" sizeSm=\"2\" className=\"progTalk-DataHeader ion-text-wrap\">Venue</IonCol>\r\n                    <IonCol size=\"2\" sizeSm=\"2\" className=\"progTalk-DataHeader ion-text-wrap\">Add to My Schedule</IonCol>\r\n                </IonRow>\r\n\r\n                {props.day1 === 'day1' ?\r\n                    programmeTalkDay1.map((programmeTalk: any) => {\r\n                        return (\r\n                            <IonRow className=\"ion-justify-content-center\" id=\"progTalk-DataRow\" key={programmeTalk.id}>\r\n                                <IonCol size=\"3\" sizeSm=\"3\" className=\"progTalk-DataInfo ion-text-wrap progName\">\r\n                                    <Link id=\"uniLink\" to={`/u/openHouseMain/programmeTalks/progTalkInfo/${programmeTalk.id}`}>{programmeTalk.talkName}</Link>\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"3\" sizeSm=\"3\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"awardingUni\">{programmeTalk.awardingUni} </IonCol>\r\n                                <IonCol size=\"2\" sizeSm=\"2\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"talkTime\">{programmeTalk.startTime + \" to \" + programmeTalk.endTime}</IonCol>\r\n                                <IonCol size=\"2\" sizeSm=\"2\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"talkVenue\">{programmeTalk.venue}</IonCol>\r\n                                <IonCol size=\"2\" sizeSm=\"2\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"addCol\">\r\n                                    <IonButton className=\"progTalk-DataBtn\" id=\"addBtn\" size=\"small\" style={{ marginTop: \"-5%\", marginBottom: \"-5%\" }} onClick={() => addToSchedule(programmeTalk)} disabled={props.scheduleItems.includes(programmeTalk.id) ? true : false}>\r\n                                        <FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        )\r\n                    }) : ''\r\n                }\r\n\r\n                {props.day2 === 'day2' ?\r\n                    programmeTalkDay2.map((programmeTalk: any) => {\r\n                        return (\r\n                            <IonRow className=\"ion-justify-content-center\" id=\"progTalk-DataRow\" key={programmeTalk.id}>\r\n                                <IonCol sizeSm=\"3\" className=\"progTalk-DataInfo ion-text-wrap progName\">\r\n                                    <Link id=\"uniLink\" to={`/u/openHouseMain/programmeTalks/progTalkInfo/${programmeTalk.id}`}>{programmeTalk.talkName}</Link>\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"3\" sizeSm=\"3\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"awardingUni\">{programmeTalk.awardingUni}</IonCol>\r\n                                <IonCol size=\"2\" sizeSm=\"2\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"talkTime\">{programmeTalk.startTime + \" to \" + programmeTalk.endTime}</IonCol>\r\n                                <IonCol size=\"2\" sizeSm=\"2\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"talkVenue\">{programmeTalk.venue}</IonCol>\r\n                                <IonCol size=\"2\" sizeSm=\"2\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"addCol\">\r\n                                    <IonButton className=\"progTalk-DataBtn\" id=\"addBtn\" size=\"small\" style={{ marginTop: \"-5%\", marginBottom: \"-5%\" }} onClick={() => addToSchedule(programmeTalk)} disabled={props.scheduleItems.includes(programmeTalk.id) ? true : false}>\r\n                                        <FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>)\r\n                    }) : ''\r\n                }\r\n            </IonGrid>\r\n            <IonLoading isOpen={alert.loading} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProgTalkSchedule;"]},"metadata":{},"sourceType":"module"}