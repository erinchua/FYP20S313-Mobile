{"ast":null,"code":"import _slicedToArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{IonCol,IonContent,IonGrid,IonPage,IonRow,IonSegment,IonSegmentButton,IonTitle,IonToolbar}from'@ionic/react';import React,{useState}from'react';import\"../css/Global.css\";import\"../css/GuidedTours.css\";import TopNav from'../components/TopNav';import GuidedTourContent from'../components/GuidedTourContent';var GuidedTours=function GuidedTours(){// const initialValue = {day: ['day1', 'day2']};\nvar _useState=useState(['','']),_useState2=_slicedToArray(_useState,2),dayNum=_useState2[0],setDayNum=_useState2[1];var handleClick=function handleClick(){setDayNum(['day1','']);handle();};var handleClick2=function handleClick2(){setDayNum(['','day2']);handle();};var handle=function handle(){if(dayNum[0]==='day1'&&dayNum[1]===''){console.log('1. '+dayNum);}if(dayNum[1]==='day2'&&dayNum[0]===''){console.log('2. '+dayNum);}};// const handleClick = () => {\n//     setDayNum('day1');\n// }\n// const handleClick2 = () => {\n//     setDayNum('day2');\n// }\n// const dayRef = useRef<HTMLIonSegmentButtonElement>(null);\n// const [dayNum, setDayNum] = useState('');\n// const handleClick = () => {\n//     if (dayRef.current!.id === 'day1') {\n//         console.log(dayNum);\n//         setDayNum('day1');\n//     } else {\n//         console.log(dayNum);\n//         setDayNum('day2');\n//     }\n// }\nreturn/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(TopNav,{title:\"Guided Tours\",route:\"/u/openHouseMain\",backarrow:true,hamburger:true}),/*#__PURE__*/React.createElement(IonToolbar,{id:\"guidedTours-schedule\"},/*#__PURE__*/React.createElement(IonTitle,{id:\"guidedTours-schedule-text\"},\"Schedule\")),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true},/*#__PURE__*/React.createElement(IonGrid,{id:\"guidedTours-ionRowCol\"},/*#__PURE__*/React.createElement(IonRow,{id:\"guidedTours-ionRowCol\"},/*#__PURE__*/React.createElement(IonCol,{id:\"guidedTours-ionRowCol\"},/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonSegment,{value:\"day1\",id:\"guidedTours-mainHeader\",onIonChange:function onIonChange(e){return console.log(\"\".concat(e.detail.value,\" segment selected\"));}},/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day1\",id:\"day1\",className:\"guidedTours-heading\",onClick:handleClick},\"Day 1: 21 Nov 2020\"),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day2\",id:\"day2\",className:\"guidedTours-heading\",onClick:handleClick2},\"Day 2: 22 Nov 2020\"))))),/*#__PURE__*/React.createElement(GuidedTourContent,{day1:dayNum[0],day2:dayNum[1]}))));};export default GuidedTours;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/GuidedTours.tsx"],"names":["IonCol","IonContent","IonGrid","IonPage","IonRow","IonSegment","IonSegmentButton","IonTitle","IonToolbar","React","useState","TopNav","GuidedTourContent","GuidedTours","dayNum","setDayNum","handleClick","handle","handleClick2","console","log","e","detail","value"],"mappings":"6MAAA,OAASA,MAAT,CAAiBC,UAAjB,CAA6BC,OAA7B,CAAiDC,OAAjD,CAA0DC,MAA1D,CAAkEC,UAAlE,CAA8EC,gBAA9E,CAAgGC,QAAhG,CAA0GC,UAA1G,KAA4H,cAA5H,CACA,MAAOC,CAAAA,KAAP,EAAwBC,QAAxB,KAAmD,OAAnD,CAEA,MAAO,mBAAP,CACA,MAAO,wBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,iCAA9B,CAGA,GAAMC,CAAAA,WAAqB,CAAG,QAAxBA,CAAAA,WAAwB,EAAM,CAEhC;AAFgC,cAIJH,QAAQ,CAAC,CAAC,EAAD,CAAK,EAAL,CAAD,CAJJ,wCAIzBI,MAJyB,eAIjBC,SAJiB,eAMhC,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBD,SAAS,CAAC,CAAC,MAAD,CAAQ,EAAR,CAAD,CAAT,CACAE,MAAM,GACT,CAHD,CAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBH,SAAS,CAAC,CAAC,EAAD,CAAI,MAAJ,CAAD,CAAT,CACAE,MAAM,GACT,CAHD,CAKA,GAAMA,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,GAAIH,MAAM,CAAC,CAAD,CAAN,GAAc,MAAd,EAAwBA,MAAM,CAAC,CAAD,CAAN,GAAc,EAA1C,CAA6C,CACzCK,OAAO,CAACC,GAAR,CAAY,MAAQN,MAApB,EACH,CACD,GAAIA,MAAM,CAAC,CAAD,CAAN,GAAc,MAAd,EAAwBA,MAAM,CAAC,CAAD,CAAN,GAAc,EAA1C,CAA6C,CACzCK,OAAO,CAACC,GAAR,CAAY,MAAQN,MAApB,EACH,CAEJ,CARD,CAWA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,mBACI,oBAAC,OAAD,mBACI,oBAAC,MAAD,EAAQ,KAAK,CAAC,cAAd,CAA6B,KAAK,CAAC,kBAAnC,CAAsD,SAAS,CAAG,IAAlE,CAAyE,SAAS,CAAG,IAArF,EADJ,cAEI,oBAAC,UAAD,EAAY,EAAE,CAAC,sBAAf,eACI,oBAAC,QAAD,EAAU,EAAE,CAAC,2BAAb,aADJ,CAFJ,cAMI,oBAAC,UAAD,EAAY,UAAU,KAAtB,eACI,oBAAC,OAAD,EAAS,EAAE,CAAC,uBAAZ,eACI,oBAAC,MAAD,EAAQ,EAAE,CAAC,uBAAX,eACI,oBAAC,MAAD,EAAQ,EAAE,CAAC,uBAAX,eACI,oBAAC,UAAD,mBACI,oBAAC,UAAD,EAAY,KAAK,CAAC,MAAlB,CAAyB,EAAE,CAAC,wBAA5B,CAAqD,WAAW,CAAE,qBAACO,CAAD,QAAOF,CAAAA,OAAO,CAACC,GAAR,WAAeC,CAAC,CAACC,MAAF,CAASC,KAAxB,sBAAP,EAAlE,eACI,oBAAC,gBAAD,EAAkB,KAAK,CAAC,MAAxB,CAA+B,EAAE,CAAC,MAAlC,CAAyC,SAAS,CAAC,qBAAnD,CAAyE,OAAO,CAAEP,WAAlF,uBADJ,cAEI,oBAAC,gBAAD,EAAkB,KAAK,CAAC,MAAxB,CAA+B,EAAE,CAAC,MAAlC,CAAyC,SAAS,CAAC,qBAAnD,CAAyE,OAAO,CAAEE,YAAlF,uBAFJ,CADJ,CADJ,CADJ,CADJ,cAWI,oBAAC,iBAAD,EAAmB,IAAI,CAAEJ,MAAM,CAAC,CAAD,CAA/B,CAAoC,IAAI,CAAEA,MAAM,CAAC,CAAD,CAAhD,EAXJ,CADJ,CANJ,CADJ,CAyBH,CA3ED,CA6EA,cAAeD,CAAAA,WAAf","sourcesContent":["import { IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React, { useRef, useState, createRef } from 'react';\r\n\r\nimport \"../css/Global.css\";\r\nimport \"../css/GuidedTours.css\";\r\nimport TopNav from '../components/TopNav';\r\nimport GuidedTourContent from '../components/GuidedTourContent';\r\nimport Menu from '../components/Menu';\r\n\r\nconst GuidedTours: React.FC = () => {\r\n\r\n    // const initialValue = {day: ['day1', 'day2']};\r\n\r\n    const [dayNum, setDayNum] = useState(['', '']);\r\n\r\n    const handleClick = () => {\r\n        setDayNum(['day1',''])\r\n        handle();\r\n    }\r\n\r\n    const handleClick2 = () => {\r\n        setDayNum(['','day2'])\r\n        handle();\r\n    }\r\n\r\n    const handle = () => {\r\n        if (dayNum[0] === 'day1' && dayNum[1] === ''){\r\n            console.log('1. ' + dayNum)\r\n        }\r\n        if (dayNum[1] === 'day2' && dayNum[0] === ''){\r\n            console.log('2. ' + dayNum)\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    // const handleClick = () => {\r\n    //     setDayNum('day1');\r\n    // }\r\n\r\n    // const handleClick2 = () => {\r\n    //     setDayNum('day2');\r\n    // }\r\n\r\n    // const dayRef = useRef<HTMLIonSegmentButtonElement>(null);\r\n    // const [dayNum, setDayNum] = useState('');\r\n    \r\n\r\n    // const handleClick = () => {\r\n    //     if (dayRef.current!.id === 'day1') {\r\n    //         console.log(dayNum);\r\n    //         setDayNum('day1');\r\n    //     } else {\r\n    //         console.log(dayNum);\r\n    //         setDayNum('day2');\r\n    //     }\r\n    // }\r\n    \r\n\r\n    return (\r\n        <IonPage>\r\n            <TopNav title=\"Guided Tours\" route=\"/u/openHouseMain\" backarrow={ true } hamburger={ true } />\r\n            <IonToolbar id=\"guidedTours-schedule\">\r\n                <IonTitle id=\"guidedTours-schedule-text\">Schedule</IonTitle>\r\n            </IonToolbar>\r\n    \r\n            <IonContent fullscreen>\r\n                <IonGrid id=\"guidedTours-ionRowCol\">\r\n                    <IonRow id=\"guidedTours-ionRowCol\">\r\n                        <IonCol id=\"guidedTours-ionRowCol\">\r\n                            <IonToolbar>\r\n                                <IonSegment value=\"day1\" id=\"guidedTours-mainHeader\" onIonChange={(e) => console.log(`${e.detail.value} segment selected`)}>\r\n                                    <IonSegmentButton value=\"day1\" id=\"day1\" className=\"guidedTours-heading\" onClick={handleClick}>Day 1: 21 Nov 2020</IonSegmentButton>\r\n                                    <IonSegmentButton value=\"day2\" id=\"day2\" className=\"guidedTours-heading\" onClick={handleClick2}>Day 2: 22 Nov 2020</IonSegmentButton>\r\n                                </IonSegment>\r\n                            </IonToolbar>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                    <GuidedTourContent day1={dayNum[0]} day2={dayNum[1]}/>\r\n                </IonGrid>\r\n\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default GuidedTours;"]},"metadata":{},"sourceType":"module"}