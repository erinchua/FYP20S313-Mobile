{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\MySchedule.tsx\";\nimport { IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport { useAuth } from '../auth';\nimport { toSchedule } from '../schedule';\nimport '../css/Global.css';\nimport '../css/MySchedule.css';\nimport TopNav from '../components/TopNav';\nimport MyScheduleContent from '../components/MyScheduleContent';\n\nconst MySchedule = () => {\n  const {\n    userID\n  } = useAuth();\n  const [dayNum, setDayNum] = useState(\"day1\");\n  const [openhouseDates, setOpenhouseDates] = useState([]);\n  const [openHouseProgs, setOpenHouseProgs] = useState([]);\n\n  const handleDayOne = () => {\n    setDayNum(\"day1\");\n  };\n\n  const handleDayTwo = () => {\n    setDayNum(\"day2\");\n  };\n\n  useEffect(() => {\n    db.collection('Openhouse').get().then(snapshot => {\n      const dates = [];\n      snapshot.forEach(doc => {\n        const data = doc.get('day'); //console.log(data);\n\n        if (Array.isArray(data)) data.forEach(day => dates.push(day.date));\n      }); //console.log(dates);\n\n      setOpenhouseDates(dates);\n    }).catch(error => console.log(error));\n    db.collection('PersonalScheduler').doc(userID).onSnapshot(snapshot => {\n      const registered = snapshot.data().registeredProgrammes;\n      const scheduleProgs = [];\n      registered.forEach(item => {\n        const itemType = item.split(\"-\");\n\n        switch (itemType[0]) {\n          case \"talk\":\n            return db.collection('ProgrammeTalks').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\n\n          case \"tour\":\n            return db.collection('GuidedTours').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\n\n          case \"performance\":\n            return db.collection('Performances').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\n\n          case \"activity\":\n            return db.collection('GamesActivities').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\n\n          default:\n            return;\n        }\n      });\n      setTimeout(() => setOpenHouseProgs(scheduleProgs.map(toSchedule)), 500);\n    }); // No problem\n\n    /* db.collection('ProgrammeTalks').get().then(snapshot => {\r\n        const items: any = [];\r\n        snapshot.forEach((doc) => items.push(doc.data()));\r\n        console.log(items) // this one returns a value, length is 6\r\n        return setProgrammeTalks(items.map(toSchedule));\r\n    }).catch(err => console.log(err));\r\n      db.collection('GuidedTours').get().then(snapshot => {\r\n        const items: any = [];\r\n        snapshot.forEach((doc) => items.push(doc.data()));\r\n        return setGuidedTours(items.map(toSchedule));\r\n    }).catch(err => console.log(err));;\r\n      db.collection('Performances').get().then(snapshot => {\r\n        const items: any = [];\r\n        snapshot.forEach((doc) => items.push(doc.data()));\r\n        return setPerformances(items.map(toSchedule));\r\n    }).catch(err => console.log(err));;\r\n      db.collection('GamesActivities').get().then(snapshot => {\r\n        const items: any = [];\r\n        snapshot.forEach((doc) => items.push(doc.data()));\r\n        return setGamesActivities(items.map(toSchedule));\r\n    }).catch(err => console.log(err)); */\n  }, []);\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"My Schedule\",\n    route: \"/u/home\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"myScheduleIonContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"myScheduleGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-justify-content-center openHouseDateRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    sizeSm: \"6\",\n    className: \"openHouseDateCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateTitleText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, \"From: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, openhouseDates[0]), \" \"), /*#__PURE__*/React.createElement(IonCol, {\n    sizeSm: \"6\",\n    className: \"openHouseDateCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateTitleText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, \"To: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, openhouseDates[1]), \" \")), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"mySchedule-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    onIonChange: e => console.log(`${e.detail.value}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"mySchedule-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, \"Day 1: \", openhouseDates[0], \"  \"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"mySchedule-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, \"Day 2: \", openhouseDates[1], \"  \"))))), /*#__PURE__*/React.createElement(MyScheduleContent, {\n    day1: dayNum,\n    day2: dayNum,\n    openhouseDates: openhouseDates,\n    openHouseProgs: openHouseProgs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default MySchedule;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/MySchedule.tsx"],"names":["IonCol","IonContent","IonGrid","IonHeader","IonPage","IonRow","IonSegment","IonSegmentButton","IonToolbar","React","useEffect","useState","db","useAuth","toSchedule","TopNav","MyScheduleContent","MySchedule","userID","dayNum","setDayNum","openhouseDates","setOpenhouseDates","openHouseProgs","setOpenHouseProgs","handleDayOne","handleDayTwo","collection","get","then","snapshot","dates","forEach","doc","data","Array","isArray","day","push","date","catch","error","console","log","onSnapshot","registered","registeredProgrammes","scheduleProgs","item","itemType","split","setTimeout","map","e","detail","value"],"mappings":"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","sourcesContent":["import { IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { db } from '../firebase';\r\nimport { useAuth } from '../auth';\r\nimport { ScheduleItem, toSchedule } from '../schedule';\r\nimport '../css/Global.css';\r\nimport '../css/MySchedule.css';\r\n\r\nimport TopNav from '../components/TopNav';\r\nimport Menu from '../components/Menu';\r\nimport MyScheduleContent from '../components/MyScheduleContent';\r\n\r\nconst MySchedule: React.FC = () => {\r\n    const { userID } = useAuth();\r\n    const [dayNum, setDayNum] = useState(\"day1\");\r\n    const [openhouseDates, setOpenhouseDates] = useState([]);\r\n    const [openHouseProgs, setOpenHouseProgs] = useState<ScheduleItem[]>([]);\r\n\r\n    const handleDayOne = () => {\r\n        setDayNum(\"day1\");\r\n    };\r\n    \r\n    const handleDayTwo = () => {\r\n        setDayNum(\"day2\");\r\n    };\r\n\r\n    useEffect(() => {\r\n    \r\n        db.collection('Openhouse').get().then(snapshot => {\r\n            const dates: any = [];\r\n            snapshot.forEach(doc => {\r\n                const data = doc.get('day');\r\n                //console.log(data);\r\n                if (Array.isArray(data))\r\n                    data.forEach((day: any) => dates.push(day.date));\r\n            });\r\n            //console.log(dates);\r\n            setOpenhouseDates(dates);\r\n        }).catch((error) => console.log(error));\r\n\r\n        db.collection('PersonalScheduler').doc(userID).onSnapshot((snapshot: any) => {\r\n            const registered = snapshot.data().registeredProgrammes;\r\n            const scheduleProgs: any = [];\r\n            registered.forEach((item: any) => {\r\n                const itemType = item.split(\"-\");\r\n                switch (itemType[0]) {\r\n                    case \"talk\":\r\n                        return db.collection('ProgrammeTalks').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\r\n                    case \"tour\":\r\n                        return db.collection('GuidedTours').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\r\n                    case \"performance\":\r\n                        return db.collection('Performances').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\r\n                    case \"activity\":\r\n                        return db.collection('GamesActivities').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\r\n                    default:\r\n                        return;\r\n                }\r\n            });\r\n            \r\n            setTimeout(() => setOpenHouseProgs(scheduleProgs.map(toSchedule)), 500);\r\n        });\r\n    \r\n        // No problem\r\n        /* db.collection('ProgrammeTalks').get().then(snapshot => {\r\n            const items: any = [];\r\n            snapshot.forEach((doc) => items.push(doc.data()));\r\n            console.log(items) // this one returns a value, length is 6\r\n            return setProgrammeTalks(items.map(toSchedule));\r\n        }).catch(err => console.log(err));\r\n\r\n        db.collection('GuidedTours').get().then(snapshot => {\r\n            const items: any = [];\r\n            snapshot.forEach((doc) => items.push(doc.data()));\r\n            return setGuidedTours(items.map(toSchedule));\r\n        }).catch(err => console.log(err));;\r\n\r\n        db.collection('Performances').get().then(snapshot => {\r\n            const items: any = [];\r\n            snapshot.forEach((doc) => items.push(doc.data()));\r\n            return setPerformances(items.map(toSchedule));\r\n        }).catch(err => console.log(err));;\r\n\r\n        db.collection('GamesActivities').get().then(snapshot => {\r\n            const items: any = [];\r\n            snapshot.forEach((doc) => items.push(doc.data()));\r\n            return setGamesActivities(items.map(toSchedule));\r\n        }).catch(err => console.log(err)); */\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <TopNav title=\"My Schedule\" route='/u/home' backarrow={ true } hamburger = { true }/>\r\n            </IonHeader>\r\n            \r\n            <IonContent fullscreen={true} className=\"myScheduleIonContent\">\r\n                <IonGrid className=\"myScheduleGrid\">\r\n                    <IonRow className=\"ion-justify-content-center openHouseDateRow\">\r\n                        <IonCol sizeSm=\"6\" className=\"openHouseDateCol\">\r\n                            <span className=\"openHouseDateTitleText\">From: </span> \r\n                            <span className=\"openHouseDateText\">{openhouseDates[0]}</span> {/* Date is not hardcoded */}\r\n                        </IonCol>\r\n                        <IonCol sizeSm=\"6\" className=\"openHouseDateCol\">\r\n                            <span className=\"openHouseDateTitleText\">To: </span> \r\n                            <span className=\"openHouseDateText\">{openhouseDates[1]}</span> {/* Date is not hardcoded */}\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow className=\"mySchedule-IonRowCol\">\r\n                        <IonToolbar>\r\n                            <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                                <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"mySchedule-DayTab\">\r\n                                    Day 1: {openhouseDates[0]}  {/* Date is not hardcoded, only Day 1: is */}\r\n                                </IonSegmentButton>\r\n                                \r\n                                <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"mySchedule-DayTab\">\r\n                                    Day 2: {openhouseDates[1]}  {/* Date is not hardcoded, only Day 2: is */}\r\n                                </IonSegmentButton>\r\n                            </IonSegment>\r\n                        </IonToolbar>\r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <MyScheduleContent day1={dayNum} day2={dayNum} openhouseDates={openhouseDates} openHouseProgs={openHouseProgs} />\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default MySchedule;"]},"metadata":{},"sourceType":"module"}