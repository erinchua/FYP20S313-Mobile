{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\Settings.tsx\";\nimport { IonCol, IonContent, IonFooter, IonGrid, IonHeader, IonItem, IonLabel, IonPage, IonRouterLink, IonRow, IonTitle, IonToggle, IonToolbar } from '@ionic/react';\nimport React, { useState, useEffect } from 'react';\nimport '../css/Global.css';\nimport '../css/Settings.css';\nimport TopNav from '../components/TopNav';\nimport { useAuth } from '../modules/auth';\nimport { db } from '../firebase';\n\nconst Settings = () => {\n  const {\n    userID\n  } = useAuth();\n  const [announcementAlertChecked, setAnnouncementAlertChecked] = useState(false);\n  const [openHouseRemindersChecked, setOpenHouseRemindersChecked] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      await db.collection('MobileSettings').doc(userID).get().then(doc => {\n        var _doc$data, _doc$data2;\n\n        setOpenHouseRemindersChecked((_doc$data = doc.data()) === null || _doc$data === void 0 ? void 0 : _doc$data.openhouseNotif);\n        setAnnouncementAlertChecked((_doc$data2 = doc.data()) === null || _doc$data2 === void 0 ? void 0 : _doc$data2.announcementNotif);\n      });\n    };\n\n    fetchData();\n  }, []);\n\n  const onToggle = async (setValue, type) => {\n    try {\n      if (type === 'openhouse') {\n        setOpenHouseRemindersChecked(setValue);\n        await db.collection('MobileSettings').doc(userID).update({\n          openhouseNotif: setValue\n        });\n      }\n\n      if (type === 'announcement') {\n        setAnnouncementAlertChecked(setValue);\n        await db.collection('MobileSettings').doc(userID).update({\n          announcementNotif: setValue\n        });\n      }\n    } catch (e) {\n      return console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Settings\",\n    route: \"/u/home\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    id: \"settingsIonContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"settingsGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"settingsRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"settingsColDetails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    className: \"settingsItem\",\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"settingsTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }, \"Announcement Alerts\"), /*#__PURE__*/React.createElement(IonToggle, {\n    className: \"settingsToggleBtn\",\n    slot: \"end\",\n    name: \"announcementAlerts\",\n    checked: announcementAlertChecked,\n    onIonChange: e => onToggle(e.detail.checked, 'announcement'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"settingsDetails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, \"Toggle to \", announcementAlertChecked ? \"disable\" : \"enable\", \" alerts for important announcements during the Open House.\")))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"settingsRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"settingsColDetails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    className: \"settingsItem\",\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"settingsTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }, \"Open House Programmes Reminders\"), /*#__PURE__*/React.createElement(IonToggle, {\n    className: \"settingsToggleBtn\",\n    slot: \"end\",\n    name: \"openHouseReminders\",\n    checked: openHouseRemindersChecked,\n    onIonChange: e => onToggle(e.detail.checked, 'openhouse'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"settingsDetails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, \"Toggle to \", openHouseRemindersChecked ? \"disable\" : \"enable\", \" reminders for open house programmes you have added to your personal scheduler.\")))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"simWebsiteRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    className: \"simWebsiteItem\",\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"settingsTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonRouterLink, {\n    id: \"simWebsiteUrl\",\n    href: \"https://www.simge.edu.sg/open-house-overview/\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }, \"SIM Open House Website\"))))))), /*#__PURE__*/React.createElement(IonFooter, {\n    className: \"ion-no-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    id: \"settingsFooter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"footerText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"App Version: 2020.8\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"footerText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Designed & Developed By FYP-20-S3-13\"))));\n};\n\nexport default Settings;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/Settings.tsx"],"names":["IonCol","IonContent","IonFooter","IonGrid","IonHeader","IonItem","IonLabel","IonPage","IonRouterLink","IonRow","IonTitle","IonToggle","IonToolbar","React","useState","useEffect","TopNav","useAuth","db","Settings","userID","announcementAlertChecked","setAnnouncementAlertChecked","openHouseRemindersChecked","setOpenHouseRemindersChecked","fetchData","collection","doc","get","then","data","openhouseNotif","announcementNotif","onToggle","setValue","type","update","e","console","log","detail","checked"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,EAAwCC,OAAxC,EAAiDC,SAAjD,EAA4DC,OAA5D,EAAqEC,QAArE,EAA+EC,OAA/E,EAAwFC,aAAxF,EAAuGC,MAAvG,EAA+GC,QAA/G,EAAyHC,SAAzH,EAAoIC,UAApI,QAAsJ,cAAtJ;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,mBAAP;AACA,OAAO,qBAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,EAAT,QAAmB,aAAnB;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAaH,OAAO,EAA1B;AAEA,QAAM,CAACI,wBAAD,EAA2BC,2BAA3B,IAA0DR,QAAQ,CAAC,KAAD,CAAxE;AACA,QAAM,CAACS,yBAAD,EAA4BC,4BAA5B,IAA4DV,QAAQ,CAAC,KAAD,CAA1E;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,SAAS,GAAG,YAAY;AAC1B,YAAMP,EAAE,CAACQ,UAAH,CAAc,gBAAd,EAAgCC,GAAhC,CAAoCP,MAApC,EAA4CQ,GAA5C,GAAkDC,IAAlD,CAAuDF,GAAG,IAAI;AAAA;;AAChEH,QAAAA,4BAA4B,cAACG,GAAG,CAACG,IAAJ,EAAD,8CAAC,UAAYC,cAAb,CAA5B;AACAT,QAAAA,2BAA2B,eAACK,GAAG,CAACG,IAAJ,EAAD,+CAAC,WAAYE,iBAAb,CAA3B;AACH,OAHK,CAAN;AAIH,KALD;;AAMAP,IAAAA,SAAS;AACZ,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMQ,QAAQ,GAAG,OAAOC,QAAP,EAA0BC,IAA1B,KAA2C;AACxD,QAAI;AACA,UAAIA,IAAI,KAAK,WAAb,EAA0B;AACtBX,QAAAA,4BAA4B,CAACU,QAAD,CAA5B;AACA,cAAMhB,EAAE,CAACQ,UAAH,CAAc,gBAAd,EAAgCC,GAAhC,CAAoCP,MAApC,EAA4CgB,MAA5C,CAAmD;AAAEL,UAAAA,cAAc,EAAEG;AAAlB,SAAnD,CAAN;AACH;;AAED,UAAIC,IAAI,KAAK,cAAb,EAA6B;AACzBb,QAAAA,2BAA2B,CAACY,QAAD,CAA3B;AACA,cAAMhB,EAAE,CAACQ,UAAH,CAAc,gBAAd,EAAgCC,GAAhC,CAAoCP,MAApC,EAA4CgB,MAA5C,CAAmD;AAAEJ,UAAAA,iBAAiB,EAAEE;AAArB,SAAnD,CAAN;AACH;AACJ,KAVD,CAUE,OAAOG,CAAP,EAAU;AACR,aAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP;AACH;AACJ,GAdD;;AAgBA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAyC,IAAA,SAAS,EAAE,IAApD;AAA0D,IAAA,SAAS,EAAE,IAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAKI,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAE,IAAxB;AAA8B,IAAA,EAAE,EAAC,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAkC,IAAA,KAAK,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,mBAArB;AAAyC,IAAA,IAAI,EAAC,KAA9C;AAAoD,IAAA,IAAI,EAAC,oBAAzD;AAA8E,IAAA,OAAO,EAAEhB,wBAAvF;AAAiH,IAAA,WAAW,EAAEgB,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACG,MAAF,CAASC,OAAV,EAAmB,cAAnB,CAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,eAQI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiDpB,wBAAwB,GAAG,SAAH,GAAe,QAAxF,+DADJ,CARJ,CADJ,CAFJ,eAkBI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAkC,IAAA,KAAK,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,eAEI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,mBAArB;AAAyC,IAAA,IAAI,EAAC,KAA9C;AAAoD,IAAA,IAAI,EAAC,oBAAzD;AAA8E,IAAA,OAAO,EAAEE,yBAAvF;AAAkH,IAAA,WAAW,EAAEc,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACG,MAAF,CAASC,OAAV,EAAmB,WAAnB,CAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,eAQI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiDlB,yBAAyB,GAAG,SAAH,GAAe,QAAzF,oFADJ,CARJ,CADJ,CAlBJ,eAkCI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAoC,IAAA,KAAK,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAC,eAAlB;AAAkC,IAAA,IAAI,EAAC,+CAAvC;AAAuF,IAAA,MAAM,EAAC,QAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ,CADJ,CADJ,CAlCJ,CADJ,CALJ,eAuDI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAHJ,CADJ,CAvDJ,CADJ;AAkEH,CAlGD;;AAoGA,eAAeJ,QAAf","sourcesContent":["import { IonCol, IonContent, IonFooter, IonGrid, IonHeader, IonItem, IonLabel, IonPage, IonRouterLink, IonRow, IonTitle, IonToggle, IonToolbar } from '@ionic/react';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport '../css/Global.css';\r\nimport '../css/Settings.css';\r\nimport TopNav from '../components/TopNav';\r\nimport { useAuth } from '../modules/auth';\r\nimport { db } from '../firebase';\r\n\r\nconst Settings: React.FC = () => {\r\n    const { userID } = useAuth();\r\n\r\n    const [announcementAlertChecked, setAnnouncementAlertChecked] = useState(false);\r\n    const [openHouseRemindersChecked, setOpenHouseRemindersChecked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await db.collection('MobileSettings').doc(userID).get().then(doc => {\r\n                setOpenHouseRemindersChecked(doc.data()?.openhouseNotif)\r\n                setAnnouncementAlertChecked(doc.data()?.announcementNotif)\r\n            });\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const onToggle = async (setValue: boolean, type: string) => {\r\n        try {\r\n            if (type === 'openhouse') {\r\n                setOpenHouseRemindersChecked(setValue);\r\n                await db.collection('MobileSettings').doc(userID).update({ openhouseNotif: setValue });\r\n            }\r\n\r\n            if (type === 'announcement') {\r\n                setAnnouncementAlertChecked(setValue);\r\n                await db.collection('MobileSettings').doc(userID).update({ announcementNotif: setValue });\r\n            }\r\n        } catch (e) {\r\n            return console.log(e);\r\n        }\r\n    }\r\n        \r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <TopNav title=\"Settings\" route='/u/home' backarrow={true} hamburger={true} />\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen={true} id=\"settingsIonContent\">\r\n                <IonGrid id=\"settingsGrid\">\r\n                    {/* Announcement Alerts */}\r\n                    <IonRow className=\"settingsRow\">\r\n                        <IonCol className=\"settingsColDetails\">\r\n                            <IonRow>\r\n                                <IonItem className=\"settingsItem\" lines=\"none\">\r\n                                    <IonTitle className=\"settingsTitle\">Announcement Alerts</IonTitle>\r\n                                    <IonToggle className=\"settingsToggleBtn\" slot=\"end\" name=\"announcementAlerts\" checked={announcementAlertChecked} onIonChange={e => onToggle(e.detail.checked, 'announcement')} />\r\n                                </IonItem>\r\n                            </IonRow>\r\n\r\n                            <IonRow>\r\n                                <IonLabel className=\"settingsDetails\">Toggle to {announcementAlertChecked ? \"disable\" : \"enable\"} alerts for important announcements during the Open House.</IonLabel>\r\n                            </IonRow>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    {/* Open House Reminders */}\r\n                    <IonRow className=\"settingsRow\">\r\n                        <IonCol className=\"settingsColDetails\">\r\n                            <IonRow>\r\n                                <IonItem className=\"settingsItem\" lines=\"none\">\r\n                                    <IonTitle className=\"settingsTitle\">Open House Programmes Reminders</IonTitle>\r\n                                    <IonToggle className=\"settingsToggleBtn\" slot=\"end\" name=\"openHouseReminders\" checked={openHouseRemindersChecked} onIonChange={e => onToggle(e.detail.checked, 'openhouse')} />\r\n                                </IonItem>\r\n                            </IonRow>\r\n\r\n                            <IonRow>\r\n                                <IonLabel className=\"settingsDetails\">Toggle to {openHouseRemindersChecked ? \"disable\" : \"enable\"} reminders for open house programmes you have added to your personal scheduler.</IonLabel>\r\n                            </IonRow>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    {/* SIM Open House Website */}\r\n                    <IonRow className=\"simWebsiteRow\">\r\n                        <IonCol>\r\n                            <IonItem className=\"simWebsiteItem\" lines=\"none\">\r\n                                <IonTitle className=\"settingsTitle\">\r\n                                    <IonRouterLink id=\"simWebsiteUrl\" href=\"https://www.simge.edu.sg/open-house-overview/\" target=\"_blank\">\r\n                                        SIM Open House Website\r\n                                    </IonRouterLink>\r\n                                </IonTitle>\r\n                            </IonItem>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                </IonGrid>\r\n            </IonContent>\r\n\r\n            <IonFooter className=\"ion-no-border\">\r\n                <IonToolbar id=\"settingsFooter\">\r\n                    <IonLabel className=\"footerText\">App Version: 2020.8</IonLabel>\r\n                    <br />\r\n                    <IonLabel className=\"footerText\">Designed & Developed By FYP-20-S3-13</IonLabel>\r\n                </IonToolbar>\r\n            </IonFooter>\r\n\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}