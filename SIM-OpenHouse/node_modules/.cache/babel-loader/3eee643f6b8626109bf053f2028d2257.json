{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\MyProfile.tsx\";\nimport { IonAlert, IonButton, IonCol, IonContent, IonGrid, IonHeader, IonInput, IonItem, IonModal, IonPage, IonRow, IonSelect, IonSelectOption } from '@ionic/react';\nimport React, { useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport '../css/Global.css';\nimport '../css/MyProfile.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAddressCard, faEnvelope, faMobileAlt, faBirthdayCake, faUserGraduate, faGlobe, faLock } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-regular-svg-icons';\nimport TopNav from '../components/TopNav';\n\nconst MyProfile = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues,\n    reset,\n    watch\n  } = useForm();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [contactNo, setContactNo] = useState('');\n  const [dob, setDob] = useState();\n  const [highestQualification, setHighestQualification] = useState('');\n  const [nationality, setNationality] = useState();\n  const [password, setPassword] = useState();\n  const [readOnly, setReadOnly] = useState(true);\n  const [contactNoDisabled, setContactNoDisabled] = useState(true);\n  const [highestQualDisabled, setHighestQualDisabled] = useState(true);\n  const [contactNoReadOnly, setContactNoReadOnly] = useState(true);\n  const [profileNav, setProfileNav] = useState(true);\n  const [showEditProfileBtn, setShowEditProfileBtn] = useState(true);\n  const [showChangePassword, setShowChangePassword] = useState(true);\n  {\n    /* Edit Profile */\n  }\n\n  const editProfile = () => {\n    setContactNoDisabled(false);\n    setHighestQualDisabled(false);\n    setContactNoReadOnly(false);\n    setProfileNav(false);\n    setShowEditProfileBtn(false);\n    setShowChangePassword(false);\n  };\n\n  const onSubmitEditProfile = () => {\n    console.log(\"edited\");\n  };\n\n  {\n    /* Change Password Modal & Alert */\n  }\n  const [changePasswordModal, setChangePasswordModal] = useState(false);\n  const [changePasswordSuccess, setChangePasswordSuccess] = useState(false);\n  const currentPasswordRef = useRef({});\n  const newPasswordRef = useRef({});\n  currentPasswordRef.current = watch(\"currentPassword\", \"\");\n  newPasswordRef.current = watch(\"newPassword\", \"\");\n\n  const displayChangePassword = () => {\n    setChangePasswordModal(true);\n  };\n\n  const onSubmitChangePassword = data => {\n    const currentPassword = getValues(\"currentPassword\");\n    const newPassword = getValues(\"newPassword\");\n    const confirmNewPassword = getValues(\"confirmNewPassword\");\n\n    if (currentPassword !== \"\" && newPassword !== \"\" && confirmNewPassword !== \"\" && newPassword !== currentPassword && confirmNewPassword === newPassword) {\n      console.log(\"Submitted\");\n      setChangePasswordModal(false);\n      reset({\n        currentPassword: \"\",\n        newPassword: \"\",\n        confirmNewPassword: \"\"\n      });\n      setChangePasswordSuccess(true);\n    }\n  };\n\n  const cancelEditPassword = () => {\n    console.log(\"Cancel\");\n    setChangePasswordModal(false);\n    reset({\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonModal, {\n    isOpen: changePasswordModal,\n    cssClass: \"editPasswordModal\",\n    onDidDismiss: () => setChangePasswordModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"editPasswordModalContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"editPasswordModalGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    key: 1,\n    onSubmit: handleSubmit(onSubmitChangePassword),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"editPasswordModalRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"12\",\n    sizeSm: \"12\",\n    className: \"editPasswordModalCol\",\n    class: \"ion-text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    className: \"editPasswordModalItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    type: \"password\",\n    className: \"passwordInput\",\n    name: \"currentPassword\",\n    placeholder: \"Current Password\",\n    ref: register({\n      required: true,\n      minLength: 8,\n      pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[.,/<>#^~`@$!%*?&])[A-Za-z\\d.,/<>#~`^@$!%*?&]{8,}$/\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 41\n    }\n  })), errors.currentPassword && errors.currentPassword.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 110\n    }\n  }, \"Current Password is required!\"), errors.currentPassword && errors.currentPassword.type === \"minLength\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 111\n    }\n  }, \"Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"), errors.currentPassword && errors.currentPassword.type === \"pattern\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 109\n    }\n  }, \"Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"editPasswordModalRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"12\",\n    sizeSm: \"12\",\n    className: \"editPasswordModalCol\",\n    class: \"ion-text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    className: \"editPasswordModalItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    type: \"password\",\n    className: \"passwordInput\",\n    name: \"newPassword\",\n    placeholder: \"New Password\",\n    ref: register({\n      required: true,\n      minLength: 8,\n      pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[.,/<>#^~`@$!%*?&])[A-Za-z\\d.,/<>#~`^@$!%*?&]{8,}$/,\n      validate: newPassword => newPassword !== currentPasswordRef.current\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 41\n    }\n  })), errors.newPassword && errors.newPassword.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 102\n    }\n  }, \"New Password is required!\"), errors.newPassword && errors.newPassword.type === \"minLength\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 103\n    }\n  }, \"New Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"), errors.newPassword && errors.newPassword.type === \"pattern\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 101\n    }\n  }, \"New Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"), errors.newPassword && errors.newPassword.type === \"validate\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 102\n    }\n  }, \"New Password cannot be the same as Current Password!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"editPasswordModalRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"12\",\n    sizeSm: \"12\",\n    className: \"editPasswordModalCol\",\n    class: \"ion-text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    className: \"editPasswordModalItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    type: \"password\",\n    className: \"passwordInput\",\n    name: \"confirmNewPassword\",\n    placeholder: \"Confirm New Password\",\n    ref: register({\n      required: true,\n      minLength: 8,\n      pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[.,/<>#^~`@$!%*?&])[A-Za-z\\d.,/<>#~`^@$!%*?&]{8,}$/,\n      validate: confirmNewPassword => confirmNewPassword === newPasswordRef.current\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 41\n    }\n  })), errors.confirmNewPassword && errors.confirmNewPassword.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 116\n    }\n  }, \"Confirm New Password is required!\"), errors.confirmNewPassword && errors.confirmNewPassword.type === \"minLength\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 117\n    }\n  }, \"Passwords do not match!\"), errors.confirmNewPassword && errors.confirmNewPassword.type === \"pattern\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 115\n    }\n  }, \"Passwords do not match!\"), errors.confirmNewPassword && errors.confirmNewPassword.type === \"validate\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 116\n    }\n  }, \"Passwords do not match!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    class: \"ion-align-items-center\",\n    style: {\n      marginTop: \"5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"4\",\n    sizeSm: \"4\",\n    class: \"ion-text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    className: \"editPasswordBtn\",\n    onClick: cancelEditPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }, \"CANCEL\")), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"8\",\n    sizeSm: \"8\",\n    class: \"ion-text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    className: \"editPasswordBtn\",\n    type: \"submit\",\n    onClick: onSubmitChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 37\n    }\n  }, \"CHANGE PASSWORD\"))))))), /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: changePasswordSuccess,\n    onDidDismiss: () => setChangePasswordSuccess(false),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    header: 'Successfully Changed Password',\n    message: 'Password has been successfully changed!',\n    buttons: [{\n      text: 'Close',\n      handler: () => {\n        reset({\n          currentPassword: \"\",\n          newPassword: \"\",\n          confirmNewPassword: \"\"\n        });\n        setChangePasswordSuccess(false);\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, profileNav ? /*#__PURE__*/React.createElement(TopNav, {\n    title: \"My Profile\",\n    route: \"/u/home\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Edit My Profile\",\n    route: \"/u/home\",\n    backarrow: false,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"profileGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    key: 2,\n    onSubmit: handleSubmit2(onSubmitEditProfile),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, showEditProfileBtn ? /*#__PURE__*/React.createElement(IonRow, {\n    id: \"editProfileBtnRow\",\n    class: \"ion-align-items-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"12\",\n    sizeSm: \"12\",\n    class: \"ion-text-right\",\n    id: \"editProfileBtnCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    id: \"editProfileBtn\",\n    onClick: editProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 41\n    }\n  }, \"EDIT PROFILE\"))) : null, /*#__PURE__*/React.createElement(IonRow, {\n    id: \"qrCodeRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"12\",\n    sizeSm: \"12\",\n    class: \"ion-text-center\",\n    id: \"qrCodeCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"qrCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  }, \"QR Code here\"))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"profileRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    sizeSm: \"2\",\n    class: \"ion-text-center\",\n    className: \"profileIconCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faAddressCard,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"5\",\n    sizeSm: \"5\",\n    class: \"ion-text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    value: firstName,\n    name: \"firstName\",\n    readonly: readOnly,\n    className: \"readOnlyIonInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 37\n    }\n  }, \"First Name\")), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"5\",\n    sizeSm: \"5\",\n    class: \"ion-text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    value: lastName,\n    name: \"lastName\",\n    readonly: readOnly,\n    className: \"readOnlyIonInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 37\n    }\n  }, \"Last Name\"))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"profileRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    sizeSm: \"2\",\n    class: \"ion-text-center\",\n    className: \"profileIconCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEnvelope,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"10\",\n    sizeSm: \"10\",\n    class: \"ion-text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    value: email,\n    name: \"email\",\n    readonly: readOnly,\n    className: \"readOnlyIonInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 37\n    }\n  }, \"Email\"))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"profileRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    sizeSm: \"2\",\n    class: \"ion-text-center\",\n    className: \"profileIconCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faMobileAlt,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"10\",\n    sizeSm: \"10\",\n    class: \"ion-text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    value: contactNo,\n    type: \"tel\",\n    name: \"contactNo\",\n    readonly: contactNoReadOnly,\n    disabled: contactNoDisabled,\n    className: \"readOnlyIonInput\",\n    id: \"contactNoField\",\n    minlength: 8,\n    maxlength: 8,\n    ref: register2({\n      required: true,\n      minLength: 8,\n      maxLength: 8,\n      pattern: /(6|8|9)\\d{7}/\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 37\n    }\n  }, contactNo), errors2.contactNo && errors2.contactNo.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 100\n    }\n  }, \"Contact number is required!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"profileRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    sizeSm: \"2\",\n    class: \"ion-text-center\",\n    className: \"profileIconCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faBirthdayCake,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"10\",\n    sizeSm: \"10\",\n    class: \"ion-text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    value: dob,\n    name: \"dob\",\n    readonly: readOnly,\n    className: \"readOnlyIonInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 37\n    }\n  }, \"DOB\"))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"profileRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    sizeSm: \"2\",\n    class: \"ion-text-center\",\n    className: \"profileIconCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUserGraduate,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"10\",\n    sizeSm: \"10\",\n    class: \"ion-text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonSelect, {\n    id: \"highestQualSelect\",\n    className: \"readOnlyIonInput\",\n    name: \"highestQualification\",\n    value: highestQualification,\n    disabled: highestQualDisabled,\n    ref: register2({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"aLevel\",\n    className: \"highestQualSelectOption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 41\n    }\n  }, \"'A' Level\"), /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"oLevel\",\n    className: \"highestQualSelectOption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 41\n    }\n  }, \"'O' Level\"), /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"degree\",\n    className: \"highestQualSelectOption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 41\n    }\n  }, \"Degree\"), /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"diploma\",\n    className: \"highestQualSelectOption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 41\n    }\n  }, \"Diploma\")))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"profileRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    sizeSm: \"2\",\n    class: \"ion-text-center\",\n    className: \"profileIconCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faGlobe,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"10\",\n    sizeSm: \"10\",\n    class: \"ion-text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    value: nationality,\n    name: \"nationality\",\n    readonly: readOnly,\n    className: \"readOnlyIonInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 37\n    }\n  }, \"Nationality\"))), showChangePassword ? /*#__PURE__*/React.createElement(IonRow, {\n    className: \"profileRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    sizeSm: \"2\",\n    class: \"ion-text-center\",\n    className: \"profileIconCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLock,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"8\",\n    sizeSm: \"8\",\n    class: \"ion-text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    type: \"password\",\n    value: password,\n    name: \"password\",\n    readonly: readOnly,\n    className: \"readOnlyIonInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 41\n    }\n  }, \"Password\")), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    sizeSm: \"2\",\n    class: \"ion-text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    id: \"editPasswordBtn\",\n    fill: \"clear\",\n    size: \"default\",\n    onClick: displayChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 45\n    }\n  })))) : /*#__PURE__*/React.createElement(IonRow, {\n    id: \"editProfileBtnRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"12\",\n    sizeSm: \"12\",\n    class: \"ion-text-center\",\n    id: \"saveEditProfileBtnCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    id: \"saveEditProfileBtn\",\n    onClick: onSubmitEditProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 45\n    }\n  }, \"SAVE\"))))))));\n};\n\nexport default MyProfile;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/MyProfile.tsx"],"names":["IonAlert","IonButton","IonCol","IonContent","IonGrid","IonHeader","IonInput","IonItem","IonModal","IonPage","IonRow","IonSelect","IonSelectOption","React","useRef","useState","useForm","FontAwesomeIcon","faAddressCard","faEnvelope","faMobileAlt","faBirthdayCake","faUserGraduate","faGlobe","faLock","faEdit","TopNav","MyProfile","register","handleSubmit","errors","getValues","reset","watch","firstName","setFirstName","lastName","setLastName","email","setEmail","contactNo","setContactNo","dob","setDob","highestQualification","setHighestQualification","nationality","setNationality","password","setPassword","readOnly","setReadOnly","contactNoDisabled","setContactNoDisabled","highestQualDisabled","setHighestQualDisabled","contactNoReadOnly","setContactNoReadOnly","profileNav","setProfileNav","showEditProfileBtn","setShowEditProfileBtn","showChangePassword","setShowChangePassword","editProfile","onSubmitEditProfile","console","log","changePasswordModal","setChangePasswordModal","changePasswordSuccess","setChangePasswordSuccess","currentPasswordRef","newPasswordRef","current","displayChangePassword","onSubmitChangePassword","data","currentPassword","newPassword","confirmNewPassword","cancelEditPassword","required","minLength","pattern","type","validate","marginTop","text","handler","handleSubmit2","register2","maxLength","errors2"],"mappings":"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","sourcesContent":["import { IonAlert, IonButton, IonButtons, IonCol, IonContent, IonGrid, IonHeader, IonInput, IonItem, IonModal, IonPage, IonRouterLink, IonRow, IonSelect, IonSelectOption, IonTitle } from '@ionic/react';\r\nimport React, { useRef, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport '../css/Global.css';\r\nimport '../css/MyProfile.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAddressCard, faEnvelope, faMobileAlt, faBirthdayCake, faUserGraduate, faGlobe, faLock } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEdit } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport TopNav from '../components/TopNav';\r\nimport Menu from '../components/Menu';\r\nimport { Console } from 'console';\r\n\r\n\r\nconst MyProfile: React.FC = () => {\r\n\r\n    const { register, handleSubmit, errors, getValues, reset, watch } = useForm();\r\n\r\n    const [firstName, setFirstName] = useState<string>('');\r\n    const [lastName, setLastName] = useState<string>('');\r\n    const [email, setEmail] = useState<string>('');\r\n    const [contactNo, setContactNo] = useState<string>(''); \r\n    const [dob, setDob] = useState();\r\n    const [highestQualification, setHighestQualification] = useState('');\r\n    const [nationality, setNationality] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [readOnly, setReadOnly] = useState(true);\r\n    const [contactNoDisabled, setContactNoDisabled] = useState(true);\r\n    const [highestQualDisabled, setHighestQualDisabled] = useState(true);\r\n    const [contactNoReadOnly, setContactNoReadOnly] = useState(true);\r\n\r\n    const [profileNav, setProfileNav] = useState(true);\r\n    const [showEditProfileBtn, setShowEditProfileBtn] = useState(true);\r\n    const [showChangePassword, setShowChangePassword] = useState(true);\r\n\r\n\r\n    {/* Edit Profile */}\r\n    const editProfile = () => {\r\n        setContactNoDisabled(false);\r\n        setHighestQualDisabled(false);\r\n        setContactNoReadOnly(false);\r\n        \r\n        setProfileNav(false);\r\n        setShowEditProfileBtn(false);\r\n        setShowChangePassword(false);\r\n    };\r\n\r\n    const onSubmitEditProfile = () => {\r\n        console.log(\"edited\");\r\n    };\r\n\r\n\r\n    {/* Change Password Modal & Alert */}\r\n    const [changePasswordModal, setChangePasswordModal] = useState(false);\r\n    const [changePasswordSuccess, setChangePasswordSuccess] = useState(false);\r\n\r\n    const currentPasswordRef = useRef({});\r\n    const newPasswordRef = useRef({});\r\n    currentPasswordRef.current = watch(\"currentPassword\", \"\");\r\n    newPasswordRef.current = watch(\"newPassword\", \"\");\r\n\r\n    const displayChangePassword = () => {\r\n        setChangePasswordModal(true);\r\n    };\r\n\r\n    const onSubmitChangePassword = (data: any) => {\r\n        const currentPassword = getValues(\"currentPassword\");\r\n        const newPassword = getValues(\"newPassword\");\r\n        const confirmNewPassword = getValues(\"confirmNewPassword\");\r\n\r\n        if ((currentPassword !== \"\" && newPassword !== \"\" && confirmNewPassword !== \"\") && \r\n        (newPassword !== currentPassword && confirmNewPassword === newPassword)) {            \r\n            console.log(\"Submitted\");\r\n            setChangePasswordModal(false)\r\n            reset({\r\n                currentPassword: \"\",\r\n                newPassword: \"\",\r\n                confirmNewPassword: \"\"\r\n            });\r\n            setChangePasswordSuccess(true);        \r\n        }\r\n    };\r\n\r\n    const cancelEditPassword = () => {\r\n        console.log(\"Cancel\");\r\n        setChangePasswordModal(false)\r\n        reset({\r\n            currentPassword: \"\",\r\n            newPassword: \"\",\r\n            confirmNewPassword: \"\"\r\n        });\r\n    }\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <IonModal isOpen={changePasswordModal} cssClass='editPasswordModal' onDidDismiss={() => setChangePasswordModal(false)}>\r\n                <IonContent fullscreen className=\"editPasswordModalContent\">\r\n                    <IonGrid id=\"editPasswordModalGrid\">\r\n                        <form key={1} onSubmit={handleSubmit(onSubmitChangePassword)}>\r\n                            {/* Current Password */}\r\n                            <IonRow className=\"editPasswordModalRow\" class=\"ion-align-items-center\">\r\n                                <IonCol size=\"12\" sizeSm=\"12\" className=\"editPasswordModalCol\" class=\"ion-text-left\">\r\n                                    <IonItem className=\"editPasswordModalItem\">\r\n                                        <IonInput type=\"password\" className=\"passwordInput\" name=\"currentPassword\" placeholder=\"Current Password\" ref={register({ required: true, minLength: 8, pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[.,/<>#^~`@$!%*?&])[A-Za-z\\d.,/<>#~`^@$!%*?&]{8,}$/ })} />\r\n                                    </IonItem>\r\n                                    {errors.currentPassword && errors.currentPassword.type === \"required\" && <p className=\"errorMsg\">Current Password is required!</p>}\r\n                                    {errors.currentPassword && errors.currentPassword.type === \"minLength\" && <p className=\"errorMsg\">Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</p>}\r\n                                    {errors.currentPassword && errors.currentPassword.type === \"pattern\" && <p className=\"errorMsg\">Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</p>}\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* New Password */}\r\n                            <IonRow className=\"editPasswordModalRow\" class=\"ion-align-items-center\">\r\n                                <IonCol size=\"12\" sizeSm=\"12\" className=\"editPasswordModalCol\" class=\"ion-text-left\">\r\n                                    <IonItem className=\"editPasswordModalItem\">\r\n                                        <IonInput type=\"password\" className=\"passwordInput\" name=\"newPassword\" placeholder=\"New Password\" ref={register({ required: true, minLength: 8, pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[.,/<>#^~`@$!%*?&])[A-Za-z\\d.,/<>#~`^@$!%*?&]{8,}$/, validate: (newPassword) => newPassword !== currentPasswordRef.current })} />\r\n                                    </IonItem>\r\n                                    {errors.newPassword && errors.newPassword.type === \"required\" && <p className=\"errorMsg\">New Password is required!</p>}\r\n                                    {errors.newPassword && errors.newPassword.type === \"minLength\" && <p className=\"errorMsg\">New Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</p>}\r\n                                    {errors.newPassword && errors.newPassword.type === \"pattern\" && <p className=\"errorMsg\">New Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</p>}\r\n                                    {errors.newPassword && errors.newPassword.type === \"validate\" && <p className=\"errorMsg\">New Password cannot be the same as Current Password!</p>}\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Confirm New Password */}\r\n                            <IonRow className=\"editPasswordModalRow\" class=\"ion-align-items-center\">\r\n                                <IonCol size=\"12\" sizeSm=\"12\" className=\"editPasswordModalCol\" class=\"ion-text-left\">\r\n                                    <IonItem className=\"editPasswordModalItem\">\r\n                                        <IonInput type=\"password\" className=\"passwordInput\" name=\"confirmNewPassword\" placeholder=\"Confirm New Password\" ref={register({ required: true, minLength: 8, pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[.,/<>#^~`@$!%*?&])[A-Za-z\\d.,/<>#~`^@$!%*?&]{8,}$/, validate: (confirmNewPassword) => confirmNewPassword === newPasswordRef.current })} />\r\n                                    </IonItem>\r\n                                    {errors.confirmNewPassword && errors.confirmNewPassword.type === \"required\" && <p className=\"errorMsg\">Confirm New Password is required!</p>}\r\n                                    {errors.confirmNewPassword && errors.confirmNewPassword.type === \"minLength\" && <p className=\"errorMsg\">Passwords do not match!</p>}\r\n                                    {errors.confirmNewPassword && errors.confirmNewPassword.type === \"pattern\" && <p className=\"errorMsg\">Passwords do not match!</p>}\r\n                                    {errors.confirmNewPassword && errors.confirmNewPassword.type === \"validate\" && <p className=\"errorMsg\">Passwords do not match!</p>}\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            <IonRow class=\"ion-align-items-center\" style={{marginTop:\"5%\"}}>\r\n                                <IonCol size=\"4\" sizeSm=\"4\" class=\"ion-text-right\">\r\n                                    <IonButton className=\"editPasswordBtn\" onClick={cancelEditPassword}>CANCEL</IonButton>\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"8\" sizeSm=\"8\" class=\"ion-text-center\">\r\n                                    <IonButton className=\"editPasswordBtn\" type=\"submit\" onClick={onSubmitChangePassword}>CHANGE PASSWORD</IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                        </form>\r\n                    </IonGrid>\r\n\r\n                </IonContent>\r\n            </IonModal>\r\n\r\n            <IonAlert\r\n                isOpen={changePasswordSuccess}\r\n                onDidDismiss={() => setChangePasswordSuccess(false)}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Successfully Changed Password'}\r\n                message={'Password has been successfully changed!'}\r\n                buttons={[\r\n                    {\r\n                        text: 'Close',\r\n                        handler: () => {\r\n                            reset({\r\n                                currentPassword: \"\",\r\n                                newPassword: \"\",\r\n                                confirmNewPassword: \"\"\r\n                            });\r\n                            setChangePasswordSuccess(false);\r\n                        }\r\n                    }\r\n                ]}\r\n            ></IonAlert>\r\n\r\n            <IonPage>\r\n                <IonHeader>\r\n                    {profileNav ?\r\n                        <TopNav title=\"My Profile\" route='/u/home' backarrow={ true } hamburger = { true }/>\r\n                        : \r\n                            <TopNav title=\"Edit My Profile\" route='/u/home' backarrow={ false } hamburger = { true }/>\r\n                    }\r\n                </IonHeader>\r\n\r\n                <IonContent fullscreen={true}>\r\n                    <IonGrid id=\"profileGrid\">\r\n                        <form key={2} onSubmit={handleSubmit2(onSubmitEditProfile)}>\r\n                            {/* Edit Profile Button */}\r\n                            {showEditProfileBtn ?\r\n                                <IonRow id=\"editProfileBtnRow\" class=\"ion-align-items-right\">\r\n                                    <IonCol size=\"12\" sizeSm=\"12\" class=\"ion-text-right\" id=\"editProfileBtnCol\">\r\n                                        <IonButton id=\"editProfileBtn\" onClick={editProfile}>EDIT PROFILE</IonButton>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                                : null\r\n                            }\r\n\r\n                            {/* Generated QR Code */}\r\n                            <IonRow id=\"qrCodeRow\" class=\"ion-align-items-center\">\r\n                                <IonCol size=\"12\" sizeSm=\"12\" class=\"ion-text-center\" id=\"qrCodeCol\">\r\n                                    <span id=\"qrCode\">QR Code here</span>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Name */}\r\n                            <IonRow className=\"profileRow\" class=\"ion-align-items-center\">\r\n                                <IonCol size=\"2\" sizeSm=\"2\" class=\"ion-text-center\" className=\"profileIconCol\">\r\n                                    <FontAwesomeIcon icon={faAddressCard} size=\"lg\" />\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"5\" sizeSm=\"5\" class=\"ion-text-left\">\r\n                                    <IonInput value={firstName} name=\"firstName\" readonly={readOnly} className=\"readOnlyIonInput\">First Name</IonInput>\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"5\" sizeSm=\"5\" class=\"ion-text-left\">\r\n                                    <IonInput value={lastName} name=\"lastName\" readonly={readOnly} className=\"readOnlyIonInput\">Last Name</IonInput>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Email */}\r\n                            <IonRow className=\"profileRow\" class=\"ion-align-items-center\">\r\n                                <IonCol size=\"2\" sizeSm=\"2\" class=\"ion-text-center\" className=\"profileIconCol\">\r\n                                    <FontAwesomeIcon icon={faEnvelope} size=\"lg\" />\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"10\" sizeSm=\"10\" class=\"ion-text-left\">\r\n                                    <IonInput value={email} name=\"email\" readonly={readOnly} className=\"readOnlyIonInput\">Email</IonInput>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Contact No. */}\r\n                            <IonRow className=\"profileRow\" class=\"ion-align-items-center\">\r\n                                <IonCol size=\"2\" sizeSm=\"2\" class=\"ion-text-center\" className=\"profileIconCol\">\r\n                                    <FontAwesomeIcon icon={faMobileAlt} size=\"lg\" />\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"10\" sizeSm=\"10\" class=\"ion-text-left\">\r\n                                    <IonInput value={contactNo} type=\"tel\" name=\"contactNo\" readonly={contactNoReadOnly} disabled={contactNoDisabled} className=\"readOnlyIonInput\" id=\"contactNoField\" minlength={8} maxlength={8} ref={register2({ required: true, minLength: 8, maxLength: 8, pattern: /(6|8|9)\\d{7}/ })}>{contactNo}</IonInput>\r\n                                    {errors2.contactNo && errors2.contactNo.type === \"required\" && <p className=\"errorMsg\">Contact number is required!</p>}\r\n                                    {/* {errors2.contactNo && errors2.contactNo.type === \"minLength\" && <p className=\"errorMsg\">Contact number consist of only 8 digits</p>}\r\n                                    {errors2.contactNo && errors2.contactNo.type === \"maxLength\" && <p className=\"errorMsg\">Contact number consist of only 8 digits</p>}\r\n                                    {errors2.contactNo && errors2.contactNo.type === \"pattern\" && <p className=\"errorMsg\">Please enter a valid Contact No.</p>} */}\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* DOB */}\r\n                            <IonRow className=\"profileRow\" class=\"ion-align-items-center\">\r\n                                <IonCol size=\"2\" sizeSm=\"2\" class=\"ion-text-center\" className=\"profileIconCol\">\r\n                                    <FontAwesomeIcon icon={faBirthdayCake} size=\"lg\" />\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"10\" sizeSm=\"10\" class=\"ion-text-left\">\r\n                                    <IonInput value={dob} name=\"dob\" readonly={readOnly} className=\"readOnlyIonInput\">DOB</IonInput>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Highest Qualification */}\r\n                            <IonRow className=\"profileRow\" class=\"ion-align-items-center\">\r\n                                <IonCol size=\"2\" sizeSm=\"2\" class=\"ion-text-center\" className=\"profileIconCol\">\r\n                                    <FontAwesomeIcon icon={faUserGraduate} size=\"lg\" />\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"10\" sizeSm=\"10\" class=\"ion-text-left\">\r\n                                    <IonSelect id=\"highestQualSelect\" className=\"readOnlyIonInput\" name=\"highestQualification\" value={highestQualification} disabled={highestQualDisabled} ref={register2({ required: true })}>\r\n                                        <IonSelectOption value=\"aLevel\" className=\"highestQualSelectOption\">'A' Level</IonSelectOption>\r\n                                        <IonSelectOption value=\"oLevel\" className=\"highestQualSelectOption\">'O' Level</IonSelectOption>\r\n                                        <IonSelectOption value=\"degree\" className=\"highestQualSelectOption\">Degree</IonSelectOption>\r\n                                        <IonSelectOption value=\"diploma\" className=\"highestQualSelectOption\">Diploma</IonSelectOption>\r\n                                    </IonSelect>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Nationality */}\r\n                            <IonRow className=\"profileRow\" class=\"ion-align-items-center\">\r\n                                <IonCol size=\"2\" sizeSm=\"2\" class=\"ion-text-center\" className=\"profileIconCol\">\r\n                                    <FontAwesomeIcon icon={faGlobe} size=\"lg\" />\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"10\" sizeSm=\"10\" class=\"ion-text-left\">\r\n                                    <IonInput value={nationality} name=\"nationality\" readonly={readOnly} className=\"readOnlyIonInput\">Nationality</IonInput>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Password */}\r\n                            {showChangePassword ?\r\n                                <IonRow className=\"profileRow\" class=\"ion-align-items-center\">\r\n                                    <IonCol size=\"2\" sizeSm=\"2\" class=\"ion-text-center\" className=\"profileIconCol\">\r\n                                        <FontAwesomeIcon icon={faLock} size=\"lg\" />\r\n                                    </IonCol>\r\n\r\n                                    <IonCol size=\"8\" sizeSm=\"8\" class=\"ion-text-left\">\r\n                                        <IonInput type=\"password\" value={password} name=\"password\" readonly={readOnly} className=\"readOnlyIonInput\">Password</IonInput>\r\n                                    </IonCol>\r\n\r\n                                    <IonCol size=\"2\" sizeSm=\"2\" class=\"ion-text-center\">\r\n                                        <IonButton id=\"editPasswordBtn\" fill=\"clear\" size=\"default\" onClick={displayChangePassword}>\r\n                                            <FontAwesomeIcon icon={faEdit} size=\"lg\" />\r\n                                        </IonButton>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                                : (\r\n                                    <IonRow id=\"editProfileBtnRow\" class=\"ion-align-items-center\">\r\n                                        <IonCol size=\"12\" sizeSm=\"12\" class=\"ion-text-center\" id=\"saveEditProfileBtnCol\">\r\n                                            <IonButton id=\"saveEditProfileBtn\" onClick={onSubmitEditProfile}>SAVE</IonButton>\r\n                                        </IonCol>\r\n                                    </IonRow>\r\n                                )\r\n                            }\r\n                        \r\n                        </form>\r\n                    </IonGrid>\r\n                </IonContent>\r\n            </IonPage>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MyProfile;"]},"metadata":{},"sourceType":"module"}