{"ast":null,"code":"import _toConsumableArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{IonContent,IonButton,IonHeader,IonPage,IonTitle,IonToolbar,IonCheckbox}from\"@ionic/react\";import React,{useState,useEffect}from\"react\";import QRCode from\"qrcode.react\";import notifications from'./Notifications';import\"../css/Home.css\";import{db}from\"../firebase\";import{toDateObject}from'../modules/convert';import moment from'moment';var VincentTest=function VincentTest(){var progTime=toDateObject(\"3-Nov-2020\",\"9:14PM\");var progTimeMili=progTime.getTime();console.log(progTime);console.log(\"Moment: \"+moment(progTime).subtract(60*5,'s').toDate());console.log((progTimeMili-new Date().getTime())/(1000*60));var _useState=useState([]),_useState2=_slicedToArray(_useState,2),programmes=_useState2[0],setProgrammes=_useState2[1];var _useState3=useState(['fullTime','partTime','fullPartTime']),_useState4=_slicedToArray(_useState3,2),checkedFilter=_useState4[0],setCheckFilter=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),filteredProgrammes=_useState6[0],setFilteredProgrammes=_useState6[1];var MySchedule=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:case\"end\":return _context.stop();}}},_callee);}));return function MySchedule(){return _ref.apply(this,arguments);};}();var handleToggle=function handleToggle(value){var currentIndex=checkedFilter.indexOf(value);var newCheckedFilter=_toConsumableArray(checkedFilter);if(currentIndex===-1){newCheckedFilter.push(value);}else{newCheckedFilter.splice(currentIndex,1);}setCheckFilter(newCheckedFilter);// console.log('New filters are' + newCheckedFilter)\nfilterProgrammes(newCheckedFilter);};var filterProgrammes=function filterProgrammes(filters){console.log(\"I am inside filterProgrammes: \"+programmes);var newProgrammes=[];filters.map(function(filter){var programme=[];if(filter=='partTime'){programme=programmes.filter(function(programme){return programme.modeOfStudy.partTime==true;});console.log('I am partTime'+programme);newProgrammes.push(programme);}else if(filter=='fullTime'){programme=programmes.filter(function(programme){return programme.modeOfStudy.fullTime==true;});console.log('I am fullTime'+programme);newProgrammes.push(programme);}else if(filter=='fullPartTime'){programme=programmes.filter(function(programme){return programme.modeOfStudy.fullTime==true&&programme.modeOfStudy.partTime==true;});console.log('I am fullPartTime'+programme);newProgrammes.push(programme);}});console.log('newprogrammes are'+newProgrammes);setFilteredProgrammes(newProgrammes);};useEffect(function(){var programmes=[];var dates=[];var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:db.collection(\"TestProgrammes\").get().then(function(snapshot){snapshot.docs.forEach(function(doc){var data=doc.data();programmes.push(data);});// console.log(\"First Useeffect programmes: \" + programmes)\nsetProgrammes(programmes);setFilteredProgrammes(programmes);});case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchData(){return _ref2.apply(this,arguments);};}();var fetchDate=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:db.collection(\"Openhouse\").get().then(function(snapshot){snapshot.forEach(function(doc){var data=doc.get(\"day\");if(!Array.isArray(data)){for(var i=0;i<Object.keys(data).length;i++){var date=data[Object.keys(data)[i]].date;console.log(\"i am date\"+date);dates.push(date);}}});});case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function fetchDate(){return _ref3.apply(this,arguments);};}();fetchData();},[]);var generateQR=function generateQR(){//qrcode.makeCode(qrdata);\n};return/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(IonHeader,null,/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonTitle,null,\"QRTest\"))),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true,className:\"ion-padding\"},/*#__PURE__*/React.createElement(IonButton,{onClick:generateQR},\" Generate QR \"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(QRCode,{value:\"ThomasLee@gmail.com,Thomas,Lee\"}),\" \"),/*#__PURE__*/React.createElement(IonButton,{color:\"tertiary\",onClick:function onClick(){notifications.schedule(\"21-Nov-2020\",\"10:00AM\",\"UOW talk on ComScience\");}},\"Schedule Notification\"),/*#__PURE__*/React.createElement(\"p\",null,\"Full time & Part time\"),/*#__PURE__*/React.createElement(IonCheckbox,{onIonChange:function onIonChange(e){return handleToggle(e.detail.value);},value:\"fullPartTime\",checked:checkedFilter.indexOf('fullPartTime')===-1?false:true}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,\"Full time\"),/*#__PURE__*/React.createElement(IonCheckbox,{onIonChange:function onIonChange(e){return handleToggle(e.detail.value);},value:\"fullTime\",checked:checkedFilter.indexOf('fullTime')===-1?false:true}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,\"Part time\"),/*#__PURE__*/React.createElement(IonCheckbox,{onIonChange:function onIonChange(e){return handleToggle(e.detail.value);},value:\"partTime\",checked:checkedFilter.indexOf('partTime')===-1?false:true}),/*#__PURE__*/React.createElement(\"br\",null),Array.isArray(filteredProgrammes)&&filteredProgrammes.length&&filteredProgrammes.map(function(programme){return/*#__PURE__*/React.createElement(\"div\",{key:programme.id},/*#__PURE__*/React.createElement(\"li\",null,programme.programmeTitle),/*#__PURE__*/React.createElement(\"li\",null,programme.awardedBy),/*#__PURE__*/React.createElement(\"br\",null));})));};export default VincentTest;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/temp/VincentTest.tsx"],"names":["IonContent","IonButton","IonHeader","IonPage","IonTitle","IonToolbar","IonCheckbox","React","useState","useEffect","QRCode","notifications","db","toDateObject","moment","VincentTest","progTime","progTimeMili","getTime","console","log","subtract","toDate","Date","programmes","setProgrammes","checkedFilter","setCheckFilter","filteredProgrammes","setFilteredProgrammes","MySchedule","handleToggle","value","currentIndex","indexOf","newCheckedFilter","push","splice","filterProgrammes","filters","newProgrammes","map","filter","programme","modeOfStudy","partTime","fullTime","dates","fetchData","collection","get","then","snapshot","docs","forEach","doc","data","fetchDate","Array","isArray","i","Object","keys","length","date","generateQR","schedule","e","detail","id","programmeTitle","awardedBy"],"mappings":"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","sourcesContent":["import { IonContent, IonInput, IonButton, IonItem, IonLabel, IonHeader, IonPage, IonTitle, IonToolbar, IonSegmentButton, IonSegment, IonCheckbox } from \"@ionic/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport notifications from './Notifications'\r\nimport \"../css/Home.css\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { toDateObject } from '../modules/convert'\r\nimport moment from 'moment'\r\n\r\n\r\nconst VincentTest: React.FC = () => {\r\n\r\n  const progTime = toDateObject(\"3-Nov-2020\", \"9:14PM\")\r\n  const progTimeMili = progTime.getTime()\r\n  console.log(progTime)\r\n  console.log(\"Moment: \" + moment(progTime).subtract(60 * 5, 's').toDate())\r\n  console.log((progTimeMili - new Date().getTime()) / (1000 * 60))\r\n  const [programmes, setProgrammes] = useState<any>([])\r\n  const [checkedFilter, setCheckFilter] = useState<string[]>(['fullTime', 'partTime', 'fullPartTime'])\r\n  const [filteredProgrammes, setFilteredProgrammes] = useState([])\r\n\r\n  const MySchedule = async () => {\r\n\r\n  }\r\n  const handleToggle = (value: string) => {\r\n    const currentIndex = checkedFilter.indexOf(value)\r\n    const newCheckedFilter = [...checkedFilter]\r\n\r\n    if (currentIndex === -1) {\r\n      newCheckedFilter.push(value)\r\n    } else {\r\n      newCheckedFilter.splice(currentIndex, 1)\r\n    }\r\n\r\n    setCheckFilter(newCheckedFilter)\r\n    // console.log('New filters are' + newCheckedFilter)\r\n    filterProgrammes(newCheckedFilter)\r\n\r\n  }\r\n\r\n  const filterProgrammes = (filters: string[]) => {\r\n    console.log(\"I am inside filterProgrammes: \" + programmes)\r\n    const newProgrammes: any = []\r\n    filters.map(filter => {\r\n      let programme = []\r\n      if (filter == 'partTime') {\r\n        programme = programmes.filter((programme: { modeOfStudy: { partTime: boolean; }; }) => { return programme.modeOfStudy.partTime == true })\r\n        console.log('I am partTime' + programme)\r\n        newProgrammes.push(programme)\r\n      }\r\n      else if (filter == 'fullTime') {\r\n        programme = programmes.filter((programme: { modeOfStudy: { fullTime: boolean; }; }) => { return programme.modeOfStudy.fullTime == true })\r\n        console.log('I am fullTime' + programme)\r\n        newProgrammes.push(programme)\r\n      }\r\n      else if (filter == 'fullPartTime') {\r\n        programme = programmes.filter((programme: { modeOfStudy: { fullTime: boolean; partTime: boolean }; }) => { return programme.modeOfStudy.fullTime == true && programme.modeOfStudy.partTime == true })\r\n        console.log('I am fullPartTime' + programme)\r\n        newProgrammes.push(programme)\r\n      }\r\n    })\r\n    console.log('newprogrammes are' + newProgrammes)\r\n    setFilteredProgrammes(newProgrammes)\r\n  }\r\n  useEffect(() => {\r\n    const programmes: any = []\r\n    const dates: any = []\r\n    const fetchData = async () => {\r\n      db.collection(\"TestProgrammes\")\r\n        .get()\r\n        .then((snapshot) => {\r\n          snapshot.docs.forEach((doc) => {\r\n            const data = doc.data()\r\n            programmes.push(data)\r\n          });\r\n          // console.log(\"First Useeffect programmes: \" + programmes)\r\n          setProgrammes(programmes)\r\n          setFilteredProgrammes(programmes)\r\n\r\n        });\r\n    };\r\n\r\n    const fetchDate = async () => {\r\n      db.collection(\"Openhouse\")\r\n        .get()\r\n        .then((snapshot: any) => {\r\n          snapshot.forEach((doc: any) => {\r\n            const data = doc.get(\"day\");\r\n            if (!Array.isArray(data)) {\r\n              for (var i = 0; i < Object.keys(data).length; i++) {\r\n                const date = data[Object.keys(data)[i]].date;\r\n                console.log(\"i am date\" + date)\r\n                dates.push(date)\r\n              }\r\n            }\r\n\r\n\r\n          })\r\n        })\r\n    }\r\n    fetchData();\r\n\r\n  }, []);\r\n\r\n\r\n  const generateQR = () => {\r\n    //qrcode.makeCode(qrdata);\r\n  };\r\n\r\n  return (\r\n    <IonPage>\r\n      {/* {      console.log(\"After rendering in filtered programmes are\" + JSON.stringify(filteredProgrammes))} */}\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonTitle>QRTest</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent fullscreen className=\"ion-padding\">\r\n        {/* <IonInput\r\n          value={qrdata}\r\n          type=\"text\"\r\n          id=\"qr-data\"\r\n          onIonChange={(e: any) => {\r\n            setQRdata(e.detail.value);\r\n          }}\r\n        ></IonInput> */}\r\n        <IonButton onClick={generateQR}> Generate QR </IonButton>\r\n        <div>\r\n          <QRCode value=\"ThomasLee@gmail.com,Thomas,Lee\" />{\" \"}\r\n        </div>\r\n\r\n        {/* <CreateClubAndCouncil /> */}\r\n        {/* <ViewClubAndCouncil categoryType=\"InternationalStudent\"></ViewClubAndCouncil> */}\r\n        {/* <ViewContactInfo></ViewContactInfo> */}\r\n        {/* <ViewProgrammeTalk date=\"21-Nov-2020\"></ViewProgrammeTalk> */}\r\n\r\n        {/* {programmes.map(({ programOverview = [], applicationPeriod = [], programmeStructure = [], overseaOpportunity = [], intakeMonths = [], duration = [] }) => {\r\n          return (\r\n            <div>\r\n              {programOverview.map((item) => {\r\n                return (\r\n                  <li>{item}</li>\r\n                )\r\n              })}\r\n              <li>Jan 2021 Intake: {applicationPeriod.jan2021}</li>\r\n              <li>Coursework: {programmeStructure.coursework ? 'Yes' : 'No'}</li>\r\n              <li>Examination: {programmeStructure.examination ? 'Yes' : 'No'}</li>\r\n              <li>Exchange: {overseaOpportunity.exchange ? 'Yes' : 'No'}</li>\r\n              <li>Transfer: {overseaOpportunity.transfer ? 'Yes' : 'No'}</li>\r\n              <li>Intake Months Part Time: {intakeMonths.partTime}</li>\r\n              <li>Duration Part Time: {duration.partTime}</li>\r\n              <br />\r\n            </div>\r\n          )\r\n\r\n        })\r\n        } */}\r\n\r\n        <IonButton color=\"tertiary\" onClick={() => { notifications.schedule(\"21-Nov-2020\", \"10:00AM\", \"UOW talk on ComScience\") }}>\r\n          Schedule Notification\r\n        </IonButton>\r\n\r\n        {/* <IonButton color=\"tertiary\" onClick={() => { notifications.requestPermission() }}>\r\n          Request Permission\r\n        </IonButton> */}\r\n\r\n        <p>Full time & Part time</p>\r\n        <IonCheckbox onIonChange={e => handleToggle(e.detail.value)} value='fullPartTime' checked={checkedFilter.indexOf('fullPartTime') === -1 ? false : true}></IonCheckbox>\r\n        <br />\r\n        <p>Full time</p>\r\n        <IonCheckbox onIonChange={e => handleToggle(e.detail.value)} value='fullTime' checked={checkedFilter.indexOf('fullTime') === -1 ? false : true}></IonCheckbox>\r\n        <br />\r\n        <p>Part time</p>\r\n        <IonCheckbox onIonChange={e => handleToggle(e.detail.value)} value='partTime' checked={checkedFilter.indexOf('partTime') === -1 ? false : true}></IonCheckbox>\r\n        <br />\r\n        {/* {console.log(\"Before mapping programmes: \" + filteredProgrammes)} */}\r\n        {Array.isArray(filteredProgrammes) && filteredProgrammes.length && filteredProgrammes.map((programme: any) => {\r\n          return (\r\n\r\n            <div key={programme.id}>\r\n              {/* {console.log(\"i am ID: \" + programme.id)} */}\r\n              <li>{programme.programmeTitle}</li>\r\n              <li>{programme.awardedBy}</li>\r\n              {/* <li>{programme.modeOfStudy.fullTime ? 'Full-Time' : ''}</li>\r\n              <li>{programme.modeOfStudy.partTime ? 'Part-Time' : ''}</li> */}\r\n              <br />\r\n            </div>\r\n          )\r\n        })}\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default VincentTest;\r\n"]},"metadata":{},"sourceType":"module"}