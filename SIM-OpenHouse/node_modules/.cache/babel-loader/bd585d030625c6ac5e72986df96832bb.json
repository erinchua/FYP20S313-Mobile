{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\components\\\\ProgTalkSchedule.tsx\";\nimport { IonGrid, IonRow, IonCol, IonButton, IonRouterLink, IonAlert } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport { db } from \"../firebase\";\nimport { toTalkSchedule } from '../openHouseProg';\nimport '../css/Global.css';\nimport '../css/ProgrammeTalks.css';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst ProgTalkSchedule = props => {\n  const [talks, setTalks] = useState([]);\n  useEffect(() => {\n    return db.collection('ProgrammesTalks').onSnapshot(({\n      docs\n    }) => setTalks(docs.map(toTalkSchedule)));\n  }, []);\n  console.log(talks);\n  {\n    /* Register Alert */\n  }\n  const [registerSuccess, setRegisterSuccess] = useState(false);\n  const [registerFail, setRegisterFail] = useState(false);\n\n  const displayRegisterAlert = () => {\n    {\n      /* Logic to check if there is another existing programme in My Schedule that is the same day & timing \r\n      of the programme the user wants to add*/\n    }\n    {\n      /* if (exist) {\r\n          setRegisterSuccess(true);\r\n          setRegisterFail(false);\r\n      } else {\r\n          setRegisterFail(true);\r\n         setRegisterSuccess(false);\r\n      } */\n    }\n    {\n      /* set state to disable the + btn in else {} */\n    }\n  };\n\n  const [programmeTalkDay1, setProgrammeTalkDay1] = useState([]);\n  const [programmeTalkDay2, setProgrammeTalkDay2] = useState([]);\n  useEffect(() => {\n    db.collection(\"ProgrammeTalks\").where(\"date\", \"==\", \"21-Nov-2020\").get().then(snapshot => {\n      const programmeTalk = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        programmeTalk.push(data);\n      });\n      setProgrammeTalkDay1(programmeTalk);\n    }).catch(error => console.log(error));\n    db.collection(\"ProgrammeTalks\").where(\"date\", \"==\", \"22-Nov-2020\").get().then(snapshot => {\n      const programmeTalk = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        programmeTalk.push(data);\n      });\n      setProgrammeTalkDay2(programmeTalk);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: registerSuccess,\n    onDidDismiss: () => setRegisterSuccess(false),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    header: 'Successfully Registered',\n    message: 'You have successfully registered for the programme talk and it has been successfully added to My Schedule.',\n    buttons: ['Close'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: registerFail,\n    onDidDismiss: () => setRegisterFail(false),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    header: 'Registration Unsuccessful',\n    message: 'There exists an open house programme in your scheduler at this timing. Please remove the existing programme from your scheduler first!',\n    buttons: ['Close'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"progTalk-TableGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-justify-content-center progTalk-TableHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    \"size-sizeSm\": \"3\",\n    className: \"progTalk-Data ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Programme Talk\"), /*#__PURE__*/React.createElement(IonCol, {\n    \"size-sizeSm\": \"3\",\n    className: \"progTalk-Data ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Awarding University\"), /*#__PURE__*/React.createElement(IonCol, {\n    \"size-sizeSm\": \"2\",\n    className: \"progTalk-Data ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(IonCol, {\n    \"size-sizeSm\": \"2\",\n    className: \"progTalk-Data ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Venue\"), /*#__PURE__*/React.createElement(IonCol, {\n    \"size-sizeSm\": \"2\",\n    className: \"progTalk-Data ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"Add to My Schedule\")), props.day1 === 'day1' ? programmeTalkDay1.map(programmeTalk => {\n    return /*#__PURE__*/React.createElement(IonRow, {\n      className: \"ion-justify-content-center\",\n      id: \"progTalk-DataRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      \"size-sizeSm\": \"3\",\n      className: \"progTalk-Data progTalk-DataInfo ion-text-wrap progName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IonRouterLink, {\n      href: \"progTalkInfo\",\n      id: \"uniLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }, programmeTalk.talkName)), /*#__PURE__*/React.createElement(IonCol, {\n      \"size-sizeSm\": \"3\",\n      className: \"progTalk-Data progTalk-DataInfo ion-text-wrap\",\n      id: \"awardingUni\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, programmeTalk.awardingUni, \" \"), /*#__PURE__*/React.createElement(IonCol, {\n      \"size-sizeSm\": \"2\",\n      className: \"progTalk-Data progTalk-DataInfo ion-text-wrap\",\n      id: \"talkTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, programmeTalk.startTime + \" to \" + programmeTalk.endTime), /*#__PURE__*/React.createElement(IonCol, {\n      \"size-sizeSm\": \"2\",\n      className: \"progTalk-Data progTalk-DataInfo ion-text-wrap\",\n      id: \"talkVenue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, programmeTalk.venue), /*#__PURE__*/React.createElement(IonCol, {\n      \"size-sizeSm\": \"2\",\n      className: \"progTalk-Data progTalk-DataInfo ion-text-wrap\",\n      id: \"addCol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IonButton, {\n      className: \"progTalk-DataBtn\",\n      id: \"addBtn\",\n      size: \"small\",\n      style: {\n        marginTop: \"-5%\",\n        marginBottom: \"-5%\"\n      },\n      onClick: displayRegisterAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    }))));\n  }) : '', props.day2 === 'day2' ? programmeTalkDay2.map(programmeTalk => {\n    return /*#__PURE__*/React.createElement(IonRow, {\n      className: \"ion-justify-content-center\",\n      id: \"progTalk-DataRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      \"size-sizeSm\": \"3\",\n      className: \"progTalk-Data progTalk-DataInfo ion-text-wrap progName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IonRouterLink, {\n      href: \"ProgTalkInfo\",\n      id: \"uniLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, programmeTalk.talkName)), /*#__PURE__*/React.createElement(IonCol, {\n      \"size-sizeSm\": \"3\",\n      className: \"progTalk-Data progTalk-DataInfo ion-text-wrap\",\n      id: \"awardingUni\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, programmeTalk.awardingUni), /*#__PURE__*/React.createElement(IonCol, {\n      \"size-sizeSm\": \"2\",\n      className: \"progTalk-Data progTalk-DataInfo ion-text-wrap\",\n      id: \"talkTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    }, programmeTalk.startTime + \" to \" + programmeTalk.endTime), /*#__PURE__*/React.createElement(IonCol, {\n      \"size-sizeSm\": \"2\",\n      className: \"progTalk-Data progTalk-DataInfo ion-text-wrap\",\n      id: \"talkVenue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, programmeTalk.venue), /*#__PURE__*/React.createElement(IonCol, {\n      \"size-sizeSm\": \"2\",\n      className: \"progTalk-Data progTalk-DataInfo ion-text-wrap\",\n      id: \"addCol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IonButton, {\n      className: \"progTalk-DataBtn\",\n      id: \"addBtn\",\n      size: \"small\",\n      style: {\n        marginTop: \"-5%\",\n        marginBottom: \"-5%\"\n      },\n      onClick: displayRegisterAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 41\n      }\n    }))));\n  }) : ''));\n};\n\nexport default ProgTalkSchedule;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/components/ProgTalkSchedule.tsx"],"names":["IonGrid","IonRow","IonCol","IonButton","IonRouterLink","IonAlert","React","useEffect","useState","db","toTalkSchedule","faPlus","FontAwesomeIcon","ProgTalkSchedule","props","talks","setTalks","collection","onSnapshot","docs","map","console","log","registerSuccess","setRegisterSuccess","registerFail","setRegisterFail","displayRegisterAlert","programmeTalkDay1","setProgrammeTalkDay1","programmeTalkDay2","setProgrammeTalkDay2","where","get","then","snapshot","programmeTalk","forEach","doc","data","push","catch","error","day1","talkName","awardingUni","startTime","endTime","venue","marginTop","marginBottom","day2"],"mappings":"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","sourcesContent":["import { IonGrid, IonRow, IonCol, IonButton, IonRouterLink, IonAlert } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { auth, db } from \"../firebase\";\r\nimport { TalkSchedule, toTalkSchedule } from '../openHouseProg';\r\n\r\nimport '../css/Global.css';\r\nimport '../css/ProgrammeTalks.css'\r\n\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst ProgTalkSchedule: React.FC<{ day1: any; day2: any; }> = props => {\r\n    const [talks, setTalks] = useState<TalkSchedule[]>([]);\r\n\r\n    useEffect(() => {\r\n        return db.collection('ProgrammesTalks').onSnapshot(({ docs }) => setTalks(docs.map(toTalkSchedule)));\r\n    }, []);\r\n\r\n    console.log(talks);\r\n\r\n    {/* Register Alert */}\r\n    const [registerSuccess, setRegisterSuccess] = useState(false);\r\n    const [registerFail, setRegisterFail] = useState(false);\r\n\r\n    const displayRegisterAlert = () => {\r\n        {/* Logic to check if there is another existing programme in My Schedule that is the same day & timing \r\n         of the programme the user wants to add*/}\r\n        \r\n        {/* if (exist) {\r\n             setRegisterSuccess(true);\r\n             setRegisterFail(false);\r\n         } else {\r\n             setRegisterFail(true);\r\n            setRegisterSuccess(false);\r\n        } */}\r\n\r\n        {/* set state to disable the + btn in else {} */}\r\n    };\r\n            \r\n\r\n\r\n    const [programmeTalkDay1, setProgrammeTalkDay1] = useState<any[]>([]);\r\n    const [programmeTalkDay2, setProgrammeTalkDay2] = useState<any[]>([]);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"ProgrammeTalks\")\r\n            .where(\"date\", \"==\", \"21-Nov-2020\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                const programmeTalk: any = [];\r\n                snapshot.forEach((doc) => {\r\n                    const data = doc.data();\r\n                    programmeTalk.push(data);\r\n                });\r\n                setProgrammeTalkDay1(programmeTalk);\r\n            })\r\n            .catch((error) => console.log(error));\r\n\r\n        db.collection(\"ProgrammeTalks\")\r\n            .where(\"date\", \"==\", \"22-Nov-2020\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                const programmeTalk: any = [];\r\n                snapshot.forEach((doc) => {\r\n                    const data = doc.data();\r\n                    programmeTalk.push(data);\r\n                });\r\n                setProgrammeTalkDay2(programmeTalk);\r\n            })\r\n            .catch((error) => console.log(error));\r\n\r\n    }, []);\r\n    return (\r\n        <>\r\n            <IonAlert\r\n                isOpen={registerSuccess}\r\n                onDidDismiss={() => setRegisterSuccess(false)}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Successfully Registered'}\r\n                message={'You have successfully registered for the programme talk and it has been successfully added to My Schedule.'}\r\n                buttons={['Close']}\r\n             ></IonAlert>\r\n\r\n            <IonAlert\r\n                isOpen={registerFail}\r\n                onDidDismiss={() => setRegisterFail(false)}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Registration Unsuccessful'}\r\n                message={'There exists an open house programme in your scheduler at this timing. Please remove the existing programme from your scheduler first!'}\r\n                buttons={['Close']}\r\n             ></IonAlert>\r\n\r\n            <IonGrid className=\"progTalk-TableGrid\">\r\n                <IonRow className=\"ion-justify-content-center progTalk-TableHeader\">\r\n                    <IonCol size-sizeSm=\"3\" className=\"progTalk-Data ion-text-wrap\">Programme Talk</IonCol>\r\n                    <IonCol size-sizeSm=\"3\" className=\"progTalk-Data ion-text-wrap\">Awarding University</IonCol>\r\n                    <IonCol size-sizeSm=\"2\" className=\"progTalk-Data ion-text-wrap\">Time</IonCol>\r\n                    <IonCol size-sizeSm=\"2\" className=\"progTalk-Data ion-text-wrap\">Venue</IonCol>\r\n                    <IonCol size-sizeSm=\"2\" className=\"progTalk-Data ion-text-wrap\">Add to My Schedule</IonCol>\r\n                </IonRow>\r\n\r\n                {props.day1 === 'day1' ?\r\n                    programmeTalkDay1.map((programmeTalk: any) => {\r\n                        return (\r\n                            <IonRow className=\"ion-justify-content-center\" id=\"progTalk-DataRow\">\r\n                                <IonCol size-sizeSm=\"3\" className=\"progTalk-Data progTalk-DataInfo ion-text-wrap progName\">\r\n                                    <IonRouterLink href=\"progTalkInfo\" id=\"uniLink\" >\r\n                                        {programmeTalk.talkName}\r\n                                    </IonRouterLink>\r\n                                </IonCol>\r\n\r\n                                <IonCol size-sizeSm=\"3\" className=\"progTalk-Data progTalk-DataInfo ion-text-wrap\" id=\"awardingUni\">{programmeTalk.awardingUni} </IonCol>\r\n                                <IonCol size-sizeSm=\"2\" className=\"progTalk-Data progTalk-DataInfo ion-text-wrap\" id=\"talkTime\">{programmeTalk.startTime + \" to \" + programmeTalk.endTime}</IonCol>\r\n                                <IonCol size-sizeSm=\"2\" className=\"progTalk-Data progTalk-DataInfo ion-text-wrap\" id=\"talkVenue\">{programmeTalk.venue}</IonCol>\r\n                                <IonCol size-sizeSm=\"2\" className=\"progTalk-Data progTalk-DataInfo ion-text-wrap\" id=\"addCol\">\r\n                                    <IonButton className=\"progTalk-DataBtn\" id=\"addBtn\" size=\"small\" style={{ marginTop: \"-5%\", marginBottom: \"-5%\" }} onClick={displayRegisterAlert}>\r\n                                        <FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        )\r\n                    })\r\n                    : ''}\r\n\r\n\r\n\r\n                {props.day2 === 'day2' ?\r\n                    programmeTalkDay2.map((programmeTalk: any) => {\r\n                        return (\r\n                            <IonRow className=\"ion-justify-content-center\" id=\"progTalk-DataRow\">\r\n                                <IonCol size-sizeSm=\"3\" className=\"progTalk-Data progTalk-DataInfo ion-text-wrap progName\">\r\n                                    <IonRouterLink href=\"ProgTalkInfo\" id=\"uniLink\">\r\n                                        {programmeTalk.talkName}\r\n                                    </IonRouterLink>\r\n                                </IonCol>\r\n\r\n                                <IonCol size-sizeSm=\"3\" className=\"progTalk-Data progTalk-DataInfo ion-text-wrap\" id=\"awardingUni\">{programmeTalk.awardingUni}</IonCol>\r\n                                <IonCol size-sizeSm=\"2\" className=\"progTalk-Data progTalk-DataInfo ion-text-wrap\" id=\"talkTime\">{programmeTalk.startTime + \" to \" + programmeTalk.endTime}</IonCol>\r\n                                <IonCol size-sizeSm=\"2\" className=\"progTalk-Data progTalk-DataInfo ion-text-wrap\" id=\"talkVenue\">{programmeTalk.venue}</IonCol>\r\n                                <IonCol size-sizeSm=\"2\" className=\"progTalk-Data progTalk-DataInfo ion-text-wrap\" id=\"addCol\">\r\n                                    <IonButton className=\"progTalk-DataBtn\" id=\"addBtn\" size=\"small\" style={{ marginTop: \"-5%\", marginBottom: \"-5%\" }} onClick={displayRegisterAlert}>\r\n                                        <FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>)\r\n                    }) : ''\r\n                }\r\n            </IonGrid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProgTalkSchedule;"]},"metadata":{},"sourceType":"module"}