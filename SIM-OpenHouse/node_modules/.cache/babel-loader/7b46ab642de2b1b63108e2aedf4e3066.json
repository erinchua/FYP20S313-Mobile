{"ast":null,"code":"import _slicedToArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{IonButton,IonButtons,IonCol,IonContent,IonGrid,IonHeader,IonPage,IonRow,IonSegment,IonSegmentButton,IonToolbar}from\"@ionic/react\";import React,{useState}from\"react\";import{withRouter}from\"react-router-dom\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faFilter}from\"@fortawesome/free-solid-svg-icons\";import\"../css/Global.css\";import\"../css/ProgrammeTalks.css\";import TopNav from\"../components/TopNav\";import ProgTalkSchedule from\"../components/ProgTalkSchedule\";import ProgTalkLiveTalks from\"../components/ProgTalkLiveTalks\";import ProgTalkPastRec from\"../components/ProgTalkPastRec\";var ProgrammeTalks=function ProgrammeTalks(){var _useState=useState(\"schedule\"),_useState2=_slicedToArray(_useState,2),tab=_useState2[0],setTab=_useState2[1];var _useState3=useState(\"day1\"),_useState4=_slicedToArray(_useState3,2),dayNum=_useState4[0],setDayNum=_useState4[1];// useEffect (() => {\n//     handleSchedule();\n// }, []);\nvar handleDayOne=function handleDayOne(){setDayNum(\"day1\");};var handleDayTwo=function handleDayTwo(){setDayNum(\"day2\");};var handleSchedule=function handleSchedule(){setTab(\"schedule\");};var handleLiveTalks=function handleLiveTalks(){setTab(\"liveTalks\");};var handlePastRec=function handlePastRec(){setTab(\"pastRecordings\");};return/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(TopNav,{title:\"Programme Talks\",route:\"/u/openHouseMain\",backarrow:true,hamburger:true}),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true,className:\"progTalkIonContent\"},/*#__PURE__*/React.createElement(IonGrid,{id:\"progTalksGrid\"},/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonHeader,{className:\"segmentHeader\"},/*#__PURE__*/React.createElement(IonToolbar,{className:\"segmentHeader\"},/*#__PURE__*/React.createElement(IonSegment,{scrollable:true,value:tab,className:\"segmentHeader\"},/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"schedule\",className:\"segmentBtn ion-text-wrap\",id:\"progTalkSchedule\",onClick:handleSchedule},\"Schedule\"),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"liveTalks\",className:\"segmentBtn ion-text-wrap\",id:\"progTalkLiveTalk\",onClick:handleLiveTalks},\"Live Talks\"),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"pastRecordings\",className:\"segmentBtn ion-text-wrap\",id:\"progTalkPastRec\",onClick:handlePastRec},\"Past Recordings\")))))),tab===\"schedule\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IonGrid,{className:\"progTalk-IonRowCol progTalkIonGrid\"},/*#__PURE__*/React.createElement(IonRow,{className:\"progTalk-IonRowCol\"},/*#__PURE__*/React.createElement(IonCol,{className:\"progTalk-IonRowCol\"},/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonSegment,{scrollable:true,value:dayNum,onIonChange:function onIonChange(e){return console.log(\"\".concat(e.detail.value));}},/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day1\",onClick:function onClick(){return handleDayOne();},className:\"progTalk-DayTab\"},\"Day 1: 21 Nov 2020\"),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day2\",onClick:function onClick(){return handleDayTwo();},className:\"progTalk-DayTab\"},\"Day 2: 22 Nov 2020\"))))),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonHeader,{className:\"filterHeader\"},/*#__PURE__*/React.createElement(IonToolbar,{className:\"filterHeaderToolBar\"},/*#__PURE__*/React.createElement(IonButtons,{slot:\"end\",id:\"filterIcon\"},/*#__PURE__*/React.createElement(IonButton,null,/*#__PURE__*/React.createElement(FontAwesomeIcon,{size:\"lg\",icon:faFilter}))))))),/*#__PURE__*/React.createElement(ProgTalkSchedule,{day1:dayNum,day2:dayNum})):\"\",tab===\"liveTalks\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IonGrid,{className:\"progTalk-IonRowCol progTalkIonGrid\"},/*#__PURE__*/React.createElement(IonRow,{className:\"progTalk-IonRowCol\"},/*#__PURE__*/React.createElement(IonCol,{className:\"progTalk-IonRowCol\"},/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonSegment,{scrollable:true,value:dayNum,onIonChange:function onIonChange(e){return console.log(\"\".concat(e.detail.value));}},/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day1\",onClick:function onClick(){return handleDayOne();},className:\"progTalk-DayTab\"},\"Day 1: 21 Nov 2020\"),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day2\",onClick:function onClick(){return handleDayTwo();},className:\"progTalk-DayTab\"},\"Day 2: 22 Nov 2020\")))))),/*#__PURE__*/React.createElement(ProgTalkLiveTalks,{day1:dayNum,day2:dayNum})):\"\",tab===\"pastRecordings\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IonGrid,{className:\"progTalk-IonRowCol progTalkIonGrid\"},/*#__PURE__*/React.createElement(IonRow,{className:\"progTalk-IonRowCol\"},/*#__PURE__*/React.createElement(IonCol,{className:\"progTalk-IonRowCol\"},/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonSegment,{scrollable:true,value:dayNum,onIonChange:function onIonChange(e){return console.log(\"\".concat(e.detail.value));}},/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day1\",onClick:function onClick(){return handleDayOne();},className:\"progTalk-DayTab\"},\"Day 1: 21 Nov 2020\"),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day2\",onClick:function onClick(){return handleDayTwo();},className:\"progTalk-DayTab\"},\"Day 2: 22 Nov 2020\"))))),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonHeader,{className:\"filterHeader\"},/*#__PURE__*/React.createElement(IonToolbar,{className:\"filterHeaderToolBar\"},/*#__PURE__*/React.createElement(IonButtons,{slot:\"end\",id:\"filterIcon\"},/*#__PURE__*/React.createElement(IonButton,null,/*#__PURE__*/React.createElement(FontAwesomeIcon,{size:\"lg\",icon:faFilter}))))))),/*#__PURE__*/React.createElement(ProgTalkPastRec,{day1:dayNum,day2:dayNum})):\"\"));};export default withRouter(ProgrammeTalks);","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/ProgrammeTalks.tsx"],"names":["IonButton","IonButtons","IonCol","IonContent","IonGrid","IonHeader","IonPage","IonRow","IonSegment","IonSegmentButton","IonToolbar","React","useState","withRouter","FontAwesomeIcon","faFilter","TopNav","ProgTalkSchedule","ProgTalkLiveTalks","ProgTalkPastRec","ProgrammeTalks","tab","setTab","dayNum","setDayNum","handleDayOne","handleDayTwo","handleSchedule","handleLiveTalks","handlePastRec","e","console","log","detail","value"],"mappings":"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","sourcesContent":["import { IonButton, IonButtons, IonCol, IonContent, IonGrid, IonHeader, IonImg, IonPage, IonRouterLink, IonRow, IonSegment, IonSegmentButton, IonText, IonTitle, IonToolbar } from \"@ionic/react\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFilter } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"../css/Global.css\";\r\nimport \"../css/ProgrammeTalks.css\";\r\n\r\nimport TopNav from \"../components/TopNav\";\r\nimport ProgTalkSchedule from \"../components/ProgTalkSchedule\";\r\nimport ProgTalkLiveTalks from \"../components/ProgTalkLiveTalks\";\r\nimport ProgTalkPastRec from \"../components/ProgTalkPastRec\";\r\n\r\nconst ProgrammeTalks: React.FC = () => {\r\n  const [tab, setTab] = useState(\"schedule\");\r\n  const [dayNum, setDayNum] = useState(\"day1\");\r\n\r\n  // useEffect (() => {\r\n  //     handleSchedule();\r\n  // }, []);\r\n\r\n  const handleDayOne = () => {\r\n    setDayNum(\"day1\");\r\n  };\r\n\r\n  const handleDayTwo = () => {\r\n    setDayNum(\"day2\");\r\n  };\r\n\r\n  const handleSchedule = () => {\r\n    setTab(\"schedule\");\r\n  };\r\n  const handleLiveTalks = () => {\r\n    setTab(\"liveTalks\");\r\n  };\r\n\r\n  const handlePastRec = () => {\r\n    setTab(\"pastRecordings\");\r\n  };\r\n\r\n  return (\r\n    <IonPage>\r\n      <TopNav title=\"Programme Talks\" route=\"/u/openHouseMain\" backarrow={true} hamburger={true} />\r\n\r\n      <IonContent fullscreen className=\"progTalkIonContent\">\r\n        <IonGrid id=\"progTalksGrid\">\r\n          <IonRow>\r\n            <IonHeader className=\"segmentHeader\">\r\n              <IonToolbar className=\"segmentHeader\">\r\n                <IonSegment scrollable value={tab} className=\"segmentHeader\">\r\n                  <IonSegmentButton value=\"schedule\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkSchedule\" onClick={handleSchedule}>\r\n                    Schedule\r\n                  </IonSegmentButton>\r\n                  <IonSegmentButton value=\"liveTalks\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkLiveTalk\" onClick={handleLiveTalks}>\r\n                    Live Talks\r\n                  </IonSegmentButton>\r\n                  <IonSegmentButton value=\"pastRecordings\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkPastRec\" onClick={handlePastRec}>\r\n                    Past Recordings\r\n                  </IonSegmentButton>\r\n                </IonSegment>\r\n              </IonToolbar>\r\n            </IonHeader>\r\n          </IonRow>\r\n        </IonGrid>\r\n\r\n        {/* Programme Talks Schedule */}\r\n        {tab === \"schedule\" ? (\r\n          <>\r\n            <IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n              <IonRow className=\"progTalk-IonRowCol\">\r\n                <IonCol className=\"progTalk-IonRowCol\">\r\n                  <IonToolbar>\r\n                    <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                      <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n                        Day 1: 21 Nov 2020\r\n                      </IonSegmentButton>\r\n                      <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n                        Day 2: 22 Nov 2020\r\n                      </IonSegmentButton>\r\n                    </IonSegment>\r\n                  </IonToolbar>\r\n                </IonCol>\r\n              </IonRow>\r\n\r\n              <IonRow>\r\n                <IonHeader className=\"filterHeader\">\r\n                  <IonToolbar className=\"filterHeaderToolBar\">\r\n                    <IonButtons slot=\"end\" id=\"filterIcon\">\r\n                      <IonButton>\r\n                        <FontAwesomeIcon size=\"lg\" icon={faFilter} />\r\n                      </IonButton>\r\n                    </IonButtons>\r\n                  </IonToolbar>\r\n                </IonHeader>\r\n              </IonRow>\r\n            </IonGrid>\r\n\r\n            <ProgTalkSchedule day1={dayNum} day2={dayNum} />\r\n          </>\r\n        ) : (\r\n            \"\"\r\n          )}\r\n\r\n        {/* Live Talks */}\r\n        {tab === \"liveTalks\" ? (\r\n          <>\r\n            <IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n              <IonRow className=\"progTalk-IonRowCol\">\r\n                <IonCol className=\"progTalk-IonRowCol\">\r\n                  <IonToolbar>\r\n                    <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                      <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n                        Day 1: 21 Nov 2020\r\n                      </IonSegmentButton>\r\n                      <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n                        Day 2: 22 Nov 2020\r\n                      </IonSegmentButton>\r\n                    </IonSegment>\r\n                  </IonToolbar>\r\n                </IonCol>\r\n              </IonRow>\r\n            </IonGrid>\r\n\r\n            <ProgTalkLiveTalks day1={dayNum} day2={dayNum} />\r\n          </>\r\n        ) : (\r\n            \"\"\r\n          )}\r\n\r\n        {/* Past Recordings */}\r\n        {tab === \"pastRecordings\" ? (\r\n          <>\r\n            <IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n              <IonRow className=\"progTalk-IonRowCol\">\r\n                <IonCol className=\"progTalk-IonRowCol\">\r\n                  <IonToolbar>\r\n                    <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                      <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">\r\n                        Day 1: 21 Nov 2020\r\n                      </IonSegmentButton>\r\n                      <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">\r\n                        Day 2: 22 Nov 2020\r\n                      </IonSegmentButton>\r\n                    </IonSegment>\r\n                  </IonToolbar>\r\n                </IonCol>\r\n              </IonRow>\r\n\r\n              <IonRow>\r\n                <IonHeader className=\"filterHeader\">\r\n                  <IonToolbar className=\"filterHeaderToolBar\">\r\n                    <IonButtons slot=\"end\" id=\"filterIcon\">\r\n                      <IonButton>\r\n                        <FontAwesomeIcon size=\"lg\" icon={faFilter} />\r\n                      </IonButton>\r\n                    </IonButtons>\r\n                  </IonToolbar>\r\n                </IonHeader>\r\n              </IonRow>\r\n            </IonGrid>\r\n\r\n            <ProgTalkPastRec day1={dayNum} day2={dayNum} />\r\n          </>\r\n        ) : (\r\n            \"\"\r\n          )}\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProgrammeTalks);\r\n"]},"metadata":{},"sourceType":"module"}