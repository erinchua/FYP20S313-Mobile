{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\MySchedule.tsx\";\nimport { IonCol, IonContent, IonGrid, IonHeader, IonLoading, IonPage, IonRow, IonSegment, IonSegmentButton } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport '../css/Global.css';\nimport '../css/MySchedule.css';\nimport TopNav from '../components/TopNav';\nimport MyScheduleContent from '../components/MyScheduleContent';\nimport { db } from '../firebase';\nimport { useAuth } from '../modules/auth';\nimport { toSchedule } from '../modules/map';\n\nconst MySchedule = () => {\n  const {\n    userID\n  } = useAuth();\n  const [studentDetails, setStudentDetails] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [dayNum, setDayNum] = useState(\"day1\");\n  const [openhouseDates, setOpenhouseDates] = useState([]);\n  const [openHouseProgs, setOpenHouseProgs] = useState([]);\n\n  const handleDayOne = () => {\n    setDayNum(\"day1\");\n  };\n\n  const handleDayTwo = () => {\n    setDayNum(\"day2\");\n  };\n\n  useEffect(() => {\n    db.collection('Openhouse').get().then(snapshot => {\n      const dates = [];\n      snapshot.forEach(doc => {\n        const data = doc.get('day');\n\n        for (let i = 0; i < Object.keys(data).length; i++) {\n          const day = data[Object.keys(data)[i]];\n          dates.push(day.date);\n        }\n      });\n      setOpenhouseDates(dates);\n    }).catch(error => console.log(error));\n\n    const fetchStudent = async () => {\n      const studRef = db.collection('Students').doc(userID);\n      const doc = await studRef.get();\n      studentDetails.push(doc.data());\n    };\n\n    fetchStudent();\n    db.collection('Students').doc(userID).get().then(snapshot => setStudentDetails(snapshot.data()));\n    const scheduleProgs = [];\n    db.collection('PersonalScheduler').doc(userID).get().then(snapshot => {\n      const registered = snapshot.data().registeredProgrammes;\n\n      if (registered) {\n        registered.forEach(async item => {\n          const itemType = item.split(\"-\");\n\n          switch (itemType[0]) {\n            case \"talk\":\n              await db.collection('ProgrammeTalks').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\n              break;\n\n            case \"tour\":\n              await db.collection('GuidedTours').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\n              break;\n\n            case \"performance\":\n              await db.collection('Performances').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\n              break;\n\n            case \"activity\":\n              await db.collection('GamesActivities').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\n              break;\n\n            default:\n          }\n        });\n      }\n    });\n    setTimeout(() => {\n      setOpenHouseProgs(scheduleProgs.map(toSchedule));\n      setLoading(false);\n    }, 800);\n  }, []);\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"My Schedule\",\n    route: \"/u/home\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"myScheduleIonContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"myScheduleGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-justify-content-center openHouseDateRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    sizeSm: \"6\",\n    className: \"openHouseDateCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateTitleText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, \"From: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, openhouseDates[0])), /*#__PURE__*/React.createElement(IonCol, {\n    sizeSm: \"6\",\n    className: \"openHouseDateCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateTitleText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, \"To: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, openhouseDates[1]))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"mySchedule-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    sizeSm: \"12\",\n    style: {\n      padding: \"0\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    onIonChange: e => console.log(`${e.detail.value}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"mySchedule-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, \"Day 1: \", openhouseDates[0]), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"mySchedule-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, \"Day 2: \", openhouseDates[1]))))), /*#__PURE__*/React.createElement(MyScheduleContent, {\n    day1: dayNum,\n    day2: dayNum,\n    openhouseDates: openhouseDates,\n    openHouseProgs: openHouseProgs,\n    studentDetails: studentDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IonLoading, {\n    isOpen: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default MySchedule;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/MySchedule.tsx"],"names":["IonCol","IonContent","IonGrid","IonHeader","IonLoading","IonPage","IonRow","IonSegment","IonSegmentButton","React","useEffect","useState","TopNav","MyScheduleContent","db","useAuth","toSchedule","MySchedule","userID","studentDetails","setStudentDetails","loading","setLoading","dayNum","setDayNum","openhouseDates","setOpenhouseDates","openHouseProgs","setOpenHouseProgs","handleDayOne","handleDayTwo","collection","get","then","snapshot","dates","forEach","doc","data","i","Object","keys","length","day","push","date","catch","error","console","log","fetchStudent","studRef","scheduleProgs","registered","registeredProgrammes","item","itemType","split","setTimeout","map","padding","width","e","detail","value"],"mappings":"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","sourcesContent":["import { IonCol, IonContent, IonGrid, IonHeader, IonLoading, IonPage, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport '../css/Global.css';\r\nimport '../css/MySchedule.css';\r\nimport TopNav from '../components/TopNav';\r\nimport MyScheduleContent from '../components/MyScheduleContent';\r\nimport { db } from '../firebase';\r\nimport { useAuth } from '../modules/auth';\r\nimport { ScheduleItem, toSchedule } from '../modules/map';\r\n\r\nconst MySchedule: React.FC = () => {\r\n    const { userID } = useAuth();\r\n    const [studentDetails, setStudentDetails]: any = useState([]);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [dayNum, setDayNum] = useState(\"day1\");\r\n    const [openhouseDates, setOpenhouseDates] = useState([]);\r\n    const [openHouseProgs, setOpenHouseProgs] = useState<ScheduleItem[]>([]);\r\n\r\n    const handleDayOne = () => {\r\n        setDayNum(\"day1\");\r\n    };\r\n\r\n    const handleDayTwo = () => {\r\n        setDayNum(\"day2\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        db.collection('Openhouse').get().then(snapshot => {\r\n            const dates: any = [];\r\n\r\n            snapshot.forEach(doc => {\r\n                const data = doc.get('day');\r\n\r\n                for (let i = 0; i < Object.keys(data).length; i++) {\r\n                    const day = data[Object.keys(data)[i]];\r\n                    dates.push(day.date);\r\n                }\r\n            });\r\n\r\n            setOpenhouseDates(dates);\r\n        }).catch((error) => console.log(error));\r\n\r\n        const fetchStudent = async () => {\r\n            const studRef = db.collection('Students').doc(userID)\r\n            const doc = await studRef.get()\r\n            studentDetails.push(doc.data())\r\n        }\r\n\r\n        fetchStudent();\r\n\r\n        db.collection('Students').doc(userID).get().then(snapshot => setStudentDetails(snapshot.data()));\r\n\r\n        const scheduleProgs: any = [];\r\n        db.collection('PersonalScheduler').doc(userID).get().then((snapshot: any) => {\r\n            const registered = snapshot.data().registeredProgrammes;\r\n\r\n            if (registered) {\r\n                registered.forEach(async (item: any) => {\r\n                    const itemType = item.split(\"-\");\r\n\r\n                    switch (itemType[0]) {\r\n                        case \"talk\":\r\n                            await db.collection('ProgrammeTalks').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\r\n                            break;\r\n                        case \"tour\":\r\n                            await db.collection('GuidedTours').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\r\n                            break;\r\n                        case \"performance\":\r\n                            await db.collection('Performances').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\r\n                            break;\r\n                        case \"activity\":\r\n                            await db.collection('GamesActivities').doc(item).get().then(doc => scheduleProgs.push(doc.data()));\r\n                            break;\r\n                        default:\r\n                    }\r\n                });\r\n            }\r\n        });\r\n            \r\n        setTimeout(() => {\r\n            setOpenHouseProgs(scheduleProgs.map(toSchedule));\r\n            setLoading(false);\r\n        }, 800);\r\n    }, []);\r\n\r\n    return (\r\n        <IonPage>\r\n            {/* {console.log(\"student details are\" + JSON.stringify(studentDetails))} */}\r\n            <IonHeader>\r\n                <TopNav title=\"My Schedule\" route='/u/home' backarrow={true} hamburger={true} />\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen={true} className=\"myScheduleIonContent\">\r\n                <IonGrid className=\"myScheduleGrid\">\r\n                    <IonRow className=\"ion-justify-content-center openHouseDateRow\">\r\n                        <IonCol sizeSm=\"6\" className=\"openHouseDateCol\">\r\n                            <span className=\"openHouseDateTitleText\">From: </span>\r\n                            <span className=\"openHouseDateText\">{openhouseDates[0]}</span>\r\n                        </IonCol>\r\n                        <IonCol sizeSm=\"6\" className=\"openHouseDateCol\">\r\n                            <span className=\"openHouseDateTitleText\">To: </span>\r\n                            <span className=\"openHouseDateText\">{openhouseDates[1]}</span>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow className=\"mySchedule-IonRowCol\">\r\n                        <IonCol sizeSm=\"12\" style={{ padding: \"0\", width: \"100%\" }}>\r\n                            <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                                <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"mySchedule-DayTab\">\r\n                                    Day 1: {openhouseDates[0]}\r\n                                </IonSegmentButton>\r\n\r\n                                <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"mySchedule-DayTab\">\r\n                                    Day 2: {openhouseDates[1]}\r\n                                </IonSegmentButton>\r\n                            </IonSegment>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <MyScheduleContent day1={dayNum} day2={dayNum} openhouseDates={openhouseDates} openHouseProgs={openHouseProgs} studentDetails={studentDetails} />\r\n                <IonLoading isOpen={loading} />\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default MySchedule;"]},"metadata":{},"sourceType":"module"}