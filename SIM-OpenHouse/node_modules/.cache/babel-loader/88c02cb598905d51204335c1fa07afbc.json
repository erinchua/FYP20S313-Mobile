{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\UsefulInfo\\\\CommonFaqs.tsx\";\nimport { IonButton, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonPage, IonRow, IonSegment, IonSegmentButton, IonTitle, IonToolbar } from '@ionic/react';\nimport React, { useRef, useState, useEffect } from 'react';\nimport { addCircle, removeCircle } from 'ionicons/icons';\nimport '../../css/Global.css';\nimport '../../css/CommonFaqs.css';\nimport TopNav from '../../components/TopNav';\nimport { db } from '../../firebase';\n\nconst CommonFaqs = () => {\n  const [tab, setTab] = useState(\"openHouseFAQs\");\n  const [faqs, setFaqs] = useState({\n    openhouse: [],\n    general: []\n  });\n\n  const handleOpenHouseFAQs = () => {\n    setTab(\"openHouseFAQs\");\n  };\n\n  const handleGeneralFAQs = () => {\n    setTab(\"generalFAQs\");\n  };\n\n  const info = useRef([]);\n  const showIcon = useRef(null);\n  info.current = [];\n\n  const displayInfoCol = index => {\n    info.current[index].hidden = !info.current[index].hidden;\n    if (showIcon.current.icon === addCircle) showIcon.current.icon = removeCircle;else showIcon.current.icon = addCircle;\n  }; //Adding each answer into their own ref.\n\n\n  const addtoRef = el => {\n    if (el && !info.current.includes(el)) info.current.push(el);\n  };\n\n  useEffect(() => {\n    db.collection('CommonFAQ').get().then(snapshot => {\n      const openhouse = [];\n      const general = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        if (data.faqType === \"Openhouse\") openhouse.push(data);else general.push(data);\n      });\n      setFaqs({\n        openhouse: openhouse,\n        general: general\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Common FAQs\",\n    route: \"/u/usefulInfoMain\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IonToolbar, {\n    className: \"faqSegmentHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: tab,\n    className: \"faqSegmentHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"openHouseFAQs\",\n    className: \"faqSegmentBtn ion-text-wrap\",\n    id: \"openHouseFAQs\",\n    onClick: handleOpenHouseFAQs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"Open House FAQs\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"generalFAQs\",\n    className: \"faqSegmentBtn ion-text-wrap\",\n    id: \"generalFAQs\",\n    onClick: handleGeneralFAQs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"General FAQs\")))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"faqGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, tab === \"openHouseFAQs\" ?\n  /*#__PURE__*/\n\n  /* Open House FAQ Accordion */\n  React.createElement(IonRow, {\n    className: \"faqHeaderRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"faqHeaderCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, faqs.openhouse.map((faq, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: faq.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(IonRow, {\n      className: \"faqHeaderInnerRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      size: \"10\",\n      sizeSm: \"10\",\n      style: {\n        padding: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      className: \"faqInfoHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 57\n      }\n    }, faq.faqQuestion))), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"2\",\n      sizeSm: \"2\",\n      className: \"toggleFaqInfoBtnCol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(IonButton, {\n      className: \"toggleFaqInfoBtn\",\n      onClick: e => {\n        displayInfoCol(index);\n      },\n      fill: \"clear\",\n      size: \"default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      slot: \"icon-only\",\n      ref: showIcon,\n      icon: addCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      sizeSm: \"12\",\n      className: \"faqInfo\",\n      ref: addtoRef,\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 57\n      }\n    }, faq.faqAnswer)))));\n  }))) : null, tab === \"generalFAQs\" ?\n  /*#__PURE__*/\n\n  /* General FAQ Accordion */\n  React.createElement(IonRow, {\n    className: \"faqHeaderRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"faqHeaderCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, faqs.general.map((faq, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: faq.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(IonRow, {\n      className: \"faqHeaderInnerRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      size: \"10\",\n      sizeSm: \"10\",\n      style: {\n        padding: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      className: \"faqInfoHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 53\n      }\n    }, faq.faqQuestion))), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"2\",\n      sizeSm: \"2\",\n      className: \"toggleFaqInfoBtnCol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(IonButton, {\n      className: \"toggleFaqInfoBtn\",\n      onClick: e => {\n        displayInfoCol(index);\n      },\n      fill: \"clear\",\n      size: \"default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      slot: \"icon-only\",\n      ref: showIcon,\n      icon: addCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 53\n      }\n    })))), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      sizeSm: \"12\",\n      className: \"faqInfo\",\n      ref: addtoRef,\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 53\n      }\n    }, faq.faqAnswer)))));\n  }))) : null)));\n};\n\nexport default CommonFaqs;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/UsefulInfo/CommonFaqs.tsx"],"names":["IonButton","IonCol","IonContent","IonGrid","IonHeader","IonIcon","IonPage","IonRow","IonSegment","IonSegmentButton","IonTitle","IonToolbar","React","useRef","useState","useEffect","addCircle","removeCircle","TopNav","db","CommonFaqs","tab","setTab","faqs","setFaqs","openhouse","general","handleOpenHouseFAQs","handleGeneralFAQs","info","showIcon","current","displayInfoCol","index","hidden","icon","addtoRef","el","includes","push","collection","get","then","snapshot","forEach","doc","data","faqType","map","faq","id","padding","faqQuestion","e","faqAnswer"],"mappings":"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","sourcesContent":["import { IonButton, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonPage, IonRow, IonSegment, IonSegmentButton, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport { addCircle, removeCircle } from 'ionicons/icons';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/CommonFaqs.css';\r\nimport TopNav from '../../components/TopNav';\r\nimport { db } from '../../firebase'\r\nimport { Faq } from '../../modules/map'\r\n\r\nconst CommonFaqs: React.FC = () => {\r\n    const [tab, setTab] = useState(\"openHouseFAQs\");\r\n    const [faqs, setFaqs] = useState({ openhouse: [], general: [] });\r\n\r\n    const handleOpenHouseFAQs = () => {\r\n        setTab(\"openHouseFAQs\");\r\n    };\r\n\r\n    const handleGeneralFAQs = () => {\r\n        setTab(\"generalFAQs\");\r\n    };\r\n\r\n\r\n    const info = useRef<HTMLIonIconElement[]>([]);\r\n    const showIcon = useRef<HTMLIonIconElement>(null);\r\n    info.current =[]\r\n\r\n    const displayInfoCol = (index:number) => {\r\n        info.current[index]!.hidden = !info.current[index]!.hidden;\r\n        if (showIcon.current!.icon === addCircle)\r\n            showIcon.current!.icon = removeCircle;\r\n        else\r\n            showIcon.current!.icon = addCircle;\r\n    };\r\n\r\n    //Adding each answer into their own ref.\r\n    const addtoRef = (el:HTMLIonIconElement)=>{\r\n        if(el && !info.current.includes(el))\r\n        info.current.push(el)\r\n    }\r\n\r\n    useEffect(() => {\r\n        db.collection('CommonFAQ').get().then((snapshot) => {\r\n            const openhouse: any = [];\r\n            const general: any = [];\r\n\r\n            snapshot.forEach((doc) => {\r\n                const data = doc.data();\r\n\r\n                if (data.faqType === \"Openhouse\")\r\n                    openhouse.push(data);\r\n                else\r\n                    general.push(data);\r\n            })\r\n            setFaqs({ openhouse: openhouse, general: general });\r\n        });\r\n    }, []);\r\n\r\n    \r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <TopNav title=\"Common FAQs\" route='/u/usefulInfoMain' backarrow={true} hamburger={true} />\r\n\r\n                <IonToolbar className=\"faqSegmentHeader\">\r\n                    <IonSegment scrollable value={tab} className=\"faqSegmentHeader\">\r\n                        <IonSegmentButton value=\"openHouseFAQs\" className=\"faqSegmentBtn ion-text-wrap\" id=\"openHouseFAQs\" onClick={handleOpenHouseFAQs}>\r\n                            Open House FAQs\r\n                        </IonSegmentButton>\r\n                        <IonSegmentButton value=\"generalFAQs\" className=\"faqSegmentBtn ion-text-wrap\" id=\"generalFAQs\" onClick={handleGeneralFAQs}>\r\n                            General FAQs\r\n                        </IonSegmentButton>\r\n                    </IonSegment>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen={true}>\r\n                <IonGrid id=\"faqGrid\">\r\n                    {/* Open House FAQs */}\r\n                    {tab === \"openHouseFAQs\" ? (\r\n                        /* Open House FAQ Accordion */\r\n                        <IonRow className=\"faqHeaderRow\">\r\n                            <IonCol className=\"faqHeaderCol\">\r\n                                {faqs.openhouse.map((faq: Faq,index ) => {\r\n                                    return (\r\n                                        <div key={faq.id}>\r\n                                            <IonRow className=\"faqHeaderInnerRow\">\r\n                                                <IonCol size=\"10\" sizeSm=\"10\" style={{ padding: \"0\" }}>\r\n                                                    <IonTitle className=\"faqInfoHeader\">\r\n                                                        <div className=\"ion-text-wrap\">{faq.faqQuestion}</div>\r\n                                                    </IonTitle>\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"2\" sizeSm=\"2\" className=\"toggleFaqInfoBtnCol\">\r\n                                                    <IonButton className=\"toggleFaqInfoBtn\" onClick={e=>{displayInfoCol(index)}} fill=\"clear\" size=\"default\">\r\n                                                        <IonIcon slot=\"icon-only\" ref={showIcon} icon={addCircle} />\r\n                                                    </IonButton>\r\n                                                </IonCol>\r\n                                            </IonRow>\r\n\r\n                                            <IonRow>\r\n                                                <IonCol sizeSm=\"12\" className=\"faqInfo\" ref={addtoRef} hidden={true}>\r\n                                                    <div className=\"ion-text-wrap\">\r\n                                                        <p>{faq.faqAnswer}</p>\r\n                                                    </div>\r\n                                                </IonCol>\r\n                                            </IonRow>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    ) : null\r\n                    }\r\n\r\n\r\n                    {/* General FAQs */}\r\n                    {tab === \"generalFAQs\" ? (\r\n                        /* General FAQ Accordion */\r\n                        < IonRow className=\"faqHeaderRow\">\r\n                            <IonCol className=\"faqHeaderCol\">\r\n                                {faqs.general.map((faq: Faq,index) => {\r\n                                    return (<div key={faq.id}>\r\n                                        <IonRow className=\"faqHeaderInnerRow\">\r\n                                            <IonCol size=\"10\" sizeSm=\"10\" style={{ padding: \"0\" }}>\r\n                                                <IonTitle className=\"faqInfoHeader\">\r\n                                                    <div className=\"ion-text-wrap\">{faq.faqQuestion}</div>\r\n                                                </IonTitle>\r\n                                            </IonCol>\r\n\r\n                                            <IonCol size=\"2\" sizeSm=\"2\" className=\"toggleFaqInfoBtnCol\">\r\n                                                <IonButton className=\"toggleFaqInfoBtn\" onClick={e=>{displayInfoCol(index)}} fill=\"clear\" size=\"default\">\r\n                                                    <IonIcon slot=\"icon-only\" ref={showIcon} icon={addCircle} />\r\n                                                </IonButton>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n\r\n                                        <IonRow>\r\n                                            <IonCol sizeSm=\"12\" className=\"faqInfo\" ref={addtoRef} hidden={true}>\r\n                                                <div className=\"ion-text-wrap\">\r\n                                                    <p>{faq.faqAnswer}</p>\r\n                                                </div>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n                                    </div>)\r\n                                })}\r\n\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    ) : null\r\n                    }\r\n\r\n                </IonGrid>\r\n            </IonContent>\r\n\r\n        </IonPage >\r\n    );\r\n\r\n};\r\n\r\nexport default CommonFaqs;"]},"metadata":{},"sourceType":"module"}