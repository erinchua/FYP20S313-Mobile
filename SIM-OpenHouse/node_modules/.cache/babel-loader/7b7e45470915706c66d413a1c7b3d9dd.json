{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\Forum\\\\ForumUser.tsx\";\nimport { IonButton, IonCol, IonContent, IonFooter, IonGrid, IonHeader, IonIcon, IonItemDivider, IonLabel, IonLoading, IonModal, IonPage, IonRow, IonSearchbar, IonSegment, IonSegmentButton, IonTextarea, IonToolbar } from '@ionic/react';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { addCircleSharp, personSharp } from 'ionicons/icons';\nimport \"../../css/Global.css\";\nimport \"../../css/Forum.css\";\nimport TopNav from '../../components/TopNav';\nimport ForumRules from '../../components/Forum/ForumRules';\nimport ForumQuestions from '../../components/Forum/ForumQuestions';\nimport ForumComments from '../../components/Forum/ForumComments';\nimport { db } from '../../firebase';\nimport { useAuth } from '../../modules/auth';\n\nconst ForumUser = () => {\n  const {\n    userID\n  } = useAuth();\n  let history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [qnsCom, setQnsCom] = useState('forum-myQuestions');\n  const [modalSegmentValue, setModalSegmentValue] = useState('');\n  const [showPostModal, setShowPostModal] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [entry, setEntry] = useState(\"\");\n  const [keyword, setKeyword] = useState(\"\");\n\n  const handleQuestions = () => {\n    setQnsCom('forum-myQuestions');\n  };\n\n  const handleComments = () => {\n    setQnsCom('forum-myComments');\n  };\n\n  const handleQuestion = async () => {\n    try {\n      setLoading(true);\n      const time = new Date();\n      let name;\n      await db.collection('Students').doc(userID).get().then(doc => {\n        var _doc$data, _doc$data2;\n\n        if (doc.exists) name = ((_doc$data = doc.data()) === null || _doc$data === void 0 ? void 0 : _doc$data.firstName) + \" \" + ((_doc$data2 = doc.data()) === null || _doc$data2 === void 0 ? void 0 : _doc$data2.lastName);\n      });\n      const docRef = db.collection('Forum').doc(userID).collection('Questions').doc(time.getTime().toString());\n      await docRef.set({\n        id: +docRef.id,\n        entry: entry,\n        posterName: name,\n        posterId: userID,\n        dateTime: time.toLocaleString().replace(/\\//g, \"-\"),\n        noOfComments: 0,\n        deleted: false,\n        reported: false\n      });\n    } catch (e) {\n      return console.log(e);\n    } finally {\n      setLoading(false);\n      setShowPostModal(false);\n      setEntry(\"\");\n    }\n  };\n  /* useEffect(() => {\r\n      const questions: any = [];\r\n      const comments: any = [];\r\n        const questionsListener = db.collection('Forum').doc(userID).collection('Questions').where(\"deleted\", \"==\", false).onSnapshot(snaps => {\r\n          snaps.forEach(snap => questions.push(snap.data()));\r\n      });\r\n        const commentsListener = db.collection('Forum').doc(userID).collection('Comments').where(\"deleted\", \"==\", false).onSnapshot(snaps => {\r\n          setComments(comments);\r\n            snaps.forEach(async (snap) => {\r\n              let post: any = { ...snap.data() }\r\n                const questionRef = db.collectionGroup('Questions').where(\"id\", \"==\", snap.data().questionId).onSnapshot(questions => {\r\n                  questions.forEach(question => {\r\n                      if (question.exists) {\r\n                          post.question = question.data()?.entry;\r\n                          post.questionRemoved = question.data()?.deleted;\r\n                      }\r\n                  });\r\n              }); \r\n                await db.collection('Forum').get().then(users => {\r\n                  users.forEach(user => {\r\n                      return db.collection('Forum').doc(user.id).collection('Questions').doc(snap.data().questionId.toString()).onSnapshot(question => {\r\n                          if(question.exists) {\r\n                              post.question = question.data()?.entry;\r\n                              post.questionRemoved = question.data()?.deleted;\r\n                          }\r\n                      });\r\n                  });\r\n              });\r\n              comments.push(post)\r\n              //questionRef();\r\n          });\r\n      });\r\n        setTimeout(() => {\r\n          setQuestions(questions);\r\n          setComments(comments);\r\n            questionsListener();\r\n          commentsListener();\r\n          setLoading(false);\r\n      }, 500);\r\n  }, []); */\n\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Forum\",\n    route: \"/u/forum\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    id: \"forum-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"forum-searchbar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-justify-content-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"10\",\n    className: \"forum-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      history.push(`/u/forumSearch/${keyword}`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonSearchbar, {\n    value: keyword,\n    onIonChange: e => setKeyword(e.detail.value),\n    enterkeyhint: \"search\",\n    id: \"forum-searchbar\",\n    animated: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    className: \"forum-col ion-align-self-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ForumRules, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"forumUser-ionRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    id: \"forumUser-ionRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    id: \"forumUser-ionRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: qnsCom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"forum-myQuestions\",\n    onClick: () => handleQuestions(),\n    className: \"forumUser-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }, \"My Questions\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"forum-myComments\",\n    onClick: () => handleComments(),\n    className: \"forumUser-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }, \"My Comments\")))))), qnsCom === 'forum-myQuestions' ? /*#__PURE__*/React.createElement(ForumQuestions, {\n    questions: questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(ForumComments, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 64\n    }\n  }), /*#__PURE__*/React.createElement(IonModal, {\n    isOpen: showPostModal,\n    cssClass: \"post-question-modal\",\n    onDidDismiss: () => setShowPostModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"postQns-modal-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    style: {\n      paddingTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    id: \"postQns-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, \"Post Question\")), /*#__PURE__*/React.createElement(IonItemDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(IonRow, {\n    id: \"postQns-modal-inputArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonTextarea, {\n    value: entry,\n    onIonChange: e => setEntry(e.detail.value),\n    rows: 11,\n    placeholder: \"Type your question here...\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-justify-content-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    id: \"postQns-close-button\",\n    fill: \"outline\",\n    onClick: () => [setShowPostModal(false), setModalSegmentValue('')],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, \"CLOSE\"), /*#__PURE__*/React.createElement(IonButton, {\n    id: \"postQns-post-button\",\n    onClick: handleQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }, \"POST\"))))), /*#__PURE__*/React.createElement(IonLoading, {\n    isOpen: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: modalSegmentValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    className: \"forum-segmentBtn\",\n    value: \"postQuestionBtn\",\n    onClick: () => [setShowPostModal(true), setModalSegmentValue('postQuestionBtn')],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: addCircleSharp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 178\n    }\n  })), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    className: \"forum-segmentBtn\",\n    value: \"forumUserBtn\",\n    onClick: e => {\n      e.preventDefault();\n      history.push('/u/forumUser');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: personSharp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 164\n    }\n  }))))));\n};\n\nexport default ForumUser;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/Forum/ForumUser.tsx"],"names":["IonButton","IonCol","IonContent","IonFooter","IonGrid","IonHeader","IonIcon","IonItemDivider","IonLabel","IonLoading","IonModal","IonPage","IonRow","IonSearchbar","IonSegment","IonSegmentButton","IonTextarea","IonToolbar","React","useState","useHistory","addCircleSharp","personSharp","TopNav","ForumRules","ForumQuestions","ForumComments","db","useAuth","ForumUser","userID","history","loading","setLoading","qnsCom","setQnsCom","modalSegmentValue","setModalSegmentValue","showPostModal","setShowPostModal","questions","setQuestions","comments","setComments","entry","setEntry","keyword","setKeyword","handleQuestions","handleComments","handleQuestion","time","Date","name","collection","doc","get","then","exists","data","firstName","lastName","docRef","getTime","toString","set","id","posterName","posterId","dateTime","toLocaleString","replace","noOfComments","deleted","reported","e","console","log","preventDefault","push","detail","value","paddingTop"],"mappings":"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","sourcesContent":["import { IonButton, IonCol, IonContent, IonFooter, IonGrid, IonHeader, IonIcon, IonItemDivider, IonLabel, IonLoading, IonModal, IonPage, IonRow, IonSearchbar, IonSegment, IonSegmentButton, IonTextarea, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { addCircleSharp, personSharp } from 'ionicons/icons';\r\n\r\nimport \"../../css/Global.css\";\r\nimport \"../../css/Forum.css\";\r\nimport TopNav from '../../components/TopNav';\r\nimport ForumRules from '../../components/Forum/ForumRules';\r\nimport ForumQuestions from '../../components/Forum/ForumQuestions';\r\nimport ForumComments from '../../components/Forum/ForumComments';\r\nimport { db } from '../../firebase';\r\nimport { useAuth } from '../../modules/auth';\r\n\r\nconst ForumUser: React.FC = () => {\r\n    const { userID } = useAuth();\r\n\r\n    let history = useHistory();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [qnsCom, setQnsCom] = useState('forum-myQuestions');\r\n    const [modalSegmentValue, setModalSegmentValue] = useState('');\r\n    const [showPostModal, setShowPostModal] = useState(false);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n    const [entry, setEntry] = useState(\"\");\r\n    const [keyword, setKeyword] = useState(\"\");\r\n\r\n    const handleQuestions = () => {\r\n        setQnsCom('forum-myQuestions');\r\n    }\r\n\r\n    const handleComments = () => {\r\n        setQnsCom('forum-myComments');\r\n    }\r\n\r\n    const handleQuestion = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const time = new Date();\r\n            let name: string;\r\n\r\n            await db.collection('Students').doc(userID).get().then(doc => {\r\n                if (doc.exists)\r\n                    name = doc.data()?.firstName + \" \" + doc.data()?.lastName;\r\n            });\r\n\r\n            const docRef = db.collection('Forum').doc(userID).collection('Questions').doc((time.getTime()).toString());\r\n            await docRef.set({\r\n                id: +docRef.id,\r\n                entry: entry,\r\n                posterName: name!,\r\n                posterId: userID,\r\n                dateTime: time.toLocaleString().replace(/\\//g, \"-\"),\r\n                noOfComments: 0,\r\n                deleted: false,\r\n                reported: false\r\n            });\r\n        } catch (e) {\r\n            return console.log(e);\r\n        } finally {\r\n            setLoading(false);\r\n            setShowPostModal(false);\r\n            setEntry(\"\");\r\n        }\r\n    }\r\n\r\n    /* useEffect(() => {\r\n        const questions: any = [];\r\n        const comments: any = [];\r\n\r\n        const questionsListener = db.collection('Forum').doc(userID).collection('Questions').where(\"deleted\", \"==\", false).onSnapshot(snaps => {\r\n            snaps.forEach(snap => questions.push(snap.data()));\r\n        });\r\n\r\n        const commentsListener = db.collection('Forum').doc(userID).collection('Comments').where(\"deleted\", \"==\", false).onSnapshot(snaps => {\r\n            setComments(comments);\r\n\r\n            snaps.forEach(async (snap) => {\r\n                let post: any = { ...snap.data() }\r\n\r\n                const questionRef = db.collectionGroup('Questions').where(\"id\", \"==\", snap.data().questionId).onSnapshot(questions => {\r\n                    questions.forEach(question => {\r\n                        if (question.exists) {\r\n                            post.question = question.data()?.entry;\r\n                            post.questionRemoved = question.data()?.deleted;\r\n                        }\r\n                    });\r\n                }); \r\n\r\n                await db.collection('Forum').get().then(users => {\r\n                    users.forEach(user => {\r\n                        return db.collection('Forum').doc(user.id).collection('Questions').doc(snap.data().questionId.toString()).onSnapshot(question => {\r\n                            if(question.exists) {\r\n                                post.question = question.data()?.entry;\r\n                                post.questionRemoved = question.data()?.deleted;\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                comments.push(post)\r\n                //questionRef();\r\n            });\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setQuestions(questions);\r\n            setComments(comments);\r\n\r\n            questionsListener();\r\n            commentsListener();\r\n            setLoading(false);\r\n        }, 500);\r\n    }, []); */\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <TopNav title=\"Forum\" route=\"/u/forum\" backarrow={true} hamburger={true} />\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen id=\"forum-content\">\r\n                <IonGrid id=\"forum-searchbar-container\">\r\n                    <IonRow className=\"ion-justify-content-start\">\r\n                        <IonCol size=\"10\" className=\"forum-col\">\r\n                            <form onSubmit={e => { e.preventDefault(); history.push(`/u/forumSearch/${keyword}`); }}>\r\n                                <IonSearchbar value={keyword} onIonChange={e => setKeyword(e.detail.value!)} enterkeyhint=\"search\" id=\"forum-searchbar\" animated></IonSearchbar>\r\n                            </form>\r\n                        </IonCol>\r\n                        <IonCol size=\"2\" className=\"forum-col ion-align-self-center\">\r\n                            <ForumRules />\r\n                        </IonCol>\r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <IonGrid id=\"forumUser-ionRowCol\">\r\n                    <IonRow id=\"forumUser-ionRowCol\">\r\n                        <IonCol id=\"forumUser-ionRowCol\">\r\n                            <IonToolbar>\r\n                                <IonSegment scrollable value={qnsCom}>\r\n                                    <IonSegmentButton value=\"forum-myQuestions\" onClick={() => handleQuestions()} className=\"forumUser-heading\">My Questions</IonSegmentButton>\r\n                                    <IonSegmentButton value=\"forum-myComments\" onClick={() => handleComments()} className=\"forumUser-heading\">My Comments</IonSegmentButton>\r\n                                </IonSegment>\r\n                            </IonToolbar>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                </IonGrid>\r\n                {qnsCom === 'forum-myQuestions' ?\r\n                    <ForumQuestions questions={questions} /> : <ForumComments comments={comments} />\r\n                }\r\n\r\n                {/* Post Question Modal */}\r\n                <IonModal isOpen={showPostModal} cssClass='post-question-modal' onDidDismiss={() => setShowPostModal(false)}>\r\n                    <IonContent>\r\n                        <IonGrid id=\"postQns-modal-container\">\r\n                            <IonRow style={{ paddingTop: '1%' }}>\r\n                                <IonLabel id=\"postQns-title\">Post Question</IonLabel>\r\n                            </IonRow>\r\n                            <IonItemDivider />\r\n                            <IonRow id=\"postQns-modal-inputArea\">\r\n                                <IonTextarea value={entry} onIonChange={(e: any) => setEntry(e.detail.value)} rows={11} placeholder=\"Type your question here...\" required></IonTextarea>\r\n                            </IonRow>\r\n                            <IonRow className=\"ion-justify-content-around\">\r\n                                <IonButton id=\"postQns-close-button\" fill=\"outline\" onClick={() => [setShowPostModal(false), setModalSegmentValue('')]}>CLOSE</IonButton>\r\n                                <IonButton id=\"postQns-post-button\" onClick={handleQuestion}>POST</IonButton>\r\n                            </IonRow>\r\n                        </IonGrid>\r\n                    </IonContent>\r\n                </IonModal>\r\n                <IonLoading isOpen={loading} />\r\n            </IonContent>\r\n\r\n            <IonFooter>\r\n                <IonToolbar>\r\n                    <IonSegment scrollable value={modalSegmentValue}>\r\n                        <IonSegmentButton className=\"forum-segmentBtn\" value=\"postQuestionBtn\" onClick={() => [setShowPostModal(true), setModalSegmentValue('postQuestionBtn')]}><IonIcon icon={addCircleSharp} /></IonSegmentButton>\r\n                        <IonSegmentButton className=\"forum-segmentBtn\" value=\"forumUserBtn\" onClick={(e) => { e.preventDefault(); history.push('/u/forumUser'); }}><IonIcon icon={personSharp} /></IonSegmentButton>\r\n                    </IonSegment>\r\n                </IonToolbar>\r\n            </IonFooter>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default ForumUser;"]},"metadata":{},"sourceType":"module"}