{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\UsefulInfo\\\\OpenHouseFeedback.tsx\";\nimport { IonAlert, IonButton, IonCol, IonContent, IonGrid, IonHeader, IonItem, IonLabel, IonPage, IonRadio, IonRadioGroup, IonRow, IonSelect, IonSelectOption, IonTextarea, IonTitle } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport '../../css/Global.css';\nimport '../../css/OpenHouseFeedback.css';\nimport TopNav from '../../components/TopNav';\nimport { db } from '../../firebase';\n\nconst OpenHouseFeedback = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues,\n    reset\n  } = useForm();\n  const [submitFeedbackSuccess, setSubmitFeedbackSuccess] = useState(false);\n  const [openhouseDates, setOpenhouseDates] = useState([]);\n  useEffect(() => {\n    db.collection('Openhouse').get().then(snapshot => {\n      const dates = [];\n      snapshot.forEach(doc => {\n        const data = doc.get('day');\n\n        for (let i = 0; i < Object.keys(data).length; i++) {\n          const day = data[Object.keys(data)[i]];\n          dates.push(day.date);\n        }\n      });\n      setOpenhouseDates(dates);\n    }).catch(error => console.log(error));\n  }, []);\n\n  const submitNewFeedback = async (date, feedbackNature, feedbackDesc) => {\n    const msTime = new Date().getTime();\n    await db.collection('Feedback').doc(msTime.toString()).set({\n      id: msTime,\n      attendedDate: date,\n      natureOfFeedback: feedbackNature,\n      feedbackDescription: feedbackDesc\n    });\n    console.log(date);\n    console.log(feedbackNature);\n    console.log(feedbackDesc);\n  };\n\n  const onSubmit = data => {\n    const attendedDate = getValues(\"attendedDate\");\n    const feedbackNature = getValues(\"feedbackNature\");\n    const feedbackTextarea = getValues(\"feedbackTextarea\");\n\n    if (attendedDate !== \"\" && feedbackNature !== \"\" && feedbackTextarea !== \"\" && attendedDate !== null && feedbackNature !== null && feedbackTextarea !== null) {\n      console.log(\"Date: \" + data.attendedDate);\n      console.log(\"Feedback Nature: \" + data.feedbackNature);\n      console.log(\"Feedback: \" + data.feedbackTextarea);\n      submitNewFeedback(attendedDate, feedbackNature, feedbackTextarea);\n      setSubmitFeedbackSuccess(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: submitFeedbackSuccess,\n    onDidDismiss: () => setSubmitFeedbackSuccess(false),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    header: 'Your feedback has been successfully sent!',\n    message: 'Thank you for your feedback!',\n    buttons: [{\n      text: 'Close',\n      handler: () => {\n        reset({\n          attendedDate: null,\n          feedbackNature: null,\n          feedbackTextarea: null\n        });\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Open House Feedback Form\",\n    route: \"/u/usefulInfoMain\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"openHouseFeedbackIonContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"openHouseFeedbackGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    id: \"openHouseFeedbackMainTitleRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    style: {\n      padding: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    id: \"openHouseFeedbackMainTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, \"SIM Open House Feedback\"), /*#__PURE__*/React.createElement(IonRow, {\n    id: \"openHouseFeedbackSubtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }, \"We'll love to hear from you!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"openHouseFeedbackTitleRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"openHouseFeedbackTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, \"Attended Open House Date *\")), /*#__PURE__*/React.createElement(IonRow, {\n    id: \"attendedDateRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"12\",\n    sizeSm: \"12\",\n    style: {\n      padding: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    id: \"attendedDateItem\",\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonSelect, {\n    id: \"attendedDateSelect\",\n    name: \"attendedDate\",\n    placeholder: \"Select Date\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 41\n    }\n  }, openhouseDates.map(date => {\n    return /*#__PURE__*/React.createElement(IonSelectOption, {\n      key: date,\n      value: date,\n      className: \"attendedDateSelectOption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 57\n      }\n    }, date);\n  }))), errors.attendedDate && errors.attendedDate.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 104\n    }\n  }, \"Attended open house date is required!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"openHouseFeedbackTitleRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"openHouseFeedbackTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }, \"Nature of Feedback *\")), /*#__PURE__*/React.createElement(IonRow, {\n    id: \"feedbackNatureRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"12\",\n    sizeSm: \"12\",\n    style: {\n      padding: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    id: \"feedbackNatureMainItem\",\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonRadioGroup, {\n    id: \"feedbackNatureRadioGroup\",\n    name: \"feedbackNature\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    id: \"feedbackNatureItem\",\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 49\n    }\n  }, \"Compliment\"), /*#__PURE__*/React.createElement(IonRadio, {\n    slot: \"start\",\n    value: \"compliment\",\n    className: \"feedbackNatureRadio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 49\n    }\n  }, \"Compliment\")), /*#__PURE__*/React.createElement(IonItem, {\n    id: \"feedbackNatureItem\",\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 49\n    }\n  }, \"Complaint\"), /*#__PURE__*/React.createElement(IonRadio, {\n    slot: \"start\",\n    value: \"complaint\",\n    className: \"feedbackNatureRadio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 49\n    }\n  }, \"Complaint\")), /*#__PURE__*/React.createElement(IonItem, {\n    id: \"feedbackNatureItem\",\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 49\n    }\n  }, \"Suggestion\"), /*#__PURE__*/React.createElement(IonRadio, {\n    slot: \"start\",\n    value: \"suggestion\",\n    className: \"feedbackNatureRadio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 49\n    }\n  }, \"Suggestion\")))), errors.feedbackNature && errors.feedbackNature.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 108\n    }\n  }, \"Nature of feedback is required!\"))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"openHouseFeedbackTitleRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"openHouseFeedbackTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, \"Your Feedback/ Comments *\")), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonTextarea, {\n    id: \"feedbackTextarea\",\n    name: \"feedbackTextarea\",\n    wrap: \"hard\",\n    rows: 8,\n    inputmode: \"text\",\n    placeholder: \"Type your feedback/ comments here...\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  })), errors.feedbackTextarea && errors.feedbackTextarea.type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 104\n    }\n  }, \"Your feedback/ comment is required!\"), /*#__PURE__*/React.createElement(IonRow, {\n    class: \"ion-justify-content-center\",\n    style: {\n      marginTop: \"5%\",\n      marginBottom: \"3%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    size: \"large\",\n    id: \"feedbackBtn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 33\n    }\n  }, \"SUBMIT\")))))));\n};\n\nexport default OpenHouseFeedback;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/UsefulInfo/OpenHouseFeedback.tsx"],"names":["IonAlert","IonButton","IonCol","IonContent","IonGrid","IonHeader","IonItem","IonLabel","IonPage","IonRadio","IonRadioGroup","IonRow","IonSelect","IonSelectOption","IonTextarea","IonTitle","React","useEffect","useState","useForm","TopNav","db","OpenHouseFeedback","register","handleSubmit","errors","getValues","reset","submitFeedbackSuccess","setSubmitFeedbackSuccess","openhouseDates","setOpenhouseDates","collection","get","then","snapshot","dates","forEach","doc","data","i","Object","keys","length","day","push","date","catch","error","console","log","submitNewFeedback","feedbackNature","feedbackDesc","msTime","Date","getTime","toString","set","id","attendedDate","natureOfFeedback","feedbackDescription","onSubmit","feedbackTextarea","text","handler","padding","required","map","type","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import { IonAlert, IonButton, IonCol, IonContent, IonGrid, IonHeader, IonItem, IonLabel, IonPage, IonRadio, IonRadioGroup, IonRow, IonSelect, IonSelectOption, IonTextarea, IonTitle } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/OpenHouseFeedback.css';\r\nimport TopNav from '../../components/TopNav';\r\nimport { db } from '../../firebase'\r\n\r\n\r\nconst OpenHouseFeedback: React.FC = () => {\r\n\r\n    const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n    const [submitFeedbackSuccess, setSubmitFeedbackSuccess] = useState(false);\r\n    const [openhouseDates, setOpenhouseDates] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('Openhouse').get().then(snapshot => {\r\n            const dates: any = [];\r\n\r\n            snapshot.forEach(doc => {\r\n                const data = doc.get('day');\r\n\r\n                for (let i = 0; i < Object.keys(data).length; i++) {\r\n                    const day = data[Object.keys(data)[i]];\r\n                    dates.push(day.date);\r\n                }\r\n            });\r\n\r\n            setOpenhouseDates(dates);\r\n        }).catch((error) => console.log(error));\r\n    }, []);\r\n\r\n    const submitNewFeedback = async (date: string, feedbackNature: string, feedbackDesc: string) => {\r\n        const msTime = new Date().getTime();\r\n\r\n        await db.collection('Feedback').doc(msTime.toString()).set({\r\n            id: msTime,\r\n            attendedDate: date,\r\n            natureOfFeedback: feedbackNature,\r\n            feedbackDescription: feedbackDesc\r\n        });\r\n\r\n        console.log(date)\r\n        console.log(feedbackNature)\r\n        console.log(feedbackDesc)\r\n    }\r\n\r\n    const onSubmit = (data: any) => {\r\n        const attendedDate = getValues(\"attendedDate\");\r\n        const feedbackNature = getValues(\"feedbackNature\");\r\n        const feedbackTextarea = getValues(\"feedbackTextarea\");\r\n\r\n        if ((attendedDate !== \"\" && feedbackNature !== \"\" && feedbackTextarea !== \"\") &&\r\n            (attendedDate !== null && feedbackNature !== null && feedbackTextarea !== null)) {\r\n            console.log(\"Date: \" + data.attendedDate);\r\n            console.log(\"Feedback Nature: \" + data.feedbackNature);\r\n            console.log(\"Feedback: \" + data.feedbackTextarea);\r\n            submitNewFeedback(attendedDate, feedbackNature, feedbackTextarea)\r\n            setSubmitFeedbackSuccess(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IonAlert\r\n                isOpen={submitFeedbackSuccess}\r\n                onDidDismiss={() => setSubmitFeedbackSuccess(false)}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Your feedback has been successfully sent!'}\r\n                message={'Thank you for your feedback!'}\r\n                buttons={[\r\n                    {\r\n                        text: 'Close',\r\n                        handler: () => {\r\n                            reset({\r\n                                attendedDate: null,\r\n                                feedbackNature: null,\r\n                                feedbackTextarea: null\r\n                            });\r\n                        }\r\n                    }\r\n                ]}\r\n            ></IonAlert>\r\n\r\n            <IonPage>\r\n                <IonHeader>\r\n                    <TopNav title=\"Open House Feedback Form\" route='/u/usefulInfoMain' backarrow={true} hamburger={true} />\r\n                </IonHeader>\r\n\r\n                <IonContent fullscreen={true} className=\"openHouseFeedbackIonContent\">\r\n                    <IonGrid id=\"openHouseFeedbackGrid\">\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <IonRow id=\"openHouseFeedbackMainTitleRow\">\r\n                                <IonCol style={{ padding: \"0\" }}>\r\n                                    <IonRow id=\"openHouseFeedbackMainTitle\">SIM Open House Feedback</IonRow>\r\n                                    <IonRow id=\"openHouseFeedbackSubtitle\">We'll love to hear from you!</IonRow>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Attended Open House Date */}\r\n                            <IonRow className=\"openHouseFeedbackTitleRow\">\r\n                                <IonTitle className=\"openHouseFeedbackTitle\">Attended Open House Date *</IonTitle>\r\n                            </IonRow>\r\n\r\n                            <IonRow id=\"attendedDateRow\">\r\n                                <IonCol size=\"12\" sizeSm=\"12\" style={{ padding: \"0\" }}>\r\n                                    <IonItem id=\"attendedDateItem\" lines=\"none\">\r\n                                        <IonSelect id=\"attendedDateSelect\" name=\"attendedDate\" placeholder=\"Select Date\" ref={register({ required: true })}>\r\n                                            {openhouseDates.map((date) => {\r\n                                                return (<IonSelectOption key={date} value={date} className=\"attendedDateSelectOption\">{date}</IonSelectOption>)\r\n                                            })}\r\n                                        </IonSelect>\r\n                                    </IonItem>\r\n                                    {errors.attendedDate && errors.attendedDate.type === \"required\" && <p className=\"errorMsg\">Attended open house date is required!</p>}\r\n\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Nature of Feedback */}\r\n                            <IonRow className=\"openHouseFeedbackTitleRow\">\r\n                                <IonTitle className=\"openHouseFeedbackTitle\">Nature of Feedback *</IonTitle>\r\n                            </IonRow>\r\n\r\n                            <IonRow id=\"feedbackNatureRow\">\r\n                                <IonCol size=\"12\" sizeSm=\"12\" style={{ padding: \"0\" }}>\r\n                                    <IonItem id=\"feedbackNatureMainItem\" lines=\"none\">\r\n                                        <IonRadioGroup id=\"feedbackNatureRadioGroup\" name=\"feedbackNature\" ref={register({ required: true })}>\r\n                                            <IonItem id=\"feedbackNatureItem\" lines=\"none\">\r\n                                                <IonLabel>Compliment</IonLabel>\r\n                                                <IonRadio slot=\"start\" value=\"compliment\" className=\"feedbackNatureRadio\">Compliment</IonRadio>\r\n                                            </IonItem>\r\n\r\n                                            <IonItem id=\"feedbackNatureItem\" lines=\"none\">\r\n                                                <IonLabel>Complaint</IonLabel>\r\n                                                <IonRadio slot=\"start\" value=\"complaint\" className=\"feedbackNatureRadio\">Complaint</IonRadio>\r\n                                            </IonItem>\r\n\r\n                                            <IonItem id=\"feedbackNatureItem\" lines=\"none\">\r\n                                                <IonLabel>Suggestion</IonLabel>\r\n                                                <IonRadio slot=\"start\" value=\"suggestion\" className=\"feedbackNatureRadio\">Suggestion</IonRadio>\r\n                                            </IonItem>\r\n                                        </IonRadioGroup>\r\n                                    </IonItem>\r\n                                    {errors.feedbackNature && errors.feedbackNature.type === \"required\" && <p className=\"errorMsg\">Nature of feedback is required!</p>}\r\n\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            {/* Feedback/ Comments */}\r\n                            <IonRow className=\"openHouseFeedbackTitleRow\">\r\n                                <IonTitle className=\"openHouseFeedbackTitle\">Your Feedback/ Comments *</IonTitle>\r\n                            </IonRow>\r\n\r\n                            <IonRow>\r\n                                <IonTextarea id=\"feedbackTextarea\" name=\"feedbackTextarea\" wrap=\"hard\" rows={8} inputmode=\"text\" placeholder=\"Type your feedback/ comments here...\" ref={register({ required: true })}></IonTextarea>\r\n                            </IonRow>\r\n                            {errors.feedbackTextarea && errors.feedbackTextarea.type === \"required\" && <p className=\"errorMsg\">Your feedback/ comment is required!</p>}\r\n\r\n                            <IonRow class=\"ion-justify-content-center\" style={{ marginTop: \"5%\", marginBottom: \"3%\" }}>\r\n                                <IonButton size=\"large\" id=\"feedbackBtn\" type=\"submit\">SUBMIT</IonButton>\r\n                            </IonRow>\r\n                        </form>\r\n                    </IonGrid>\r\n                </IonContent>\r\n            </IonPage>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default OpenHouseFeedback;"]},"metadata":{},"sourceType":"module"}