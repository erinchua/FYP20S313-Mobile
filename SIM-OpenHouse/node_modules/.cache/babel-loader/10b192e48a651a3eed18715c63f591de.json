{"ast":null,"code":"import _slicedToArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{IonGrid,IonRow,IonCol,IonButton,IonRouterLink,IonAlert}from'@ionic/react';import React,{useState}from'react';import'../css/Global.css';import'../css/ProgrammeTalks.css';import{faPlus}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';var ProgTalkSchedule=function ProgTalkSchedule(props){var programmeTalkDay1=props.programmeTalk.filter(function(talk){return talk.date==props.openhouseDates[0];});var programmeTalkDay2=props.programmeTalk.filter(function(talk){return talk.date==props.openhouseDates[1];});{/* Register Alert */}var _useState=useState(false),_useState2=_slicedToArray(_useState,2),registerSuccess=_useState2[0],setRegisterSuccess=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),registerFail=_useState4[0],setRegisterFail=_useState4[1];var displayRegisterAlert=function displayRegisterAlert(){{/* Logic to check if there is another existing programme in My Schedule that is the same day & timing \r\n          of the programme the user wants to add*/}{/* if (exist) {\r\n             setRegisterSuccess(true);\r\n             setRegisterFail(false);\r\n         } else {\r\n             setRegisterFail(true);\r\n            setRegisterSuccess(false);\r\n        } */}{/* set state to disable the + btn in else {} */}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IonAlert,{isOpen:registerSuccess,onDidDismiss:function onDidDismiss(){return setRegisterSuccess(false);},cssClass:\"alertBox\",mode:\"md\",header:'Successfully Registered',message:'You have successfully registered for the programme talk and it has been successfully added to My Schedule.',buttons:['Close']}),/*#__PURE__*/React.createElement(IonAlert,{isOpen:registerFail,onDidDismiss:function onDidDismiss(){return setRegisterFail(false);},cssClass:\"alertBox\",mode:\"md\",header:'Registration Unsuccessful',message:'There exists an open house programme in your scheduler at this timing. Please remove the existing programme from your scheduler first!',buttons:['Close']}),/*#__PURE__*/React.createElement(IonGrid,{className:\"progTalk-TableGrid\"},/*#__PURE__*/React.createElement(IonRow,{className:\"ion-justify-content-center progTalk-TableHeader\"},/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"3\",className:\"progTalk-DataHeader ion-text-wrap\"},\"Programme Talk\"),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"3\",className:\"progTalk-DataHeader ion-text-wrap\"},\"Awarding University\"),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"2\",className:\"progTalk-DataHeader ion-text-wrap\"},\"Time\"),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"2\",className:\"progTalk-DataHeader ion-text-wrap\"},\"Venue\"),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"2\",className:\"progTalk-DataHeader ion-text-wrap\"},\"Add to My Schedule\")),props.day1==='day1'?programmeTalkDay1.map(function(programmeTalk){return/*#__PURE__*/React.createElement(IonRow,{className:\"ion-justify-content-center\",id:\"progTalk-DataRow\"},/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"3\",className:\"progTalk-DataInfo ion-text-wrap progName\"},/*#__PURE__*/React.createElement(IonRouterLink,{href:\"progTalkInfo\",id:\"uniLink\"},programmeTalk.talkName)),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"3\",className:\"progTalk-DataInfo ion-text-wrap\",id:\"awardingUni\"},programmeTalk.awardingUni,\" \"),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"2\",className:\"progTalk-DataInfo ion-text-wrap\",id:\"talkTime\"},programmeTalk.startTime+\" to \"+programmeTalk.endTime),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"2\",className:\"progTalk-DataInfo ion-text-wrap\",id:\"talkVenue\"},programmeTalk.venue),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"2\",className:\"progTalk-DataInfo ion-text-wrap\",id:\"addCol\"},/*#__PURE__*/React.createElement(IonButton,{className:\"progTalk-DataBtn\",id:\"addBtn\",size:\"small\",style:{marginTop:\"-5%\",marginBottom:\"-5%\"},onClick:displayRegisterAlert},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,size:\"lg\"}))));}):'',props.day2==='day2'?programmeTalkDay2.map(function(programmeTalk){return/*#__PURE__*/React.createElement(IonRow,{className:\"ion-justify-content-center\",id:\"progTalk-DataRow\"},/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"3\",className:\"progTalk-DataInfo ion-text-wrap progName\"},/*#__PURE__*/React.createElement(IonRouterLink,{href:\"ProgTalkInfo\",id:\"uniLink\"},programmeTalk.talkName)),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"3\",className:\"progTalk-DataInfo ion-text-wrap\",id:\"awardingUni\"},programmeTalk.awardingUni),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"2\",className:\"progTalk-DataInfo ion-text-wrap\",id:\"talkTime\"},programmeTalk.startTime+\" to \"+programmeTalk.endTime),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"2\",className:\"progTalk-DataInfo ion-text-wrap\",id:\"talkVenue\"},programmeTalk.venue),/*#__PURE__*/React.createElement(IonCol,{\"size-sizeSm\":\"2\",className:\"progTalk-DataInfo ion-text-wrap\",id:\"addCol\"},/*#__PURE__*/React.createElement(IonButton,{className:\"progTalk-DataBtn\",id:\"addBtn\",size:\"small\",style:{marginTop:\"-5%\",marginBottom:\"-5%\"},onClick:displayRegisterAlert},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,size:\"lg\"}))));}):''));};export default ProgTalkSchedule;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/components/ProgTalkSchedule.tsx"],"names":["IonGrid","IonRow","IonCol","IonButton","IonRouterLink","IonAlert","React","useState","faPlus","FontAwesomeIcon","ProgTalkSchedule","props","programmeTalkDay1","programmeTalk","filter","talk","date","openhouseDates","programmeTalkDay2","registerSuccess","setRegisterSuccess","registerFail","setRegisterFail","displayRegisterAlert","day1","map","talkName","awardingUni","startTime","endTime","venue","marginTop","marginBottom","day2"],"mappings":"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","sourcesContent":["import { IonGrid, IonRow, IonCol, IonButton, IonRouterLink, IonAlert } from '@ionic/react';\r\nimport React, { useState } from 'react';\r\n\r\nimport '../css/Global.css';\r\nimport '../css/ProgrammeTalks.css'\r\n\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst ProgTalkSchedule: React.FC<{\r\n    day1: any;\r\n    day2: any;\r\n    programmeTalk: any;\r\n    openhouseDates: any;\r\n\r\n}> = props => {\r\n\r\n    const programmeTalkDay1 = props.programmeTalk\r\n        .filter((talk: any) => {\r\n            return talk.date == props.openhouseDates[0]\r\n        })\r\n\r\n    const programmeTalkDay2 = props.programmeTalk\r\n        .filter((talk: any) => {\r\n            return talk.date == props.openhouseDates[1]\r\n        })\r\n\r\n    {/* Register Alert */ }\r\n    const [registerSuccess, setRegisterSuccess] = useState(false);\r\n    const [registerFail, setRegisterFail] = useState(false);\r\n\r\n    const displayRegisterAlert = () => {\r\n        {/* Logic to check if there is another existing programme in My Schedule that is the same day & timing \r\n          of the programme the user wants to add*/}\r\n\r\n        {/* if (exist) {\r\n             setRegisterSuccess(true);\r\n             setRegisterFail(false);\r\n         } else {\r\n             setRegisterFail(true);\r\n            setRegisterSuccess(false);\r\n        } */}\r\n\r\n        {/* set state to disable the + btn in else {} */ }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <IonAlert\r\n                isOpen={registerSuccess}\r\n                onDidDismiss={() => setRegisterSuccess(false)}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Successfully Registered'}\r\n                message={'You have successfully registered for the programme talk and it has been successfully added to My Schedule.'}\r\n                buttons={['Close']}\r\n            ></IonAlert>\r\n\r\n            <IonAlert\r\n                isOpen={registerFail}\r\n                onDidDismiss={() => setRegisterFail(false)}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Registration Unsuccessful'}\r\n                message={'There exists an open house programme in your scheduler at this timing. Please remove the existing programme from your scheduler first!'}\r\n                buttons={['Close']}\r\n            ></IonAlert>\r\n\r\n            <IonGrid className=\"progTalk-TableGrid\">\r\n                <IonRow className=\"ion-justify-content-center progTalk-TableHeader\">\r\n                    <IonCol size-sizeSm=\"3\" className=\"progTalk-DataHeader ion-text-wrap\">Programme Talk</IonCol>\r\n                    <IonCol size-sizeSm=\"3\" className=\"progTalk-DataHeader ion-text-wrap\">Awarding University</IonCol>\r\n                    <IonCol size-sizeSm=\"2\" className=\"progTalk-DataHeader ion-text-wrap\">Time</IonCol>\r\n                    <IonCol size-sizeSm=\"2\" className=\"progTalk-DataHeader ion-text-wrap\">Venue</IonCol>\r\n                    <IonCol size-sizeSm=\"2\" className=\"progTalk-DataHeader ion-text-wrap\">Add to My Schedule</IonCol>\r\n                </IonRow>\r\n\r\n                {props.day1 === 'day1' ?\r\n                    programmeTalkDay1.map((programmeTalk: any) => {\r\n                        return (\r\n                            <IonRow className=\"ion-justify-content-center\" id=\"progTalk-DataRow\">\r\n                                <IonCol size-sizeSm=\"3\" className=\"progTalk-DataInfo ion-text-wrap progName\">\r\n                                    <IonRouterLink href=\"progTalkInfo\" id=\"uniLink\" >\r\n                                        {programmeTalk.talkName}\r\n                                    </IonRouterLink>\r\n                                </IonCol>\r\n\r\n                                <IonCol size-sizeSm=\"3\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"awardingUni\">{programmeTalk.awardingUni} </IonCol>\r\n                                <IonCol size-sizeSm=\"2\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"talkTime\">{programmeTalk.startTime + \" to \" + programmeTalk.endTime}</IonCol>\r\n                                <IonCol size-sizeSm=\"2\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"talkVenue\">{programmeTalk.venue}</IonCol>\r\n                                <IonCol size-sizeSm=\"2\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"addCol\">\r\n                                    <IonButton className=\"progTalk-DataBtn\" id=\"addBtn\" size=\"small\" style={{ marginTop: \"-5%\", marginBottom: \"-5%\" }} onClick={displayRegisterAlert}>\r\n                                        <FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        )\r\n                    })\r\n                    : ''}\r\n\r\n\r\n\r\n                {props.day2 === 'day2' ?\r\n                    programmeTalkDay2.map((programmeTalk: any) => {\r\n                        return (\r\n                            <IonRow className=\"ion-justify-content-center\" id=\"progTalk-DataRow\">\r\n                                <IonCol size-sizeSm=\"3\" className=\"progTalk-DataInfo ion-text-wrap progName\">\r\n                                    <IonRouterLink href=\"ProgTalkInfo\" id=\"uniLink\">\r\n                                        {programmeTalk.talkName}\r\n                                    </IonRouterLink>\r\n                                </IonCol>\r\n\r\n                                <IonCol size-sizeSm=\"3\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"awardingUni\">{programmeTalk.awardingUni}</IonCol>\r\n                                <IonCol size-sizeSm=\"2\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"talkTime\">{programmeTalk.startTime + \" to \" + programmeTalk.endTime}</IonCol>\r\n                                <IonCol size-sizeSm=\"2\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"talkVenue\">{programmeTalk.venue}</IonCol>\r\n                                <IonCol size-sizeSm=\"2\" className=\"progTalk-DataInfo ion-text-wrap\" id=\"addCol\">\r\n                                    <IonButton className=\"progTalk-DataBtn\" id=\"addBtn\" size=\"small\" style={{ marginTop: \"-5%\", marginBottom: \"-5%\" }} onClick={displayRegisterAlert}>\r\n                                        <FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>)\r\n                    }) : ''\r\n                }\r\n            </IonGrid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProgTalkSchedule;"]},"metadata":{},"sourceType":"module"}