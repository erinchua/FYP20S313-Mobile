{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\Announcements.tsx\";\nimport { IonCol, IonContent, IonGrid, IonHeader, IonLabel, IonPage, IonRow, IonTitle } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport '../css/Global.css';\nimport '../css/Announcements.css';\nimport TopNav from '../components/TopNav';\nimport { db } from '../firebase';\nimport { toAnnouncement } from '../modules/map';\nimport { toDateObject } from '../modules/convert';\nimport { sortDsc } from '../modules/compare';\n\nconst Announcements = () => {\n  const [announcements, setAnnouncements] = useState([]);\n  const current = announcements.filter(news => {\n    return new Date().getTime() > toDateObject(news.date, news.time).getTime();\n  }).sort((a, b) => sortDsc(a.ms, b.ms));\n  useEffect(() => {\n    const fetchData = async () => {\n      await db.collection('Announcements').get().then(({\n        docs\n      }) => {\n        setAnnouncements(docs.map(toAnnouncement));\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Announcements\",\n    route: \"/u/home\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, current.length > 0 ? /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"announcementGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, current.map(news => {\n    const day = toDateObject(news.date, news.time).toDateString().split(\" \")[0];\n    return /*#__PURE__*/React.createElement(IonRow, {\n      className: \"announcementRow\",\n      key: news.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      className: \"announcementColDetails\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      id: \"announcementTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 45\n      }\n    }, news.title)), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(IonLabel, {\n      id: \"announcementDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 45\n      }\n    }, \"Posted on \", news.date, \" (\", day, \"), \", news.time)), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(IonLabel, {\n      id: \"announcementDetails\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 45\n      }\n    }, news.details))));\n  })) : /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"noAnnouncementGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    id: \"noAnnouncementRow\",\n    class: \"ion-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    id: \"noAnnnouncementCol\",\n    class: \"ion-text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    id: \"noAnnouncementTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }, \"There are currently no announcements\"))))));\n};\n\nexport default Announcements;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/Announcements.tsx"],"names":["IonCol","IonContent","IonGrid","IonHeader","IonLabel","IonPage","IonRow","IonTitle","React","useEffect","useState","TopNav","db","toAnnouncement","toDateObject","sortDsc","Announcements","announcements","setAnnouncements","current","filter","news","Date","getTime","date","time","sort","a","b","ms","fetchData","collection","get","then","docs","map","length","day","toDateString","split","id","title","details"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,OAA7B,EAAsCC,SAAtC,EAAiDC,QAAjD,EAA2DC,OAA3D,EAAoEC,MAApE,EAA4EC,QAA5E,QAA4F,cAA5F;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,mBAAP;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,SAAuBC,cAAvB,QAA6C,gBAA7C;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAGA,MAAMC,aAAuB,GAAG,MAAM;AAElC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAiB,EAAjB,CAAlD;AAEA,QAAMS,OAAO,GAAGF,aAAa,CAACG,MAAd,CAAqBC,IAAI,IAAI;AAAE,WAAO,IAAIC,IAAJ,GAAWC,OAAX,KAAuBT,YAAY,CAACO,IAAI,CAACG,IAAN,EAAYH,IAAI,CAACI,IAAjB,CAAZ,CAAmCF,OAAnC,EAA9B;AAA4E,GAA3G,EAA6GG,IAA7G,CAAkH,CAACC,CAAD,EAAIC,CAAJ,KAAUb,OAAO,CAACY,CAAC,CAACE,EAAH,EAAOD,CAAC,CAACC,EAAT,CAAnI,CAAhB;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMqB,SAAS,GAAG,YAAY;AAC1B,YAAMlB,EAAE,CAACmB,UAAH,CAAc,eAAd,EAA+BC,GAA/B,GAAqCC,IAArC,CAA0C,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAC1DhB,QAAAA,gBAAgB,CAACgB,IAAI,CAACC,GAAL,CAAStB,cAAT,CAAD,CAAhB;AACH,OAFK,CAAN;AAGH,KAJD;;AAKAiB,IAAAA,SAAS;AACZ,GAPQ,EAON,EAPM,CAAT;AASA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,eAAd;AAA8B,IAAA,KAAK,EAAC,SAApC;AAA8C,IAAA,SAAS,EAAE,IAAzD;AAA+D,IAAA,SAAS,EAAE,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAKI,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,OAAO,CAACiB,MAAR,GAAiB,CAAjB,gBACG,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKjB,OAAO,CAACgB,GAAR,CAAYd,IAAI,IAAI;AACjB,UAAMgB,GAAG,GAAGvB,YAAY,CAACO,IAAI,CAACG,IAAN,EAAYH,IAAI,CAACI,IAAjB,CAAZ,CAAmCa,YAAnC,GAAkDC,KAAlD,CAAwD,GAAxD,EAA6D,CAA7D,CAAZ;AAEA,wBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,GAAG,EAAElB,IAAI,CAACmB,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCnB,IAAI,CAACoB,KAAvC,CADJ,CADJ,eAKI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA2CpB,IAAI,CAACG,IAAhD,QAAwDa,GAAxD,SAAgEhB,IAAI,CAACI,IAArE,CADJ,CALJ,eASI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCJ,IAAI,CAACqB,OAAzC,CADJ,CATJ,CADJ,CADJ;AAiBH,GApBA,CAFL,CADH,gBA2BG,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,oBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,mBAAX;AAA+B,IAAA,KAAK,EAAC,wBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,oBAAX;AAAgC,IAAA,KAAK,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,CADJ,CADJ,CA5BR,CALJ,CADJ;AA8CH,CA7DD;;AA+DA,eAAe1B,aAAf","sourcesContent":["import { IonCol, IonContent, IonGrid, IonHeader, IonLabel, IonPage, IonRow, IonTitle } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport '../css/Global.css';\r\nimport '../css/Announcements.css';\r\nimport TopNav from '../components/TopNav';\r\nimport { db } from '../firebase';\r\nimport { Announcement, toAnnouncement } from '../modules/map';\r\nimport { toDateObject } from '../modules/convert';\r\nimport { sortDsc } from '../modules/compare';\r\n\r\n\r\nconst Announcements: React.FC = () => {\r\n\r\n    const [announcements, setAnnouncements] = useState<Announcement[]>([]);\r\n\r\n    const current = announcements.filter(news => { return new Date().getTime() > toDateObject(news.date, news.time).getTime() }).sort((a, b) => sortDsc(a.ms, b.ms));\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await db.collection('Announcements').get().then(({ docs }) => {\r\n                setAnnouncements(docs.map(toAnnouncement));\r\n            });\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <TopNav title=\"Announcements\" route='/u/home' backarrow={true} hamburger={true} />\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen={true}>\r\n                {current.length > 0 ? (\r\n                    <IonGrid id=\"announcementGrid\">\r\n\r\n                        {current.map(news => {\r\n                            const day = toDateObject(news.date, news.time).toDateString().split(\" \")[0];\r\n\r\n                            return (\r\n                                <IonRow className=\"announcementRow\" key={news.id}>\r\n                                    <IonCol className=\"announcementColDetails\">\r\n                                        <IonRow>\r\n                                            <IonTitle id=\"announcementTitle\">{news.title}</IonTitle>\r\n                                        </IonRow>\r\n\r\n                                        <IonRow>\r\n                                            <IonLabel id=\"announcementDate\">Posted on {news.date} ({day}), {news.time}</IonLabel>\r\n                                        </IonRow>\r\n\r\n                                        <IonRow>\r\n                                            <IonLabel id=\"announcementDetails\">{news.details}</IonLabel>\r\n                                        </IonRow>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                            )\r\n                        })}\r\n                        \r\n                    </IonGrid>\r\n                ) : (\r\n                    <IonGrid id=\"noAnnouncementGrid\">\r\n                        <IonRow id=\"noAnnouncementRow\" class=\"ion-align-items-center\">\r\n                            <IonCol id=\"noAnnnouncementCol\" class=\"ion-text-center\">\r\n                                <IonTitle id=\"noAnnouncementTitle\">There are currently no announcements</IonTitle>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                )}\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n\r\n};\r\n\r\nexport default Announcements;"]},"metadata":{},"sourceType":"module"}