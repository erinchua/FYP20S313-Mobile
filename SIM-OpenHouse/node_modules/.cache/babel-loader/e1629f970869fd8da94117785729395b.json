{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\ProgrammeTalks.tsx\";\nimport { IonButton, IonButtons, IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\nimport React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\nimport '../css/Global.css';\nimport '../css/ProgrammeTalks.css';\nimport TopNav from '../components/TopNav';\nimport ProgTalkSchedule from '../components/ProgTalkSchedule';\n\nconst ProgrammeTalks = () => {\n  const [tab, setTab] = useState('schedule');\n  const [dayNum, setDayNum] = useState('day1'); // useEffect (() => {\n  //     handleSchedule();\n  // }, []);\n\n  const handleDayOne = () => {\n    setDayNum('day1');\n  };\n\n  const handleDayTwo = () => {\n    setDayNum('day2');\n  };\n\n  const handleSchedule = () => {\n    setTab('schedule');\n  };\n\n  const handleLiveTalks = () => {\n    setTab('liveTalks');\n  };\n\n  const handlePastRec = () => {\n    setTab('pastRecordings');\n  };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Programme Talks\",\n    route: \"/u/openHouseMain\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"contentCon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"programmeTalksGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    className: \"segmentHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    className: \"segmentHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: tab,\n    className: \"segmentHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"schedule\",\n    className: \"segmentBtn ion-text-wrap\",\n    id: \"progTalkSchedule\",\n    onClick: handleSchedule,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }, \"Schedule\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"liveTalks\",\n    className: \"segmentBtn ion-text-wrap\",\n    id: \"progTalkLiveTalk\",\n    onClick: handleLiveTalks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 37\n    }\n  }, \"Live Talks\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"pastRecordings\",\n    className: \"segmentBtn ion-text-wrap\",\n    id: \"progTalkPastRec\",\n    onClick: handlePastRec,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }\n  }, \"Past Recordings\")))))), tab === 'schedule' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"progTalk-IonRowCol progTalkIonGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"progTalk-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    onIonChange: e => console.log(`${e.detail.value}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 45\n    }\n  }, \"Day 1: 21 Nov 2020\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"progTalk-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 45\n    }\n  }, \"Day 2: 22 Nov 2020\"))))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    className: \"filterHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    className: \"filterHeaderToolBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"end\",\n    id: \"filterIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: faFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 49\n    }\n  }))))))), /*#__PURE__*/React.createElement(ProgTalkSchedule, {\n    day1: dayNum,\n    day2: dayNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  })) : '', tab === 'liveTalks' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"progTalk-ionRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"progTalk-ionRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"progTalk-ionRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    onIonChange: e => console.log(`${e.detail.value}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"performancesContent-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 45\n    }\n  }, \"Day 1: 21 Nov 2020\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"performancesContent-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 45\n    }\n  }, \"Day 2: 22 Nov 2020\")))))), /*#__PURE__*/React.createElement(ProgTalkSchedule, {\n    day1: dayNum,\n    day2: dayNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \"Live Talks\")) : ''));\n};\n\nexport default withRouter(ProgrammeTalks);","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/ProgrammeTalks.tsx"],"names":["IonButton","IonButtons","IonCol","IonContent","IonGrid","IonHeader","IonPage","IonRow","IonSegment","IonSegmentButton","IonToolbar","React","useState","withRouter","FontAwesomeIcon","faFilter","TopNav","ProgTalkSchedule","ProgrammeTalks","tab","setTab","dayNum","setDayNum","handleDayOne","handleDayTwo","handleSchedule","handleLiveTalks","handlePastRec","e","console","log","detail","value"],"mappings":"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","sourcesContent":["import { IonButton, IonButtons, IonCol, IonContent, IonGrid, IonHeader, IonImg, IonPage, IonRouterLink, IonRow, IonSegment, IonSegmentButton, IonText, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport '../css/Global.css';\r\nimport '../css/ProgrammeTalks.css';\r\n\r\nimport TopNav from '../components/TopNav'\r\nimport ProgTalkSchedule from '../components/ProgTalkSchedule';\r\n\r\n\r\nconst ProgrammeTalks: React.FC = () => {\r\n    const [tab, setTab] = useState('schedule');\r\n    const [dayNum, setDayNum] = useState('day1');\r\n\r\n    \r\n    // useEffect (() => {\r\n    //     handleSchedule();\r\n    // }, []);\r\n\r\n\r\n    const handleDayOne = () => {\r\n        setDayNum('day1');\r\n    }\r\n\r\n    const handleDayTwo = () => {\r\n        setDayNum('day2');\r\n    }\r\n\r\n    const handleSchedule = () => {\r\n        setTab('schedule');\r\n    }\r\n    const handleLiveTalks = () => {\r\n        setTab('liveTalks');\r\n    }\r\n    \r\n    const handlePastRec = () => {\r\n        setTab('pastRecordings');\r\n    }\r\n\r\n\r\n    return(\r\n        <IonPage>\r\n            <TopNav title=\"Programme Talks\" route=\"/u/openHouseMain\" backarrow={ true } hamburger={ true } />\r\n            \r\n            <IonContent fullscreen className=\"contentCon\">\r\n                <IonGrid id=\"programmeTalksGrid\">\r\n                    <IonRow>\r\n                        <IonHeader className=\"segmentHeader\">\r\n                            <IonToolbar className=\"segmentHeader\">\r\n                                <IonSegment scrollable value={tab} className=\"segmentHeader\">\r\n                                    <IonSegmentButton value=\"schedule\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkSchedule\" onClick={handleSchedule}>Schedule</IonSegmentButton>\r\n                                    <IonSegmentButton value=\"liveTalks\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkLiveTalk\" onClick={handleLiveTalks}>Live Talks</IonSegmentButton>\r\n                                    <IonSegmentButton value=\"pastRecordings\" className=\"segmentBtn ion-text-wrap\" id=\"progTalkPastRec\" onClick={handlePastRec}>Past Recordings</IonSegmentButton>\r\n                                </IonSegment>\r\n                            </IonToolbar>\r\n                        </IonHeader>\r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                {/* Programme Talks Schedule */}\r\n                {tab === 'schedule' ? \r\n                    <>\r\n                        <IonGrid className=\"progTalk-IonRowCol progTalkIonGrid\">\r\n                            <IonRow className=\"progTalk-IonRowCol\">\r\n                                <IonCol className=\"progTalk-IonRowCol\">\r\n                                    <IonToolbar>\r\n                                        <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                                            <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"progTalk-DayTab\">Day 1: 21 Nov 2020</IonSegmentButton>\r\n                                            <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"progTalk-DayTab\">Day 2: 22 Nov 2020</IonSegmentButton>\r\n                                        </IonSegment>\r\n                                    </IonToolbar>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            <IonRow>\r\n                                <IonHeader className=\"filterHeader\">\r\n                                    <IonToolbar className=\"filterHeaderToolBar\">\r\n                                        <IonButtons slot=\"end\" id=\"filterIcon\">\r\n                                            <IonButton>\r\n                                                <FontAwesomeIcon size=\"lg\" icon={faFilter} />                                    \r\n                                            </IonButton>\r\n                                        </IonButtons>\r\n                                    </IonToolbar>\r\n                                </IonHeader>\r\n                            </IonRow>                    \r\n                        </IonGrid>\r\n\r\n                        <ProgTalkSchedule day1={dayNum} day2={dayNum} />\r\n                    </> : ''\r\n                }\r\n\r\n\r\n                {/* Live Talks */}\r\n                {tab === 'liveTalks' ? \r\n                    <>\r\n                        <IonGrid className=\"progTalk-ionRowCol\">\r\n                            <IonRow className=\"progTalk-ionRowCol\">\r\n                                <IonCol className=\"progTalk-ionRowCol\">\r\n                                    <IonToolbar>\r\n                                        <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                                            <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"performancesContent-heading\">Day 1: 21 Nov 2020</IonSegmentButton>\r\n                                            <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"performancesContent-heading\">Day 2: 22 Nov 2020</IonSegmentButton>\r\n                                        </IonSegment>\r\n                                    </IonToolbar>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>\r\n                        <ProgTalkSchedule day1={dayNum} day2={dayNum} />\r\n                        <h2>Live Talks</h2>\r\n                    </> : ''\r\n                }\r\n\r\n\r\n            </IonContent>\r\n\r\n        </IonPage>\r\n\r\n    );\r\n};\r\n\r\nexport default withRouter(ProgrammeTalks);"]},"metadata":{},"sourceType":"module"}