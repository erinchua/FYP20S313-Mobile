{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\MySchedule.tsx\";\nimport { IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport '../css/Global.css';\nimport '../css/MySchedule.css';\nimport TopNav from '../components/TopNav';\nimport MyScheduleContent from '../components/MyScheduleContent';\nimport { db } from '../firebase';\nimport { useAuth } from '../modules/auth';\nimport { toSchedule } from '../modules/map';\nimport { toDateObject } from '../modules/convert';\n\nconst MySchedule = () => {\n  const {\n    userID\n  } = useAuth();\n  const [dayNum, setDayNum] = useState(\"day1\");\n  const [openhouseDates, setOpenhouseDates] = useState([]);\n  const [openHouseProgs, setOpenHouseProgs] = useState([]);\n  const [openHouseHours, setOpenHouseHours] = useState([]);\n\n  const handleDayOne = () => {\n    setDayNum(\"day1\");\n  };\n\n  const handleDayTwo = () => {\n    setDayNum(\"day2\");\n  };\n\n  useEffect(() => {\n    db.collection('Openhouse').get().then(snapshot => {\n      const dates = [];\n      const hours = [];\n      snapshot.forEach(doc => {\n        const data = doc.get('day');\n        if (Array.isArray(data)) data.forEach(day => {\n          dates.push(day.date);\n          const duration = Math.floor((+toDateObject(day.date, day.endTime) - +toDateObject(day.date, day.startTime)) / 3600000);\n          hours.push(duration);\n        });\n      });\n      setOpenhouseDates(dates);\n      setOpenHouseHours(hours);\n    }).catch(error => console.log(error));\n    db.collection('PersonalScheduler').doc(userID).onSnapshot(snapshot => {\n      const registered = snapshot.data().registeredProgrammes;\n      const scheduleProgs = [];\n      registered.forEach(item => {\n        const itemType = item.split(\"-\");\n\n        switch (itemType[0]) {\n          case \"talk\":\n            return db.collection('ProgrammeTalks').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\n\n          case \"tour\":\n            return db.collection('GuidedTours').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\n\n          case \"performance\":\n            return db.collection('Performances').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\n\n          case \"activity\":\n            return db.collection('GamesActivities').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\n\n          default:\n            return;\n        }\n      });\n      setTimeout(() => setOpenHouseProgs(scheduleProgs.map(toSchedule)), 500);\n    });\n  }, [userID]);\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"My Schedule\",\n    route: \"/u/home\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    className: \"myScheduleIonContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"myScheduleGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-justify-content-center openHouseDateRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    sizeSm: \"6\",\n    className: \"openHouseDateCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateTitleText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, \"From: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, openhouseDates[0]), \" \"), /*#__PURE__*/React.createElement(IonCol, {\n    sizeSm: \"6\",\n    className: \"openHouseDateCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateTitleText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, \"To: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"openHouseDateText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, openhouseDates[1]), \" \")), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"mySchedule-IonRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    onIonChange: e => console.log(`${e.detail.value}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    onClick: () => handleDayOne(),\n    className: \"mySchedule-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, \"Day 1: \", openhouseDates[0], \"  \"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    onClick: () => handleDayTwo(),\n    className: \"mySchedule-DayTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, \"Day 2: \", openhouseDates[1], \"  \"))))), /*#__PURE__*/React.createElement(MyScheduleContent, {\n    day1: dayNum,\n    day2: dayNum,\n    openhouseDates: openhouseDates,\n    openHouseHours: openHouseHours,\n    openHouseProgs: openHouseProgs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default MySchedule;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/MySchedule.tsx"],"names":["IonCol","IonContent","IonGrid","IonHeader","IonPage","IonRow","IonSegment","IonSegmentButton","IonToolbar","React","useEffect","useState","TopNav","MyScheduleContent","db","useAuth","toSchedule","toDateObject","MySchedule","userID","dayNum","setDayNum","openhouseDates","setOpenhouseDates","openHouseProgs","setOpenHouseProgs","openHouseHours","setOpenHouseHours","handleDayOne","handleDayTwo","collection","get","then","snapshot","dates","hours","forEach","doc","data","Array","isArray","day","push","date","duration","Math","floor","endTime","startTime","catch","error","console","log","onSnapshot","registered","registeredProgrammes","scheduleProgs","item","itemType","split","setTimeout","map","e","detail","value"],"mappings":"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","sourcesContent":["import { IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport '../css/Global.css';\r\nimport '../css/MySchedule.css';\r\nimport TopNav from '../components/TopNav';\r\nimport MyScheduleContent from '../components/MyScheduleContent';\r\nimport { db } from '../firebase';\r\nimport { useAuth } from '../modules/auth';\r\nimport { ScheduleItem, toSchedule } from '../modules/map';\r\nimport { toDateObject } from '../modules/convert';\r\n\r\nconst MySchedule: React.FC = () => {\r\n    const { userID } = useAuth();\r\n    const [dayNum, setDayNum] = useState(\"day1\");\r\n    const [openhouseDates, setOpenhouseDates] = useState([]);\r\n    const [openHouseProgs, setOpenHouseProgs] = useState<ScheduleItem[]>([]);\r\n    const [openHouseHours, setOpenHouseHours] = useState<any[]>([]);\r\n\r\n    const handleDayOne = () => {\r\n        setDayNum(\"day1\");\r\n    };\r\n    \r\n    const handleDayTwo = () => {\r\n        setDayNum(\"day2\");\r\n    };\r\n\r\n    useEffect(() => {\r\n    \r\n        db.collection('Openhouse').get().then(snapshot => {\r\n            const dates: any = [];\r\n            const hours: any = [];\r\n\r\n            snapshot.forEach(doc => {\r\n                const data = doc.get('day');\r\n\r\n                if (Array.isArray(data))\r\n                    data.forEach((day: any) => {\r\n                        dates.push(day.date);\r\n\r\n                        const duration = Math.floor((+toDateObject(day.date, day.endTime) - +toDateObject(day.date, day.startTime)) / 3600000);\r\n                        hours.push(duration);\r\n                    });\r\n            });\r\n\r\n            setOpenhouseDates(dates);\r\n            setOpenHouseHours(hours);\r\n        }).catch((error) => console.log(error));\r\n\r\n        db.collection('PersonalScheduler').doc(userID).onSnapshot((snapshot: any) => {\r\n            const registered = snapshot.data().registeredProgrammes;\r\n            const scheduleProgs: any = [];\r\n\r\n            registered.forEach((item: any) => {\r\n                const itemType = item.split(\"-\");\r\n\r\n                switch (itemType[0]) {\r\n                    case \"talk\":\r\n                        return db.collection('ProgrammeTalks').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\r\n                    case \"tour\":\r\n                        return db.collection('GuidedTours').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\r\n                    case \"performance\":\r\n                        return db.collection('Performances').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\r\n                    case \"activity\":\r\n                        return db.collection('GamesActivities').doc(item).onSnapshot(doc => scheduleProgs.push(doc.data()));\r\n                    default:\r\n                        return;\r\n                }\r\n            });\r\n            \r\n            setTimeout(() => setOpenHouseProgs(scheduleProgs.map(toSchedule)), 500);\r\n        });\r\n    }, [userID]);\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <TopNav title=\"My Schedule\" route='/u/home' backarrow={ true } hamburger = { true }/>\r\n            </IonHeader>\r\n            \r\n            <IonContent fullscreen={true} className=\"myScheduleIonContent\">\r\n                <IonGrid className=\"myScheduleGrid\">\r\n                    <IonRow className=\"ion-justify-content-center openHouseDateRow\">\r\n                        <IonCol sizeSm=\"6\" className=\"openHouseDateCol\">\r\n                            <span className=\"openHouseDateTitleText\">From: </span> \r\n                            <span className=\"openHouseDateText\">{openhouseDates[0]}</span> {/* Date is not hardcoded */}\r\n                        </IonCol>\r\n                        <IonCol sizeSm=\"6\" className=\"openHouseDateCol\">\r\n                            <span className=\"openHouseDateTitleText\">To: </span> \r\n                            <span className=\"openHouseDateText\">{openhouseDates[1]}</span> {/* Date is not hardcoded */}\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow className=\"mySchedule-IonRowCol\">\r\n                        <IonToolbar>\r\n                            <IonSegment scrollable value={dayNum} onIonChange={(e) => console.log(`${e.detail.value}`)}>\r\n                                <IonSegmentButton value=\"day1\" onClick={() => handleDayOne()} className=\"mySchedule-DayTab\">\r\n                                    Day 1: {openhouseDates[0]}  {/* Date is not hardcoded, only Day 1: is */}\r\n                                </IonSegmentButton>\r\n                                \r\n                                <IonSegmentButton value=\"day2\" onClick={() => handleDayTwo()} className=\"mySchedule-DayTab\">\r\n                                    Day 2: {openhouseDates[1]}  {/* Date is not hardcoded, only Day 2: is */}\r\n                                </IonSegmentButton>\r\n                            </IonSegment>\r\n                        </IonToolbar>\r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <MyScheduleContent day1={dayNum} day2={dayNum} openhouseDates={openhouseDates} openHouseHours={openHouseHours} openHouseProgs={openHouseProgs} />\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default MySchedule;"]},"metadata":{},"sourceType":"module"}