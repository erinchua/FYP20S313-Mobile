{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\GuidedTours.tsx\";\nimport { IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonTitle, IonToolbar } from '@ionic/react';\nimport React, { useState, useEffect } from 'react';\nimport { db } from \"../firebase\";\nimport \"../css/Global.css\";\nimport \"../css/GuidedTours.css\";\nimport TopNav from '../components/TopNav';\nimport GuidedTourContent from '../components/GuidedTourContent';\n\nconst GuidedTours = () => {\n  const [dayNum, setDayNum] = useState('day1');\n  const [openhouseDates, setOpenhouseDates] = useState([]);\n  const [guidedTours, setGuidedTours] = useState([]);\n\n  const handleDayOne = () => {\n    setDayNum('day1');\n  };\n\n  const handleDayTwo = () => {\n    setDayNum('day2');\n  };\n\n  useEffect(() => {\n    const dates = [];\n    db.collection(\"Openhouse\").get().then(snapshot => {\n      snapshot.forEach(doc => {\n        const data = doc.get('day');\n        data.forEach(day => {\n          dates.push(day.date);\n        });\n      });\n      setOpenhouseDates(dates);\n    }).catch(error => console.log(error));\n    db.collection(\"GuidedTours\").get().then(snapshot => {\n      const tours = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        tours.push(data);\n      });\n      setGuidedTours(tours);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Guided Tours\",\n    route: \"/u/openHouseMain\",\n    backarrow: true,\n    hamburger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IonToolbar, {\n    id: \"guidedTours-schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    id: \"guidedTours-schedule-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Schedule\"))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    id: \"guidedTours-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"guidedTours-ionRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    id: \"guidedTours-ionRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    id: \"guidedTours-ionRowCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    scrollable: true,\n    value: dayNum,\n    id: \"guidedTours-mainHeader\",\n    onIonChange: e => console.log(`${e.detail.value} segment selected`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day1\",\n    className: \"guidedTours-heading\",\n    onClick: handleDayOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  }, \"Day 1: 21 Nov 2020\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"day2\",\n    className: \"guidedTours-heading\",\n    onClick: handleDayTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 37\n    }\n  }, \"Day 2: 22 Nov 2020\"))))), /*#__PURE__*/React.createElement(GuidedTourContent, {\n    day1: dayNum,\n    day2: dayNum,\n    guidedTours: guidedTours,\n    openhouseDates: openhouseDates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default GuidedTours;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/GuidedTours.tsx"],"names":["IonCol","IonContent","IonGrid","IonHeader","IonPage","IonRow","IonSegment","IonSegmentButton","IonTitle","IonToolbar","React","useState","useEffect","db","TopNav","GuidedTourContent","GuidedTours","dayNum","setDayNum","openhouseDates","setOpenhouseDates","guidedTours","setGuidedTours","handleDayOne","handleDayTwo","dates","collection","get","then","snapshot","forEach","doc","data","day","push","date","catch","error","console","log","tours","e","detail","value"],"mappings":"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","sourcesContent":["import { IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { db } from \"../firebase\";\r\n\r\nimport \"../css/Global.css\";\r\nimport \"../css/GuidedTours.css\";\r\nimport TopNav from '../components/TopNav';\r\nimport GuidedTourContent from '../components/GuidedTourContent';\r\n\r\nconst GuidedTours: React.FC = () => {\r\n\r\n    const [dayNum, setDayNum] = useState('day1');\r\n    const [openhouseDates, setOpenhouseDates] = useState([])\r\n    const [guidedTours, setGuidedTours] = useState<any[]>([]);\r\n\r\n    const handleDayOne = () => {\r\n        setDayNum('day1');\r\n    }\r\n\r\n    const handleDayTwo = () => {\r\n        setDayNum('day2');\r\n    }\r\n    useEffect(() => {\r\n        const dates: any = [];\r\n\r\n        db.collection(\"Openhouse\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                snapshot.forEach((doc) => {\r\n                    const data = doc.get('day')\r\n                    data.forEach((day: any) => { dates.push(day.date) })\r\n                });\r\n                setOpenhouseDates(dates);\r\n            })\r\n            .catch((error) => console.log(error));\r\n\r\n        db.collection(\"GuidedTours\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                const tours: any = [];\r\n                snapshot.forEach((doc) => {\r\n                    const data = doc.data();\r\n                    tours.push(data);\r\n                });\r\n                setGuidedTours(tours);\r\n            })\r\n            .catch((error) => console.log(error));\r\n\r\n    }, [])\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <TopNav title=\"Guided Tours\" route=\"/u/openHouseMain\" backarrow={true} hamburger={true} />\r\n                <IonToolbar id=\"guidedTours-schedule\">\r\n                    <IonTitle id=\"guidedTours-schedule-text\">Schedule</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen id=\"guidedTours-content\">\r\n                <IonGrid id=\"guidedTours-ionRowCol\">\r\n                    <IonRow id=\"guidedTours-ionRowCol\">\r\n                        <IonCol id=\"guidedTours-ionRowCol\">\r\n                            <IonToolbar>\r\n                                <IonSegment scrollable value={dayNum} id=\"guidedTours-mainHeader\" onIonChange={(e) => console.log(`${e.detail.value} segment selected`)}>\r\n                                    <IonSegmentButton value=\"day1\" className=\"guidedTours-heading\" onClick={handleDayOne}>Day 1: 21 Nov 2020</IonSegmentButton>\r\n                                    <IonSegmentButton value=\"day2\" className=\"guidedTours-heading\" onClick={handleDayTwo}>Day 2: 22 Nov 2020</IonSegmentButton>\r\n                                </IonSegment>\r\n                            </IonToolbar>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                    <GuidedTourContent day1={dayNum} day2={dayNum} guidedTours={guidedTours} openhouseDates={openhouseDates} />\r\n                </IonGrid>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default GuidedTours;"]},"metadata":{},"sourceType":"module"}