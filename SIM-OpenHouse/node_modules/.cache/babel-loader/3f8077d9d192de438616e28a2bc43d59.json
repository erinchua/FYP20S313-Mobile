{"ast":null,"code":"import _slicedToArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{IonContent,IonPage,IonGrid,IonRow,IonCol,IonIcon,IonButton,IonItem,IonInput,IonList,IonAlert}from'@ionic/react';import React,{useRef,useState}from'react';import{useForm}from\"react-hook-form\";import{useHistory}from'react-router-dom';import{shieldCheckmarkOutline}from'ionicons/icons';import{auth}from'../firebase';import'../css/ForgetPassword3.css';import'../css/Global.css';import TopNav from'../components/TopNav';var ForgetPassword3=function ForgetPassword3(){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors,watch=_useForm.watch,reset=_useForm.reset,getValues=_useForm.getValues;var onSubmit=function onSubmit(data){//console.log(\"Submitted\");\n//console.log(data);\nvar code=new URLSearchParams(window.location.search).get('oobCode');auth.confirmPasswordReset(code,data.newPassword).catch(function(err){return console.log(err);});};var newPassword=useRef({});newPassword.current=watch(\"newPassword\",\"\");var history=useHistory();{/*For alert */}var _useState=useState(false),_useState2=_slicedToArray(_useState,2),resetPasswordSuccess=_useState2[0],setResetPasswordSuccess=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),resetPasswordFail=_useState4[0],setResetPasswordFail=_useState4[1];var displayAlert=function displayAlert(){var newPassword=getValues(\"newPassword\");var confirmNewPassword=getValues(\"confirmNewPassword\");if((newPassword!==\"\"||confirmNewPassword!==\"\")&&confirmNewPassword===newPassword){setResetPasswordSuccess(true);return console.log(\"Match\");}else{setResetPasswordFail(true);return console.log(\"Error\");}};var proceedToLogin=function proceedToLogin(){setResetPasswordSuccess(false);history.push(\"/login\");};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IonAlert,{isOpen:resetPasswordSuccess,onDidDismiss:proceedToLogin,cssClass:\"alertBox\",header:'Reset Password Successful',message:'Your password has been reset successfully. Please login again.',buttons:['Close']}),/*#__PURE__*/React.createElement(IonAlert,{isOpen:resetPasswordFail,onDidDismiss:function onDidDismiss(){return setResetPasswordFail(false);},cssClass:\"alertBox\",header:'Error',message:'Please fill up the required fields first!',buttons:['Okay']}),/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(TopNav,{title:\"Reset Password\",route:\"/main\",backarrow:true,hamburger:false}),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true,style:{display:\"flex\"}},/*#__PURE__*/React.createElement(IonGrid,{className:\"forgetPwdGrid\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(IonRow,{class:\"ion-justify-content-center\"},/*#__PURE__*/React.createElement(IonCol,null),/*#__PURE__*/React.createElement(IonCol,{size:\"6\",style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(IonIcon,{id:\"shield_logo\",icon:shieldCheckmarkOutline})),/*#__PURE__*/React.createElement(IonCol,null)),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonCol,null),/*#__PURE__*/React.createElement(IonCol,{size:\"10\"},/*#__PURE__*/React.createElement(IonList,null,/*#__PURE__*/React.createElement(\"p\",{id:\"text1\"},/*#__PURE__*/React.createElement(\"b\",null,\"Please enter your new password\")),/*#__PURE__*/React.createElement(IonItem,null,/*#__PURE__*/React.createElement(IonInput,{id:\"newPasswordID\",type:\"password\",placeholder:\"New Password\",name:\"newPassword\",ref:register({required:true,minLength:8,pattern:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[.,/<>#^~`@$!%*?&])[A-Za-z\\d.,/<>#~`^@$!%*?&]{8,}$/})})),errors.newPassword&&errors.newPassword.type===\"required\"&&/*#__PURE__*/React.createElement(\"div\",{className:\"errorMessage\"},\"Please type your new password!\"),errors.newPassword&&errors.newPassword.type===\"minLength\"&&/*#__PURE__*/React.createElement(\"div\",{className:\"errorMessage\"},\"Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"),errors.newPassword&&errors.newPassword.type===\"pattern\"&&/*#__PURE__*/React.createElement(\"div\",{className:\"errorMessage\"},\"Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"),/*#__PURE__*/React.createElement(IonItem,null,/*#__PURE__*/React.createElement(IonInput,{id:\"confirmNewPasswordID\",type:\"password\",placeholder:\"Confirm New Password\",name:\"confirmNewPassword\",ref:register({required:true,validate:function validate(value){return value===newPassword.current;}})})),errors.confirmNewPassword&&errors.confirmNewPassword.type===\"required\"&&/*#__PURE__*/React.createElement(\"div\",{className:\"errorMessage\"},\"Please confirm your password!\"),errors.confirmNewPassword&&errors.confirmNewPassword.type===\"validate\"&&/*#__PURE__*/React.createElement(\"div\",{className:\"errorMessage\"},\"Passwords do not match!\"))),/*#__PURE__*/React.createElement(IonCol,null)),/*#__PURE__*/React.createElement(IonRow,{class:\"ion-justify-content-center\",style:{marginTop:\"5%\"}},/*#__PURE__*/React.createElement(IonButton,{size:\"large\",id:\"resetPwdBtn\",type:\"submit\",onClick:displayAlert},\"RESET PASSWORD\")))))));};export default ForgetPassword3;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/ForgetPassword3.tsx"],"names":["IonContent","IonPage","IonGrid","IonRow","IonCol","IonIcon","IonButton","IonItem","IonInput","IonList","IonAlert","React","useRef","useState","useForm","useHistory","shieldCheckmarkOutline","auth","TopNav","ForgetPassword3","register","handleSubmit","errors","watch","reset","getValues","onSubmit","data","code","URLSearchParams","window","location","search","get","confirmPasswordReset","newPassword","catch","err","console","log","current","history","resetPasswordSuccess","setResetPasswordSuccess","resetPasswordFail","setResetPasswordFail","displayAlert","confirmNewPassword","proceedToLogin","push","display","textAlign","required","minLength","pattern","type","validate","value","marginTop"],"mappings":"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","sourcesContent":["import { IonContent, \r\n    IonPage, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonIcon, \r\n    IonButton, \r\n    IonItem, \r\n    IonInput,\r\n    IonList,\r\n    IonAlert } from '@ionic/react';\r\nimport React, {useRef, useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport { shieldCheckmarkOutline } from 'ionicons/icons';\r\nimport { auth } from '../firebase';\r\n\r\nimport '../css/ForgetPassword3.css';\r\nimport '../css/Global.css';\r\n\r\nimport TopNav from '../components/TopNav';\r\n\r\n\r\nconst ForgetPassword3: React.FC = () => {\r\n    const { register, handleSubmit, errors, watch, reset, getValues } = useForm();\r\n\r\n    const onSubmit = (data: any) => {\r\n        //console.log(\"Submitted\");\r\n        //console.log(data);\r\n        const code: any = new URLSearchParams(window.location.search).get('oobCode');\r\n        auth.confirmPasswordReset(code, data.newPassword).catch(err => { return console.log(err) });\r\n    };\r\n\r\n    const newPassword = useRef({});\r\n    newPassword.current = watch(\"newPassword\", \"\");\r\n\r\n    const history = useHistory();\r\n\r\n    {/*For alert */}\r\n    const [resetPasswordSuccess, setResetPasswordSuccess] = useState(false);\r\n    const [resetPasswordFail, setResetPasswordFail] = useState(false);\r\n\r\n    const displayAlert = () => {\r\n        const newPassword = getValues(\"newPassword\");\r\n        const confirmNewPassword = getValues(\"confirmNewPassword\");\r\n        if ((newPassword !== \"\" || confirmNewPassword !== \"\") && (confirmNewPassword === newPassword)){\r\n            setResetPasswordSuccess(true);\r\n            return console.log(\"Match\");\r\n        }\r\n        else {\r\n            setResetPasswordFail(true);\r\n            return console.log(\"Error\");\r\n        }\r\n    };\r\n\r\n    const proceedToLogin = () => {\r\n        setResetPasswordSuccess(false);\r\n        history.push(\"/login\");\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IonAlert\r\n                isOpen={resetPasswordSuccess}\r\n                onDidDismiss={proceedToLogin}\r\n                cssClass='alertBox'\r\n                header={'Reset Password Successful'}\r\n                message={'Your password has been reset successfully. Please login again.'}\r\n                buttons={['Close']}\r\n             ></IonAlert>\r\n\r\n            <IonAlert\r\n                isOpen={resetPasswordFail}\r\n                onDidDismiss = {() => setResetPasswordFail(false)}\r\n                cssClass='alertBox'\r\n                header={'Error'}\r\n                message={'Please fill up the required fields first!'}\r\n                buttons={['Okay']}\r\n             ></IonAlert>\r\n\r\n            <IonPage>\r\n                <TopNav title=\"Reset Password\" route=\"/main\" backarrow={ true } hamburger = { false }/>\r\n\r\n                <IonContent fullscreen style={{display: \"flex\"}}>\r\n                    <IonGrid className=\"forgetPwdGrid\">\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <IonRow class=\"ion-justify-content-center\">\r\n                                <IonCol></IonCol>\r\n                                <IonCol size=\"6\" style={{textAlign: \"center\"}}>\r\n                                    <IonIcon id=\"shield_logo\" icon={shieldCheckmarkOutline} />\r\n                                </IonCol>\r\n                                <IonCol></IonCol>\r\n                            </IonRow>\r\n\r\n                            <IonRow>\r\n                                <IonCol></IonCol>\r\n                                <IonCol size=\"10\">\r\n                                    <IonList>\r\n                                    <p id=\"text1\"><b>Please enter your new password</b></p>\r\n                                    <IonItem>\r\n                                        <IonInput id=\"newPasswordID\" type=\"password\" placeholder=\"New Password\" name=\"newPassword\" ref={register({ required: true, minLength: 8, pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[.,/<>#^~`@$!%*?&])[A-Za-z\\d.,/<>#~`^@$!%*?&]{8,}$/ })}></IonInput>\r\n                                    </IonItem>\r\n                                    {errors.newPassword && errors.newPassword.type === \"required\" && <div className=\"errorMessage\">Please type your new password!</div>}\r\n                                    {errors.newPassword && errors.newPassword.type === \"minLength\" && <div className=\"errorMessage\">Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</div>}\r\n                                    {errors.newPassword && errors.newPassword.type === \"pattern\" && <div className=\"errorMessage\">Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</div>}\r\n                                \r\n                                    <IonItem>\r\n                                        <IonInput id=\"confirmNewPasswordID\" type=\"password\" placeholder=\"Confirm New Password\" name=\"confirmNewPassword\" ref={register({ required: true, validate: (value) => value === newPassword.current })}></IonInput>\r\n                                    </IonItem>\r\n                                    {errors.confirmNewPassword && errors.confirmNewPassword.type === \"required\" && <div className=\"errorMessage\">Please confirm your password!</div>}\r\n                                    {errors.confirmNewPassword && errors.confirmNewPassword.type === \"validate\" && <div className=\"errorMessage\">Passwords do not match!</div>}\r\n                                    \r\n                                    </IonList>\r\n                                </IonCol>\r\n                                <IonCol></IonCol>\r\n                            </IonRow>\r\n\r\n                            <IonRow class=\"ion-justify-content-center\" style={{marginTop:\"5%\"}}>\r\n                                <IonButton size=\"large\" id=\"resetPwdBtn\" type=\"submit\" onClick={displayAlert}>RESET PASSWORD</IonButton>\r\n                            </IonRow>\r\n                        </form>\r\n                    </IonGrid>\r\n                </IonContent>\r\n            </IonPage>\r\n    </React.Fragment>\r\n    );\r\n  };\r\n  \r\n  export default ForgetPassword3;"]},"metadata":{},"sourceType":"module"}