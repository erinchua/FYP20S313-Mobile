{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\components\\\\OpenHouseProgrammes\\\\PerformancesContent.tsx\";\nimport { IonGrid, IonRow, IonCol, IonButton, IonAlert, IonLoading } from '@ionic/react';\nimport React, { useState } from 'react';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport firebase from 'firebase';\nimport '../../css/Global.css';\nimport '../../css/OpenHouseActivities.css';\nimport { db } from '../../firebase';\nimport { useAuth } from '../../auth';\n\nconst PerformancesContent = props => {\n  const {\n    userID\n  } = useAuth();\n  const [alert, setAlert] = useState({\n    registerSuccess: false,\n    registerFail: false,\n    loading: false\n  });\n  const performanceDay1 = props.performances.filter(performance => {\n    return performance.date == props.openhouseDates[0];\n  });\n  const performanceDay2 = props.performances.filter(performance => {\n    return performance.date == props.openhouseDates[1];\n  });\n\n  const addToSchedule = async programmeTalk => {\n    try {\n      // make check for schedule conflict then below\n      setAlert({\n        registerSuccess: false,\n        registerFail: false,\n        loading: true\n      });\n      await db.collection('PersonalScheduler').doc(userID).update({\n        registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programmeTalk.id)\n      });\n      setAlert({\n        registerSuccess: true,\n        registerFail: false,\n        loading: false\n      });\n    } catch (e) {\n      setAlert({\n        registerSuccess: false,\n        registerFail: false,\n        loading: false\n      });\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: alert.registerSuccess,\n    onDidDismiss: () => setAlert({\n      registerSuccess: false,\n      registerFail: false,\n      loading: false\n    }),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    header: 'Successfully Registered',\n    message: 'You have successfully registered for the programme talk and it has been successfully added to My Schedule.',\n    buttons: ['Close'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: alert.registerFail,\n    onDidDismiss: () => setAlert({\n      registerSuccess: false,\n      registerFail: false,\n      loading: false\n    }),\n    cssClass: \"alertBox\",\n    mode: \"md\",\n    header: 'Registration Unsuccessful',\n    message: 'There exists an open house programme in your scheduler at this timing. Please remove the existing programme from your scheduler first!',\n    buttons: ['Close'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonGrid, {\n    id: \"performancesContent-tableGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    id: \"performancesContent-tableHeader\",\n    className: \"ion-justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"performancesContent-Header ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Performance\"), /*#__PURE__*/React.createElement(IonCol, {\n    className: \"performancesContent-Header ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(IonCol, {\n    className: \"performancesContent-Header ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Venue\"), /*#__PURE__*/React.createElement(IonCol, {\n    className: \"performancesContent-Header ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Add to My Schedule\")), props.day1 === 'day1' ? performanceDay1.map(performance => {\n    return /*#__PURE__*/React.createElement(IonRow, {\n      className: \"ion-justify-content-center\",\n      key: performance.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      className: \"performancesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, performance.performanceName), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"performancesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, performance.startTime + \" to \" + performance.endTime), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"performancesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, performance.venue), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"performancesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IonButton, {\n      className: \"performancesContent-DataBtn\",\n      size: \"small\",\n      style: {\n        marginTop: \"-5%\",\n        marginBottom: \"-5%\"\n      },\n      onClick: () => addToSchedule(performance),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }\n    }))));\n  }) : '', props.day2 === 'day2' ? performanceDay2.map(performance => {\n    return /*#__PURE__*/React.createElement(IonRow, {\n      className: \"ion-justify-content-center\",\n      key: performance.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      className: \"performancesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, performance.performanceName), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"performancesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, performance.startTime + \" to \" + performance.endTime), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"performancesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, performance.venue), /*#__PURE__*/React.createElement(IonCol, {\n      className: \"performancesContent-Data ion-text-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IonButton, {\n      className: \"performancesContent-DataBtn\",\n      size: \"small\",\n      style: {\n        marginTop: \"-5%\",\n        marginBottom: \"-5%\"\n      },\n      onClick: () => addToSchedule(performance),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }))));\n  }) : ''), /*#__PURE__*/React.createElement(IonLoading, {\n    isOpen: alert.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PerformancesContent;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/components/OpenHouseProgrammes/PerformancesContent.tsx"],"names":["IonGrid","IonRow","IonCol","IonButton","IonAlert","IonLoading","React","useState","faPlus","FontAwesomeIcon","firebase","db","useAuth","PerformancesContent","props","userID","alert","setAlert","registerSuccess","registerFail","loading","performanceDay1","performances","filter","performance","date","openhouseDates","performanceDay2","addToSchedule","programmeTalk","collection","doc","update","registeredProgrammes","firestore","FieldValue","arrayUnion","id","e","console","log","day1","map","performanceName","startTime","endTime","venue","marginTop","marginBottom","day2"],"mappings":"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","sourcesContent":["import { IonGrid, IonRow, IonCol, IonButton, IonAlert, IonLoading } from '@ionic/react';\r\nimport React, { useState } from 'react';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport firebase from 'firebase';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/OpenHouseActivities.css'\r\nimport { db } from '../../firebase';\r\nimport { useAuth } from '../../auth';\r\n\r\nconst PerformancesContent: React.FC<{ day1: any; day2: any; performances: any; openhouseDates: any }> = props => {\r\n    const { userID } = useAuth();\r\n    const [alert, setAlert] = useState({ registerSuccess: false, registerFail: false, loading: false });\r\n\r\n    const performanceDay1 = props.performances.filter((performance: any) => {\r\n        return performance.date == props.openhouseDates[0]\r\n    })\r\n    const performanceDay2 = props.performances.filter((performance: any) => {\r\n        return performance.date == props.openhouseDates[1]\r\n    })\r\n\r\n    const addToSchedule = async (programmeTalk: any) => {\r\n        try {\r\n            // make check for schedule conflict then below\r\n            setAlert({ registerSuccess: false, registerFail: false, loading: true });\r\n            await db.collection('PersonalScheduler').doc(userID).update({\r\n                registeredProgrammes: firebase.firestore.FieldValue.arrayUnion(programmeTalk.id)\r\n            });\r\n            setAlert({ registerSuccess: true, registerFail: false, loading: false });\r\n        } catch (e) {\r\n            setAlert({ registerSuccess: false, registerFail: false, loading: false });\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IonAlert\r\n                isOpen={alert.registerSuccess}\r\n                onDidDismiss={() => setAlert({ registerSuccess: false, registerFail: false, loading: false })}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Successfully Registered'}\r\n                message={'You have successfully registered for the programme talk and it has been successfully added to My Schedule.'}\r\n                buttons={['Close']}\r\n            ></IonAlert>\r\n\r\n            <IonAlert\r\n                isOpen={alert.registerFail}\r\n                onDidDismiss={() => setAlert({ registerSuccess: false, registerFail: false, loading: false })}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                header={'Registration Unsuccessful'}\r\n                message={'There exists an open house programme in your scheduler at this timing. Please remove the existing programme from your scheduler first!'}\r\n                buttons={['Close']}\r\n            ></IonAlert>\r\n\r\n            <IonGrid id=\"performancesContent-tableGrid\">\r\n                <IonRow id=\"performancesContent-tableHeader\" className=\"ion-justify-content-center\">\r\n                    <IonCol className=\"performancesContent-Header ion-text-wrap\">Performance</IonCol>\r\n                    <IonCol className=\"performancesContent-Header ion-text-wrap\">Time</IonCol>\r\n                    <IonCol className=\"performancesContent-Header ion-text-wrap\">Venue</IonCol>\r\n                    <IonCol className=\"performancesContent-Header ion-text-wrap\">Add to My Schedule</IonCol>\r\n                </IonRow>\r\n                {props.day1 === 'day1' ?\r\n                    performanceDay1.map((performance: any) => {\r\n                        return (\r\n                            <IonRow className=\"ion-justify-content-center\" key={performance.id}>\r\n                                <IonCol className=\"performancesContent-Data ion-text-wrap\">{performance.performanceName}</IonCol>\r\n                                <IonCol className=\"performancesContent-Data ion-text-wrap\">{performance.startTime + \" to \" + performance.endTime}</IonCol>\r\n                                <IonCol className=\"performancesContent-Data ion-text-wrap\">{performance.venue}</IonCol>\r\n                                <IonCol className=\"performancesContent-Data ion-text-wrap\">\r\n                                    <IonButton className=\"performancesContent-DataBtn\" size=\"small\" style={{ marginTop: \"-5%\", marginBottom: \"-5%\" }} onClick={() => addToSchedule(performance)}>\r\n                                        <FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        )\r\n                    })\r\n                    : ''\r\n                }\r\n                {props.day2 === 'day2' ?\r\n                    performanceDay2.map((performance: any) => {\r\n                        return (\r\n                            <IonRow className=\"ion-justify-content-center\" key={performance.id}>\r\n                                <IonCol className=\"performancesContent-Data ion-text-wrap\">{performance.performanceName}</IonCol>\r\n                                <IonCol className=\"performancesContent-Data ion-text-wrap\">{performance.startTime + \" to \" + performance.endTime}</IonCol>\r\n                                <IonCol className=\"performancesContent-Data ion-text-wrap\">{performance.venue}</IonCol>\r\n                                <IonCol className=\"performancesContent-Data ion-text-wrap\">\r\n                                    <IonButton className=\"performancesContent-DataBtn\" size=\"small\" style={{ marginTop: \"-5%\", marginBottom: \"-5%\" }} onClick={() => addToSchedule(performance)}>\r\n                                        <FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        )\r\n                    })\r\n                    : ''\r\n                }\r\n            </IonGrid>\r\n            <IonLoading isOpen={alert.loading} />\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default PerformancesContent;"]},"metadata":{},"sourceType":"module"}