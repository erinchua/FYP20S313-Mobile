{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\Test.tsx\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonGrid, IonRow, IonCol, IonIcon, IonButtons, IonButton, IonItem, IonInput, IonList } from '@ionic/react';\nimport React, { useRef, useState } from 'react';\nimport '../css/Global.css';\nimport '../css/Test.css';\nimport { arrowBackOutline } from 'ionicons/icons';\nimport { useForm } from \"react-hook-form\";\n{\n  /*import { useHistory } from 'react-router-dom';*/\n}\n\nconst Test = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(\"Submitted\");\n    console.log(data);\n  };\n\n  const [enteredCode, setEnteredCode] = useState();\n  const codeInputRef = useRef(null);\n  const inputCodeRef = useRef('');\n  console.log(inputCodeRef);\n\n  const verifyCode = () => {\n    const enteredCode = codeInputRef.current.value;\n    console.log(enteredCode);\n    const code = String(enteredCode);\n    setEnteredCode(code);\n    console.log(code);\n  };\n\n  const typedCode = () => {\n    const printCode = inputCodeRef.current;\n    console.log(printCode);\n  };\n\n  {\n    /*const history = useHistory();\r\n    const navigateTo = () => history.push('/main');*/\n  }\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    id: \"topBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    routerLink: \"/main\",\n    onClick: () => {\n      reset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    id: \"back_button\",\n    slot: \"icon-only\",\n    icon: arrowBackOutline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(IonTitle, {\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Reset Password\"))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    class: \"ion-justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"6\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    id: \"shield_logo\",\n    icon: shieldCheckmarkOutline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"text1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 45\n    }\n  }, \"Please enter your new password\")), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    id: \"newPasswordID\",\n    type: \"password\",\n    placeholder: \"New Password\",\n    name: \"newPassword\",\n    ref: register({\n      required: true,\n      minLength: 8,\n      pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[.,/<>#^~`@$!%*?&])[A-Za-z\\d.,/<>#~`^@$!%*?&]{8,}$/\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 35\n    }\n  })), errors.newPassword && errors.newPassword.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 96\n    }\n  }, \"Password is required!\"), errors.newPassword && errors.newPassword.type === \"minLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 97\n    }\n  }, \"Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"), errors.newPassword && errors.newPassword.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 95\n    }\n  }, \"Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    id: \"confirmNewPasswordID\",\n    type: \"password\",\n    placeholder: \"Confirm New Password\",\n    name: \"confirmNewPassword\",\n    ref: register({\n      required: true,\n      validate: value => value === newPassword.current\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 35\n    }\n  })), errors.confirmNewPassword && errors.confirmNewPassword.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 110\n    }\n  }, \"Please confirm your password!\"), errors.confirmNewPassword && errors.confirmNewPassword.type === \"validate\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 110\n    }\n  }, \"Passwords do not match!\"))), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(IonRow, {\n    class: \"ion-justify-content-center\",\n    style: {\n      marginTop: \"5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    size: \"large\",\n    id: \"resetPwdBtn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 27\n    }\n  }, \"RESET PASSWORD\"))))));\n};\n\nexport default Test;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/Test.tsx"],"names":["IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonGrid","IonRow","IonCol","IonIcon","IonButtons","IonButton","IonItem","IonInput","IonList","React","useRef","useState","arrowBackOutline","useForm","Test","register","handleSubmit","errors","onSubmit","data","console","log","enteredCode","setEnteredCode","codeInputRef","inputCodeRef","verifyCode","current","value","code","String","typedCode","printCode","reset","display","textAlign","shieldCheckmarkOutline","required","minLength","pattern","newPassword","type","validate","confirmNewPassword","marginTop"],"mappings":"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","sourcesContent":["import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonGrid, IonRow, IonCol, IonIcon, IonButtons, IonButton, IonItem, IonInput, IonList } from '@ionic/react';\r\nimport React, {useRef, useState} from 'react';\r\nimport '../css/Global.css';\r\nimport '../css/Test.css';\r\nimport { arrowBackOutline, enter, keypadOutline } from 'ionicons/icons';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport TestController from '../components/TestController';\r\nimport TestCom from '../components/TestCom';\r\n{/*import { useHistory } from 'react-router-dom';*/}\r\n\r\n\r\nconst Test: React.FC = () => {\r\n    \r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = (data: any) => {\r\n        console.log(\"Submitted\");\r\n        console.log(data);\r\n    };\r\n\r\n    const [enteredCode, setEnteredCode] = useState<string>();\r\n\r\n    const codeInputRef = useRef<HTMLIonInputElement>(null);\r\n    const inputCodeRef = useRef('');\r\n    console.log(inputCodeRef);\r\n\r\n    const verifyCode = () => {\r\n        const enteredCode = codeInputRef.current!.value!;\r\n        console.log(enteredCode);\r\n        const code = String(enteredCode);\r\n        setEnteredCode(code);\r\n        console.log(code);\r\n    };\r\n\r\n    const typedCode = () => {\r\n        const printCode = inputCodeRef.current;\r\n        console.log(printCode); \r\n    };\r\n\r\n    {/*const history = useHistory();\r\n    const navigateTo = () => history.push('/main');*/}\r\n\r\n    return (\r\n        <IonPage>\r\n          <IonHeader>\r\n            <IonToolbar id=\"topBar\">\r\n              <IonButtons slot=\"start\">\r\n                  <IonButton routerLink=\"/main\" onClick={() => {reset()}}>\r\n                      <IonIcon id=\"back_button\" slot=\"icon-only\" icon={arrowBackOutline} />\r\n                  </IonButton>\r\n              </IonButtons>\r\n  \r\n              <IonTitle id=\"title\">\r\n                  Reset Password \r\n              </IonTitle>\r\n            </IonToolbar>\r\n          </IonHeader>\r\n  \r\n          {/* Screen Content*/}\r\n          <IonContent fullscreen style={{display: \"flex\"}}>\r\n              <IonGrid>\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                      <IonRow class=\"ion-justify-content-center\">\r\n                          <IonCol></IonCol>\r\n                          <IonCol size=\"6\" style={{textAlign: \"center\"}}>\r\n                              <IonIcon id=\"shield_logo\" icon={shieldCheckmarkOutline} />\r\n                          </IonCol>\r\n                          <IonCol></IonCol>\r\n                      </IonRow>\r\n  \r\n                      <IonRow>\r\n                          <IonCol></IonCol>\r\n                          <IonCol size=\"10\">\r\n                              <IonList>\r\n                              <p id=\"text1\"><b>Please enter your new password</b></p>\r\n                              <IonItem>\r\n                                  <IonInput id=\"newPasswordID\" type=\"password\" placeholder=\"New Password\" name=\"newPassword\" ref={register({ required: true, minLength: 8, pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[.,/<>#^~`@$!%*?&])[A-Za-z\\d.,/<>#~`^@$!%*?&]{8,}$/ })}></IonInput>\r\n                              </IonItem>\r\n                              {errors.newPassword && errors.newPassword.type === \"required\" && <div className=\"errorMessage\">Password is required!</div>}\r\n                              {errors.newPassword && errors.newPassword.type === \"minLength\" && <div className=\"errorMessage\">Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</div>}\r\n                              {errors.newPassword && errors.newPassword.type === \"pattern\" && <div className=\"errorMessage\">Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</div>}\r\n                          \r\n                              <IonItem>\r\n                                  <IonInput id=\"confirmNewPasswordID\" type=\"password\" placeholder=\"Confirm New Password\" name=\"confirmNewPassword\" ref={register({ required: true, validate: (value) => value === newPassword.current })}></IonInput>\r\n                              </IonItem>\r\n                              {errors.confirmNewPassword && errors.confirmNewPassword.type === \"required\" && <div className=\"errorMessage\">Please confirm your password!</div>}\r\n                              {errors.confirmNewPassword && errors.confirmNewPassword.type === \"validate\" && <div className=\"errorMessage\">Passwords do not match!</div>}\r\n                                \r\n                              </IonList>\r\n                          </IonCol>\r\n                          <IonCol></IonCol>\r\n                      </IonRow>\r\n  \r\n                      <IonRow class=\"ion-justify-content-center\" style={{marginTop:\"5%\"}}>\r\n                          <IonButton size=\"large\" id=\"resetPwdBtn\" type=\"submit\">RESET PASSWORD</IonButton>\r\n                      </IonRow>\r\n                  </form>\r\n              </IonGrid>\r\n          </IonContent>\r\n        </IonPage>\r\n    );\r\n  }\r\n\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}