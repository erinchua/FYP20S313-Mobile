{"ast":null,"code":"import _slicedToArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{IonCol,IonContent,IonGrid,IonHeader,IonPage,IonRow,IonSegment,IonSegmentButton,IonTitle,IonToolbar}from'@ionic/react';import React,{useState,useEffect}from'react';import'../../css/Global.css';import'../../css/GuidedTours.css';import TopNav from'../../components/TopNav';import GuidedTourContent from'../../components/OpenHouseProgrammes/GuidedTourContent';import{db}from\"../../firebase\";import{useAuth}from'../../modules/auth';var GuidedTours=function GuidedTours(){var _useAuth=useAuth(),userID=_useAuth.userID;var _useState=useState('day1'),_useState2=_slicedToArray(_useState,2),dayNum=_useState2[0],setDayNum=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),openhouseDates=_useState4[0],setOpenhouseDates=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),guidedTours=_useState6[0],setGuidedTours=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),scheduleItems=_useState8[0],setScheduleItems=_useState8[1];var handleDayOne=function handleDayOne(){setDayNum('day1');};var handleDayTwo=function handleDayTwo(){setDayNum('day2');};useEffect(function(){var dates=[];db.collection(\"Openhouse\").get().then(function(snapshot){snapshot.forEach(function(doc){var data=doc.get('day');for(var i=0;i<Object.keys(data).length;i++){var date=data[Object.keys(data)[i]].date;dates.push(date);}});setOpenhouseDates(dates);}).catch(function(error){return console.log(error);});db.collection(\"GuidedTours\").get().then(function(snapshot){var tours=[];snapshot.forEach(function(doc){var data=doc.data();tours.push(data);});setGuidedTours(tours);}).catch(function(error){return console.log(error);});return db.collection('PersonalScheduler').doc(userID).onSnapshot(function(snap){var _snap$data;setScheduleItems((_snap$data=snap.data())===null||_snap$data===void 0?void 0:_snap$data.registeredProgrammes);});},[]);return/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(IonHeader,null,/*#__PURE__*/React.createElement(TopNav,{title:\"Guided Tours\",route:\"/u/openHouseMain\",backarrow:true,hamburger:true}),/*#__PURE__*/React.createElement(IonToolbar,{id:\"guidedTours-schedule\"},/*#__PURE__*/React.createElement(IonTitle,{id:\"guidedTours-schedule-text\"},\"Schedule\"))),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true,id:\"guidedTours-content\"},/*#__PURE__*/React.createElement(IonGrid,{id:\"guidedTours-ionRowCol\"},/*#__PURE__*/React.createElement(IonRow,{id:\"guidedTours-ionRowCol\"},/*#__PURE__*/React.createElement(IonCol,{id:\"guidedTours-ionRowCol\"},/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonSegment,{scrollable:true,value:dayNum,id:\"guidedTours-mainHeader\",onIonChange:function onIonChange(e){return console.log(\"\".concat(e.detail.value,\" segment selected\"));}},/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day1\",className:\"guidedTours-heading\",onClick:handleDayOne},\"Day 1: \",openhouseDates[0]),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day2\",className:\"guidedTours-heading\",onClick:handleDayTwo},\"Day 2: \",openhouseDates[1]))))),/*#__PURE__*/React.createElement(GuidedTourContent,{day1:dayNum,day2:dayNum,guidedTours:guidedTours,openhouseDates:openhouseDates,scheduleItems:scheduleItems}))));};export default GuidedTours;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/OpenHouseProgrammes/GuidedTours.tsx"],"names":["IonCol","IonContent","IonGrid","IonHeader","IonPage","IonRow","IonSegment","IonSegmentButton","IonTitle","IonToolbar","React","useState","useEffect","TopNav","GuidedTourContent","db","useAuth","GuidedTours","userID","dayNum","setDayNum","openhouseDates","setOpenhouseDates","guidedTours","setGuidedTours","scheduleItems","setScheduleItems","handleDayOne","handleDayTwo","dates","collection","get","then","snapshot","forEach","doc","data","i","Object","keys","length","date","push","catch","error","console","log","tours","onSnapshot","snap","registeredProgrammes","e","detail","value"],"mappings":"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","sourcesContent":["import { IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonSegment, IonSegmentButton, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/GuidedTours.css';\r\nimport TopNav from '../../components/TopNav';\r\nimport GuidedTourContent from '../../components/OpenHouseProgrammes/GuidedTourContent';\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from '../../modules/auth';\r\n\r\nconst GuidedTours: React.FC = () => {\r\n\tconst { userID } = useAuth();\r\n\r\n    const [dayNum, setDayNum] = useState('day1');\r\n    const [openhouseDates, setOpenhouseDates] = useState([])\r\n    const [guidedTours, setGuidedTours] = useState<any[]>([]);\r\n    const [scheduleItems, setScheduleItems] = useState([]);\r\n\r\n    const handleDayOne = () => {\r\n        setDayNum('day1');\r\n    }\r\n\r\n    const handleDayTwo = () => {\r\n        setDayNum('day2');\r\n    }\r\n    useEffect(() => {\r\n        const dates: any = [];\r\n\r\n        db.collection(\"Openhouse\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                snapshot.forEach((doc) => {\r\n                    const data = doc.get('day')\r\n                    for (var i = 0; i < Object.keys(data).length; i++) {\r\n                        const date = data[Object.keys(data)[i]].date;\r\n                        dates.push(date)\r\n                    }\r\n                });\r\n                setOpenhouseDates(dates);\r\n            })\r\n            .catch((error) => console.log(error));\r\n\r\n        db.collection(\"GuidedTours\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                const tours: any = [];\r\n                snapshot.forEach((doc) => {\r\n                    const data = doc.data();\r\n                    tours.push(data);\r\n                });\r\n                setGuidedTours(tours);\r\n            })\r\n            .catch((error) => console.log(error));\r\n\r\n            return db.collection('PersonalScheduler').doc(userID).onSnapshot(snap => {\r\n                setScheduleItems(snap.data()?.registeredProgrammes);\r\n            });\r\n    }, []);\r\n    \r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <TopNav title=\"Guided Tours\" route=\"/u/openHouseMain\" backarrow={true} hamburger={true} />\r\n                <IonToolbar id=\"guidedTours-schedule\">\r\n                    <IonTitle id=\"guidedTours-schedule-text\">Schedule</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen id=\"guidedTours-content\">\r\n                <IonGrid id=\"guidedTours-ionRowCol\">\r\n                    <IonRow id=\"guidedTours-ionRowCol\">\r\n                        <IonCol id=\"guidedTours-ionRowCol\">\r\n                            <IonToolbar>\r\n                                <IonSegment scrollable value={dayNum} id=\"guidedTours-mainHeader\" onIonChange={(e) => console.log(`${e.detail.value} segment selected`)}>\r\n                                    <IonSegmentButton value=\"day1\" className=\"guidedTours-heading\" onClick={handleDayOne}>Day 1: {openhouseDates[0]}</IonSegmentButton>\r\n                                    <IonSegmentButton value=\"day2\" className=\"guidedTours-heading\" onClick={handleDayTwo}>Day 2: {openhouseDates[1]}</IonSegmentButton>\r\n                                </IonSegment>\r\n                            </IonToolbar>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                    <GuidedTourContent day1={dayNum} day2={dayNum} guidedTours={guidedTours} openhouseDates={openhouseDates} scheduleItems={scheduleItems} />\r\n                </IonGrid>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default GuidedTours;"]},"metadata":{},"sourceType":"module"}