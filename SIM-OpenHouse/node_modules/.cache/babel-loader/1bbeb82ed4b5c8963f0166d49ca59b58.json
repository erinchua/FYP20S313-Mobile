{"ast":null,"code":"import _slicedToArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{IonCol,IonContent,IonGrid,IonPage,IonRow,IonSegment,IonSegmentButton,IonTitle,IonToolbar}from'@ionic/react';import React,{useState,useEffect}from'react';import{db}from\"../firebase\";import\"../css/Global.css\";import\"../css/GuidedTours.css\";import TopNav from'../components/TopNav';import GuidedTourContent from'../components/GuidedTourContent';var GuidedTours=function GuidedTours(){var _useState=useState('day1'),_useState2=_slicedToArray(_useState,2),dayNum=_useState2[0],setDayNum=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),openhouseDates=_useState4[0],setOpenhouseDates=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),guidedTours=_useState6[0],setGuidedTours=_useState6[1];var handleDayOne=function handleDayOne(){setDayNum('day1');};var handleDayTwo=function handleDayTwo(){setDayNum('day2');};useEffect(function(){var dates=[];db.collection(\"Openhouse\").get().then(function(snapshot){snapshot.forEach(function(doc){var data=doc.get('day');data.forEach(function(day){dates.push(day.date);});});setOpenhouseDates(dates);}).catch(function(error){return console.log(error);});db.collection(\"GuidedTours\").get().then(function(snapshot){var tours=[];snapshot.forEach(function(doc){var data=doc.data();tours.push(data);});setGuidedTours(tours);}).catch(function(error){return console.log(error);});},[]);return/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(TopNav,{title:\"Guided Tours\",route:\"/u/openHouseMain\",backarrow:true,hamburger:true}),/*#__PURE__*/React.createElement(IonToolbar,{id:\"guidedTours-schedule\"},/*#__PURE__*/React.createElement(IonTitle,{id:\"guidedTours-schedule-text\"},\"Schedule\")),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true,id:\"guidedTours-content\"},/*#__PURE__*/React.createElement(IonGrid,{id:\"guidedTours-ionRowCol\"},/*#__PURE__*/React.createElement(IonRow,{id:\"guidedTours-ionRowCol\"},/*#__PURE__*/React.createElement(IonCol,{id:\"guidedTours-ionRowCol\"},/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonSegment,{scrollable:true,value:dayNum,id:\"guidedTours-mainHeader\",onIonChange:function onIonChange(e){return console.log(\"\".concat(e.detail.value,\" segment selected\"));}},/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day1\",className:\"guidedTours-heading\",onClick:handleDayOne},\"Day 1: 21 Nov 2020\"),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"day2\",className:\"guidedTours-heading\",onClick:handleDayTwo},\"Day 2: 22 Nov 2020\"))))),/*#__PURE__*/React.createElement(GuidedTourContent,{day1:dayNum,day2:dayNum,guidedTours:guidedTours,openhouseDates:openhouseDates}))));};export default GuidedTours;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/GuidedTours.tsx"],"names":["IonCol","IonContent","IonGrid","IonPage","IonRow","IonSegment","IonSegmentButton","IonTitle","IonToolbar","React","useState","useEffect","db","TopNav","GuidedTourContent","GuidedTours","dayNum","setDayNum","openhouseDates","setOpenhouseDates","guidedTours","setGuidedTours","handleDayOne","handleDayTwo","dates","collection","get","then","snapshot","forEach","doc","data","day","push","date","catch","error","console","log","tours","e","detail","value"],"mappings":"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","sourcesContent":["import { IonCol, IonContent, IonGrid, IonPage, IonRow, IonSegment, IonSegmentButton, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { db } from \"../firebase\";\r\n\r\nimport \"../css/Global.css\";\r\nimport \"../css/GuidedTours.css\";\r\nimport TopNav from '../components/TopNav';\r\nimport GuidedTourContent from '../components/GuidedTourContent';\r\n\r\nconst GuidedTours: React.FC = () => {\r\n\r\n    const [dayNum, setDayNum] = useState('day1');\r\n    const [openhouseDates, setOpenhouseDates] = useState([])\r\n    const [guidedTours, setGuidedTours] = useState<any[]>([]);\r\n\r\n    const handleDayOne = () => {\r\n        setDayNum('day1');\r\n    }\r\n\r\n    const handleDayTwo = () => {\r\n        setDayNum('day2');\r\n    }\r\n    useEffect(() => {\r\n        const dates: any = [];\r\n\r\n        db.collection(\"Openhouse\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                snapshot.forEach((doc) => {\r\n                    const data = doc.get('day')\r\n                    data.forEach((day: any) => { dates.push(day.date) })\r\n                });\r\n                setOpenhouseDates(dates);\r\n            })\r\n            .catch((error) => console.log(error));\r\n\r\n        db.collection(\"GuidedTours\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                const tours: any = [];\r\n                snapshot.forEach((doc) => {\r\n                    const data = doc.data();\r\n                    tours.push(data);\r\n                });\r\n                setGuidedTours(tours);\r\n            })\r\n            .catch((error) => console.log(error));\r\n\r\n    }, [])\r\n    return (\r\n        <IonPage>\r\n            <TopNav title=\"Guided Tours\" route=\"/u/openHouseMain\" backarrow={true} hamburger={true} />\r\n            <IonToolbar id=\"guidedTours-schedule\">\r\n                <IonTitle id=\"guidedTours-schedule-text\">Schedule</IonTitle>\r\n            </IonToolbar>\r\n\r\n            <IonContent fullscreen id=\"guidedTours-content\">\r\n                <IonGrid id=\"guidedTours-ionRowCol\">\r\n                    <IonRow id=\"guidedTours-ionRowCol\">\r\n                        <IonCol id=\"guidedTours-ionRowCol\">\r\n                            <IonToolbar>\r\n                                <IonSegment scrollable value={dayNum} id=\"guidedTours-mainHeader\" onIonChange={(e) => console.log(`${e.detail.value} segment selected`)}>\r\n                                    <IonSegmentButton value=\"day1\" className=\"guidedTours-heading\" onClick={handleDayOne}>Day 1: 21 Nov 2020</IonSegmentButton>\r\n                                    <IonSegmentButton value=\"day2\" className=\"guidedTours-heading\" onClick={handleDayTwo}>Day 2: 22 Nov 2020</IonSegmentButton>\r\n                                </IonSegment>\r\n                            </IonToolbar>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                    <GuidedTourContent day1={dayNum} day2={dayNum} guidedTours={guidedTours} openhouseDates={openhouseDates} />\r\n                </IonGrid>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default GuidedTours;"]},"metadata":{},"sourceType":"module"}