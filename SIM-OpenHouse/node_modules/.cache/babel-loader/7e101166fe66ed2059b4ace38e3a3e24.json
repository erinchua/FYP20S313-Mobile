{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{IonCol,IonContent,IonFooter,IonGrid,IonHeader,IonItem,IonLabel,IonPage,IonRouterLink,IonRow,IonTitle,IonToggle,IonToolbar}from'@ionic/react';import React,{useState,useEffect}from'react';import'../css/Global.css';import'../css/Settings.css';import TopNav from'../components/TopNav';import{useAuth}from'../modules/auth';import{db}from'../firebase';var Settings=function Settings(){var _useAuth=useAuth(),userID=_useAuth.userID;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),announcementAlertChecked=_useState2[0],setAnnouncementAlertChecked=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),openHouseRemindersChecked=_useState4[0],setOpenHouseRemindersChecked=_useState4[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return db.collection('MobileSettings').doc(userID).get().then(function(doc){var _doc$data,_doc$data2;setOpenHouseRemindersChecked((_doc$data=doc.data())===null||_doc$data===void 0?void 0:_doc$data.openhouseNotif);setAnnouncementAlertChecked((_doc$data2=doc.data())===null||_doc$data2===void 0?void 0:_doc$data2.announcementNotif);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[]);var onToggle=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(setValue,type){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;if(!(type=='openhouse')){_context2.next=5;break;}setOpenHouseRemindersChecked(setValue);_context2.next=5;return db.collection('MobileSettings').doc(userID).update({openhouseNotif:setValue});case 5:if(!(type=='announcement')){_context2.next=9;break;}setAnnouncementAlertChecked(setValue);_context2.next=9;return db.collection('MobileSettings').doc(userID).update({announcementNotif:setValue});case 9:_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);return _context2.abrupt(\"return\",console.log(_context2.t0));case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function onToggle(_x,_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(IonHeader,null,/*#__PURE__*/React.createElement(TopNav,{title:\"Settings\",route:\"/u/home\",backarrow:true,hamburger:true})),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true,id:\"settingsIonContent\"},/*#__PURE__*/React.createElement(IonGrid,{id:\"settingsGrid\"},/*#__PURE__*/React.createElement(IonRow,{className:\"settingsRow\"},/*#__PURE__*/React.createElement(IonCol,{className:\"settingsColDetails\"},/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonItem,{className:\"settingsItem\",lines:\"none\"},/*#__PURE__*/React.createElement(IonTitle,{className:\"settingsTitle\"},\"Announcement Alerts\"),/*#__PURE__*/React.createElement(IonToggle,{className:\"settingsToggleBtn\",slot:\"end\",name:\"announcementAlerts\",checked:announcementAlertChecked,onIonChange:function onIonChange(e){return onToggle(e.detail.checked,'announcement');}}))),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonLabel,{className:\"settingsDetails\"},\"Toggle to \",announcementAlertChecked?\"disable\":\"enable\",\" alerts for important announcements during the Open House.\")))),/*#__PURE__*/React.createElement(IonRow,{className:\"settingsRow\"},/*#__PURE__*/React.createElement(IonCol,{className:\"settingsColDetails\"},/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonItem,{className:\"settingsItem\",lines:\"none\"},/*#__PURE__*/React.createElement(IonTitle,{className:\"settingsTitle\"},\"Open House Programmes Reminders\"),/*#__PURE__*/React.createElement(IonToggle,{className:\"settingsToggleBtn\",slot:\"end\",name:\"openHouseReminders\",checked:openHouseRemindersChecked,onIonChange:function onIonChange(e){return onToggle(e.detail.checked,'openhouse');}}))),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonLabel,{className:\"settingsDetails\"},\"Toggle to \",openHouseRemindersChecked?\"disable\":\"enable\",\" reminders for open house programmes you have added to your personal scheduler.\")))),/*#__PURE__*/React.createElement(IonRow,{className:\"simWebsiteRow\"},/*#__PURE__*/React.createElement(IonCol,null,/*#__PURE__*/React.createElement(IonItem,{className:\"simWebsiteItem\",lines:\"none\"},/*#__PURE__*/React.createElement(IonTitle,{className:\"settingsTitle\"},/*#__PURE__*/React.createElement(IonRouterLink,{id:\"simWebsiteUrl\",href:\"https://www.simge.edu.sg/open-house-overview/\",target:\"_blank\"},\"SIM Open House Website\"))))))),/*#__PURE__*/React.createElement(IonFooter,{className:\"ion-no-border\"},/*#__PURE__*/React.createElement(IonToolbar,{id:\"settingsFooter\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"footerText\"},\"App Version: 2020.8\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(IonLabel,{className:\"footerText\"},\"Designed & Developed By FYP-20-S3-13\"))));};export default Settings;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/Settings.tsx"],"names":["IonCol","IonContent","IonFooter","IonGrid","IonHeader","IonItem","IonLabel","IonPage","IonRouterLink","IonRow","IonTitle","IonToggle","IonToolbar","React","useState","useEffect","TopNav","useAuth","db","Settings","userID","announcementAlertChecked","setAnnouncementAlertChecked","openHouseRemindersChecked","setOpenHouseRemindersChecked","fetchData","collection","doc","get","then","data","openhouseNotif","announcementNotif","onToggle","setValue","type","update","console","log","e","detail","checked"],"mappings":"omBAAA,OAASA,MAAT,CAAiBC,UAAjB,CAA6BC,SAA7B,CAAwCC,OAAxC,CAAiDC,SAAjD,CAA4DC,OAA5D,CAAqEC,QAArE,CAA+EC,OAA/E,CAAwFC,aAAxF,CAAuGC,MAAvG,CAA+GC,QAA/G,CAAyHC,SAAzH,CAAoIC,UAApI,KAAsJ,cAAtJ,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,MAAO,mBAAP,CACA,MAAO,qBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,EAAT,KAAmB,aAAnB,CAEA,GAAMC,CAAAA,QAAkB,CAAG,QAArBA,CAAAA,QAAqB,EAAM,cACVF,OAAO,EADG,CACrBG,MADqB,UACrBA,MADqB,eAGmCN,QAAQ,CAAC,KAAD,CAH3C,wCAGtBO,wBAHsB,eAGIC,2BAHJ,8BAIqCR,QAAQ,CAAC,KAAD,CAJ7C,yCAItBS,yBAJsB,eAIKC,4BAJL,eAM7BT,SAAS,CAAC,UAAM,CACZ,GAAMU,CAAAA,SAAS,0FAAG,yJACRP,CAAAA,EAAE,CAACQ,UAAH,CAAc,gBAAd,EAAgCC,GAAhC,CAAoCP,MAApC,EAA4CQ,GAA5C,GAAkDC,IAAlD,CAAuD,SAAAF,GAAG,CAAI,0BAChEH,4BAA4B,YAACG,GAAG,CAACG,IAAJ,EAAD,oCAAC,UAAYC,cAAb,CAA5B,CACAT,2BAA2B,aAACK,GAAG,CAACG,IAAJ,EAAD,qCAAC,WAAYE,iBAAb,CAA3B,CACH,CAHK,CADQ,uDAAH,kBAATP,CAAAA,SAAS,0CAAf,CAMAA,SAAS,GACZ,CARQ,CAQN,EARM,CAAT,CAUA,GAAMQ,CAAAA,QAAQ,2FAAG,kBAAOC,QAAP,CAA0BC,IAA1B,4IAGLA,IAAI,EAAI,WAHH,2BAILX,4BAA4B,CAACU,QAAD,CAA5B,CAJK,uBAKChB,CAAAA,EAAE,CAACQ,UAAH,CAAc,gBAAd,EAAgCC,GAAhC,CAAoCP,MAApC,EAA4CgB,MAA5C,CAAmD,CAAEL,cAAc,CAAEG,QAAlB,CAAnD,CALD,aAQLC,IAAI,EAAI,cARH,2BASLb,2BAA2B,CAACY,QAAD,CAA3B,CATK,uBAUChB,CAAAA,EAAE,CAACQ,UAAH,CAAc,gBAAd,EAAgCC,GAAhC,CAAoCP,MAApC,EAA4CgB,MAA5C,CAAmD,CAAEJ,iBAAiB,CAAEE,QAArB,CAAnD,CAVD,8HAaFG,OAAO,CAACC,GAAR,cAbE,yEAAH,kBAARL,CAAAA,QAAQ,iDAAd,CAiBA,mBACI,oBAAC,OAAD,mBACI,oBAAC,SAAD,mBACI,oBAAC,MAAD,EAAQ,KAAK,CAAC,UAAd,CAAyB,KAAK,CAAC,SAA/B,CAAyC,SAAS,CAAE,IAApD,CAA0D,SAAS,CAAE,IAArE,EADJ,CADJ,cAKI,oBAAC,UAAD,EAAY,UAAU,CAAE,IAAxB,CAA8B,EAAE,CAAC,oBAAjC,eACI,oBAAC,OAAD,EAAS,EAAE,CAAC,cAAZ,eAEI,oBAAC,MAAD,EAAQ,SAAS,CAAC,aAAlB,eACI,oBAAC,MAAD,EAAQ,SAAS,CAAC,oBAAlB,eACI,oBAAC,MAAD,mBACI,oBAAC,OAAD,EAAS,SAAS,CAAC,cAAnB,CAAkC,KAAK,CAAC,MAAxC,eACI,oBAAC,QAAD,EAAU,SAAS,CAAC,eAApB,wBADJ,cAEI,oBAAC,SAAD,EAAW,SAAS,CAAC,mBAArB,CAAyC,IAAI,CAAC,KAA9C,CAAoD,IAAI,CAAC,oBAAzD,CAA8E,OAAO,CAAEZ,wBAAvF,CAAiH,WAAW,CAAE,qBAAAkB,CAAC,QAAIN,CAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,OAAV,CAAmB,cAAnB,CAAZ,EAA/H,EAFJ,CADJ,CADJ,cAQI,oBAAC,MAAD,mBACI,oBAAC,QAAD,EAAU,SAAS,CAAC,iBAApB,eAAiDpB,wBAAwB,CAAG,SAAH,CAAe,QAAxF,8DADJ,CARJ,CADJ,CAFJ,cAkBI,oBAAC,MAAD,EAAQ,SAAS,CAAC,aAAlB,eACI,oBAAC,MAAD,EAAQ,SAAS,CAAC,oBAAlB,eACI,oBAAC,MAAD,mBACI,oBAAC,OAAD,EAAS,SAAS,CAAC,cAAnB,CAAkC,KAAK,CAAC,MAAxC,eACI,oBAAC,QAAD,EAAU,SAAS,CAAC,eAApB,oCADJ,cAEI,oBAAC,SAAD,EAAW,SAAS,CAAC,mBAArB,CAAyC,IAAI,CAAC,KAA9C,CAAoD,IAAI,CAAC,oBAAzD,CAA8E,OAAO,CAAEE,yBAAvF,CAAkH,WAAW,CAAE,qBAAAgB,CAAC,QAAIN,CAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,OAAV,CAAmB,WAAnB,CAAZ,EAAhI,EAFJ,CADJ,CADJ,cAQI,oBAAC,MAAD,mBACI,oBAAC,QAAD,EAAU,SAAS,CAAC,iBAApB,eAAiDlB,yBAAyB,CAAG,SAAH,CAAe,QAAzF,mFADJ,CARJ,CADJ,CAlBJ,cAkCI,oBAAC,MAAD,EAAQ,SAAS,CAAC,eAAlB,eACI,oBAAC,MAAD,mBACI,oBAAC,OAAD,EAAS,SAAS,CAAC,gBAAnB,CAAoC,KAAK,CAAC,MAA1C,eACI,oBAAC,QAAD,EAAU,SAAS,CAAC,eAApB,eACI,oBAAC,aAAD,EAAe,EAAE,CAAC,eAAlB,CAAkC,IAAI,CAAC,+CAAvC,CAAuF,MAAM,CAAC,QAA9F,2BADJ,CADJ,CADJ,CADJ,CAlCJ,CADJ,CALJ,cAuDI,oBAAC,SAAD,EAAW,SAAS,CAAC,eAArB,eACI,oBAAC,UAAD,EAAY,EAAE,CAAC,gBAAf,eACI,oBAAC,QAAD,EAAU,SAAS,CAAC,YAApB,wBADJ,cAEI,8BAFJ,cAGI,oBAAC,QAAD,EAAU,SAAS,CAAC,YAApB,yCAHJ,CADJ,CAvDJ,CADJ,CAkEH,CAnGD,CAqGA,cAAeJ,CAAAA,QAAf","sourcesContent":["import { IonCol, IonContent, IonFooter, IonGrid, IonHeader, IonItem, IonLabel, IonPage, IonRouterLink, IonRow, IonTitle, IonToggle, IonToolbar } from '@ionic/react';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport '../css/Global.css';\r\nimport '../css/Settings.css';\r\nimport TopNav from '../components/TopNav';\r\nimport { useAuth } from '../modules/auth';\r\nimport { db } from '../firebase';\r\n\r\nconst Settings: React.FC = () => {\r\n    const { userID } = useAuth();\r\n\r\n    const [announcementAlertChecked, setAnnouncementAlertChecked] = useState(false);\r\n    const [openHouseRemindersChecked, setOpenHouseRemindersChecked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await db.collection('MobileSettings').doc(userID).get().then(doc => {\r\n                setOpenHouseRemindersChecked(doc.data()?.openhouseNotif)\r\n                setAnnouncementAlertChecked(doc.data()?.announcementNotif)\r\n            });\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const onToggle = async (setValue: boolean, type: string) => {\r\n        try {\r\n            //console.log(setValue)\r\n            if (type == 'openhouse') {\r\n                setOpenHouseRemindersChecked(setValue);\r\n                await db.collection('MobileSettings').doc(userID).update({ openhouseNotif: setValue });\r\n            }\r\n\r\n            if (type == 'announcement') {\r\n                setAnnouncementAlertChecked(setValue);\r\n                await db.collection('MobileSettings').doc(userID).update({ announcementNotif: setValue });\r\n            }\r\n        } catch (e) {\r\n            return console.log(e);\r\n        }\r\n    }\r\n        \r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <TopNav title=\"Settings\" route='/u/home' backarrow={true} hamburger={true} />\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen={true} id=\"settingsIonContent\">\r\n                <IonGrid id=\"settingsGrid\">\r\n                    {/* Announcement Alerts */}\r\n                    <IonRow className=\"settingsRow\">\r\n                        <IonCol className=\"settingsColDetails\">\r\n                            <IonRow>\r\n                                <IonItem className=\"settingsItem\" lines=\"none\">\r\n                                    <IonTitle className=\"settingsTitle\">Announcement Alerts</IonTitle>\r\n                                    <IonToggle className=\"settingsToggleBtn\" slot=\"end\" name=\"announcementAlerts\" checked={announcementAlertChecked} onIonChange={e => onToggle(e.detail.checked, 'announcement')} />\r\n                                </IonItem>\r\n                            </IonRow>\r\n\r\n                            <IonRow>\r\n                                <IonLabel className=\"settingsDetails\">Toggle to {announcementAlertChecked ? \"disable\" : \"enable\"} alerts for important announcements during the Open House.</IonLabel>\r\n                            </IonRow>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    {/* Open House Reminders */}\r\n                    <IonRow className=\"settingsRow\">\r\n                        <IonCol className=\"settingsColDetails\">\r\n                            <IonRow>\r\n                                <IonItem className=\"settingsItem\" lines=\"none\">\r\n                                    <IonTitle className=\"settingsTitle\">Open House Programmes Reminders</IonTitle>\r\n                                    <IonToggle className=\"settingsToggleBtn\" slot=\"end\" name=\"openHouseReminders\" checked={openHouseRemindersChecked} onIonChange={e => onToggle(e.detail.checked, 'openhouse')} />\r\n                                </IonItem>\r\n                            </IonRow>\r\n\r\n                            <IonRow>\r\n                                <IonLabel className=\"settingsDetails\">Toggle to {openHouseRemindersChecked ? \"disable\" : \"enable\"} reminders for open house programmes you have added to your personal scheduler.</IonLabel>\r\n                            </IonRow>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    {/* SIM Open House Website */}\r\n                    <IonRow className=\"simWebsiteRow\">\r\n                        <IonCol>\r\n                            <IonItem className=\"simWebsiteItem\" lines=\"none\">\r\n                                <IonTitle className=\"settingsTitle\">\r\n                                    <IonRouterLink id=\"simWebsiteUrl\" href=\"https://www.simge.edu.sg/open-house-overview/\" target=\"_blank\">\r\n                                        SIM Open House Website\r\n                                    </IonRouterLink>\r\n                                </IonTitle>\r\n                            </IonItem>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                </IonGrid>\r\n            </IonContent>\r\n\r\n            <IonFooter className=\"ion-no-border\">\r\n                <IonToolbar id=\"settingsFooter\">\r\n                    <IonLabel className=\"footerText\">App Version: 2020.8</IonLabel>\r\n                    <br />\r\n                    <IonLabel className=\"footerText\">Designed & Developed By FYP-20-S3-13</IonLabel>\r\n                </IonToolbar>\r\n            </IonFooter>\r\n\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}