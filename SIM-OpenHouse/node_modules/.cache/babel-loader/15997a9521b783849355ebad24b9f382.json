{"ast":null,"code":"var _jsxFileName = \"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\src\\\\pages\\\\ForgetPassword3.tsx\";\nimport { IonContent, IonPage, IonGrid, IonRow, IonCol, IonIcon, IonButton, IonItem, IonInput, IonList, IonAlert } from '@ionic/react';\nimport React, { useRef, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from 'react-router-dom';\nimport { shieldCheckmarkOutline } from 'ionicons/icons';\nimport { auth } from '../firebase';\nimport '../css/ForgetPassword3.css';\nimport '../css/Global.css';\nimport TopNav from '../components/TopNav';\n\nconst ForgetPassword3 = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch,\n    reset,\n    getValues\n  } = useForm();\n\n  const onSubmit = data => {\n    //console.log(\"Submitted\");\n    //console.log(data);\n    const code = new URLSearchParams(window.location.search).get('oobCode');\n    auth.confirmPasswordReset(code, data.newPassword).catch(err => {\n      return console.log(err);\n    });\n  };\n\n  const newPassword = useRef({});\n  newPassword.current = watch(\"newPassword\", \"\");\n  const history = useHistory();\n  {\n    /*For alert */\n  }\n  const [resetPasswordSuccess, setResetPasswordSuccess] = useState(false);\n  const [resetPasswordFail, setResetPasswordFail] = useState(false);\n\n  const displayAlert = () => {\n    const newPassword = getValues(\"newPassword\");\n    const confirmNewPassword = getValues(\"confirmNewPassword\");\n\n    if ((newPassword !== \"\" || confirmNewPassword !== \"\") && confirmNewPassword === newPassword) {\n      setResetPasswordSuccess(true);\n      return console.log(\"Match\");\n    } else {\n      setResetPasswordFail(true);\n      return console.log(\"Error\");\n    }\n  };\n\n  const proceedToLogin = () => {\n    setResetPasswordSuccess(false);\n    history.push(\"/login\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: resetPasswordSuccess,\n    onDidDismiss: proceedToLogin,\n    cssClass: \"alertBox\",\n    header: 'Reset Password Successful',\n    message: 'Your password has been reset successfully. Please login again.',\n    buttons: ['Close'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: resetPasswordFail,\n    onDidDismiss: () => setResetPasswordFail(false),\n    cssClass: \"alertBox\",\n    header: 'Error',\n    message: 'Please fill up the required fields first!',\n    buttons: ['Okay'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopNav, {\n    title: \"Reset Password\",\n    route: \"/main\",\n    backarrow: true,\n    hamburger: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    className: \"forgetPwdGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    class: \"ion-justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"6\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    id: \"shield_logo\",\n    icon: shieldCheckmarkOutline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"text1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 51\n    }\n  }, \"Please enter your new password\")), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    id: \"newPasswordID\",\n    type: \"password\",\n    placeholder: \"New Password\",\n    name: \"newPassword\",\n    ref: register({\n      required: true,\n      minLength: 8,\n      pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[.,/<>#^~`@$!%*?&])[A-Za-z\\d.,/<>#~`^@$!%*?&]{8,}$/\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 41\n    }\n  })), errors.newPassword && errors.newPassword.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 102\n    }\n  }, \"Please type your new password!\"), errors.newPassword && errors.newPassword.type === \"minLength\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 103\n    }\n  }, \"Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"), errors.newPassword && errors.newPassword.type === \"pattern\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 101\n    }\n  }, \"Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character\"), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    id: \"confirmNewPasswordID\",\n    type: \"password\",\n    placeholder: \"Confirm New Password\",\n    name: \"confirmNewPassword\",\n    ref: register({\n      required: true,\n      validate: value => value === newPassword.current\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 41\n    }\n  })), errors.confirmNewPassword && errors.confirmNewPassword.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 116\n    }\n  }, \"Please confirm your password!\"), errors.confirmNewPassword && errors.confirmNewPassword.type === \"validate\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 116\n    }\n  }, \"Passwords do not match!\"))), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(IonRow, {\n    class: \"ion-justify-content-center\",\n    style: {\n      marginTop: \"5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    size: \"large\",\n    id: \"resetPwdBtn\",\n    type: \"submit\",\n    onClick: displayAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, \"RESET PASSWORD\")))))));\n};\n\nexport default ForgetPassword3;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/ForgetPassword3.tsx"],"names":["IonContent","IonPage","IonGrid","IonRow","IonCol","IonIcon","IonButton","IonItem","IonInput","IonList","IonAlert","React","useRef","useState","useForm","useHistory","shieldCheckmarkOutline","auth","TopNav","ForgetPassword3","register","handleSubmit","errors","watch","reset","getValues","onSubmit","data","code","URLSearchParams","window","location","search","get","confirmPasswordReset","newPassword","catch","err","console","log","current","history","resetPasswordSuccess","setResetPasswordSuccess","resetPasswordFail","setResetPasswordFail","displayAlert","confirmNewPassword","proceedToLogin","push","display","textAlign","required","minLength","pattern","type","validate","value","marginTop"],"mappings":"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","sourcesContent":["import { IonContent, \r\n    IonPage, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonIcon, \r\n    IonButton, \r\n    IonItem, \r\n    IonInput,\r\n    IonList,\r\n    IonAlert } from '@ionic/react';\r\nimport React, {useRef, useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport { shieldCheckmarkOutline } from 'ionicons/icons';\r\nimport { auth } from '../firebase';\r\n\r\nimport '../css/ForgetPassword3.css';\r\nimport '../css/Global.css';\r\n\r\nimport TopNav from '../components/TopNav';\r\n\r\n\r\nconst ForgetPassword3: React.FC = () => {\r\n    const { register, handleSubmit, errors, watch, reset, getValues } = useForm();\r\n\r\n    const onSubmit = (data: any) => {\r\n        //console.log(\"Submitted\");\r\n        //console.log(data);\r\n        const code: any = new URLSearchParams(window.location.search).get('oobCode');\r\n        auth.confirmPasswordReset(code, data.newPassword).catch(err => { return console.log(err) });\r\n    };\r\n\r\n    const newPassword = useRef({});\r\n    newPassword.current = watch(\"newPassword\", \"\");\r\n\r\n    const history = useHistory();\r\n\r\n    {/*For alert */}\r\n    const [resetPasswordSuccess, setResetPasswordSuccess] = useState(false);\r\n    const [resetPasswordFail, setResetPasswordFail] = useState(false);\r\n\r\n    const displayAlert = () => {\r\n        const newPassword = getValues(\"newPassword\");\r\n        const confirmNewPassword = getValues(\"confirmNewPassword\");\r\n        if ((newPassword !== \"\" || confirmNewPassword !== \"\") && (confirmNewPassword === newPassword)){\r\n            setResetPasswordSuccess(true);\r\n            return console.log(\"Match\");\r\n        }\r\n        else {\r\n            setResetPasswordFail(true);\r\n            return console.log(\"Error\");\r\n        }\r\n    };\r\n\r\n    const proceedToLogin = () => {\r\n        setResetPasswordSuccess(false);\r\n        history.push(\"/login\");\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IonAlert\r\n                isOpen={resetPasswordSuccess}\r\n                onDidDismiss={proceedToLogin}\r\n                cssClass='alertBox'\r\n                header={'Reset Password Successful'}\r\n                message={'Your password has been reset successfully. Please login again.'}\r\n                buttons={['Close']}\r\n             ></IonAlert>\r\n\r\n            <IonAlert\r\n                isOpen={resetPasswordFail}\r\n                onDidDismiss = {() => setResetPasswordFail(false)}\r\n                cssClass='alertBox'\r\n                header={'Error'}\r\n                message={'Please fill up the required fields first!'}\r\n                buttons={['Okay']}\r\n             ></IonAlert>\r\n\r\n            <IonPage>\r\n                <TopNav title=\"Reset Password\" route=\"/main\" backarrow={ true } hamburger = { false }/>\r\n\r\n                <IonContent fullscreen style={{display: \"flex\"}}>\r\n                    <IonGrid className=\"forgetPwdGrid\">\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <IonRow class=\"ion-justify-content-center\">\r\n                                <IonCol></IonCol>\r\n                                <IonCol size=\"6\" style={{textAlign: \"center\"}}>\r\n                                    <IonIcon id=\"shield_logo\" icon={shieldCheckmarkOutline} />\r\n                                </IonCol>\r\n                                <IonCol></IonCol>\r\n                            </IonRow>\r\n\r\n                            <IonRow>\r\n                                <IonCol></IonCol>\r\n                                <IonCol size=\"10\">\r\n                                    <IonList>\r\n                                    <p id=\"text1\"><b>Please enter your new password</b></p>\r\n                                    <IonItem>\r\n                                        <IonInput id=\"newPasswordID\" type=\"password\" placeholder=\"New Password\" name=\"newPassword\" ref={register({ required: true, minLength: 8, pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[.,/<>#^~`@$!%*?&])[A-Za-z\\d.,/<>#~`^@$!%*?&]{8,}$/ })}></IonInput>\r\n                                    </IonItem>\r\n                                    {errors.newPassword && errors.newPassword.type === \"required\" && <div className=\"errorMessage\">Please type your new password!</div>}\r\n                                    {errors.newPassword && errors.newPassword.type === \"minLength\" && <div className=\"errorMessage\">Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</div>}\r\n                                    {errors.newPassword && errors.newPassword.type === \"pattern\" && <div className=\"errorMessage\">Password has to be at least 8 characters and must contain 1 uppercase, 1 lowercase, 1 number and 1 special character</div>}\r\n                                \r\n                                    <IonItem>\r\n                                        <IonInput id=\"confirmNewPasswordID\" type=\"password\" placeholder=\"Confirm New Password\" name=\"confirmNewPassword\" ref={register({ required: true, validate: (value) => value === newPassword.current })}></IonInput>\r\n                                    </IonItem>\r\n                                    {errors.confirmNewPassword && errors.confirmNewPassword.type === \"required\" && <div className=\"errorMessage\">Please confirm your password!</div>}\r\n                                    {errors.confirmNewPassword && errors.confirmNewPassword.type === \"validate\" && <div className=\"errorMessage\">Passwords do not match!</div>}\r\n                                    \r\n                                    </IonList>\r\n                                </IonCol>\r\n                                <IonCol></IonCol>\r\n                            </IonRow>\r\n\r\n                            <IonRow class=\"ion-justify-content-center\" style={{marginTop:\"5%\"}}>\r\n                                <IonButton size=\"large\" id=\"resetPwdBtn\" type=\"submit\" onClick={displayAlert}>RESET PASSWORD</IonButton>\r\n                            </IonRow>\r\n                        </form>\r\n                    </IonGrid>\r\n                </IonContent>\r\n            </IonPage>\r\n    </React.Fragment>\r\n    );\r\n  };\r\n  \r\n  export default ForgetPassword3;"]},"metadata":{},"sourceType":"module"}