{"ast":null,"code":"import _toConsumableArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\BearBear\\\\Coding_Projects\\\\UOW-CSIT321 (FYP)\\\\FYP20S313-Mobile\\\\SIM-OpenHouse\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{IonAlert,IonBadge,IonButton,IonCol,IonContent,IonGrid,IonHeader,IonLabel,IonPage,IonPopover,IonRouterLink,IonRow,IonTitle,IonToolbar}from'@ionic/react';import React,{useState,useEffect}from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCheck,faFilter}from'@fortawesome/free-solid-svg-icons';import'../../css/Global.css';import'../../css/Study@SIMProgList.css';import TopNav from'../../components/TopNav';import CompareProgPopoverContent from'../../components/Study@SIM/CompareProgPopoverContent';import FilterPopoverContent from'../../components/FilterPopoverContent';import{db}from'../../firebase';var StudySIMProgList=function StudySIMProgList(props){console.log(props);var match=props.match;var _match$params=match.params,discipline=_match$params.discipline,category=_match$params.category;/* When page first load */useEffect(function(){/*Fetching Programmes Data from firestore*/var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(discipline,category){var programmes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:programmes=[];_context.next=3;return db.collection('TestProgrammes').where(\"discipline\",\"array-contains\",discipline).where(\"academicLevel\",'==',category).get().then(function(snapshot){snapshot.docs.forEach(function(doc){var data=doc.data();programmes.push(data);console.log(\"programme retrieved \"+data);});setProgrammes(programmes);}).catch(function(error){return console.log(error);});case 3:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(_x,_x2){return _ref.apply(this,arguments);};}();fetchData(discipline,category);var sessionList=window.sessionStorage.compareProgList?JSON.parse(window.sessionStorage.compareProgList):[];setCompareProgList(sessionList);},[]);var _useState=useState({mos:['fullPartTime','partTime','fullTime'],discipline:[discipline],uni:[],acadLvl:[category],entry:[],subDisc:[]}),_useState2=_slicedToArray(_useState,2),filterCondition=_useState2[0],setFilterCondition=_useState2[1];var onUpdateFilter=function onUpdateFilter(mosFilter,discFilter,uniFilter,acadLvlFilter,entryFilter,subDiscFilter){console.log(\"onUpdateFilter is fired\");console.log(\"Mos filter is \"+mosFilter);setFilterCondition(function(prevState){var filter=_objectSpread({},prevState);Object.keys(filter).map(function(key){if(key==='mos')filter[key]=mosFilter;if(key==='discipline')filter[key]=discFilter;if(key==='uni')filter[key]=uniFilter;if(key==='acadLvl')filter[key]=acadLvlFilter;if(key==='entry')filter[key]=entryFilter;if(key==='subDisc')filter[key]=subDiscFilter;});return filter;});};//programmes to be rendered and the comparepopover list\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),programmes=_useState4[0],setProgrammes=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),compareProgList=_useState6[0],setCompareProgList=_useState6[1];//To get the unique disciplines for rendering at the header\nvar allDisc=programmes.map(function(programme){return programme.discipline;});var disc=[];allDisc.map(function(data){return data.map(function(data){return disc.push(data);});});var uniqueDisc=_toConsumableArray(new Set(disc));//For storing the compare list into session\nuseEffect(function(){return function(){window.sessionStorage.setItem(\"compareProgList\",JSON.stringify(compareProgList));};},[compareProgList]);/* Adding programme for comparison - Need to be generated dynamically */var compareProgramme=function compareProgramme(programme){var newProgList=_toConsumableArray(compareProgList);var newProgID=programme.id;if(newProgList.length<3){if(newProgList.includes(programme)){var updatedProgList=newProgList.filter(function(existingProg){return existingProg.id!==newProgID;});setCompareProgList(updatedProgList);}else{newProgList.push(programme);setCompareProgList(newProgList);}}else{if(newProgList.includes(programme)){var _updatedProgList=newProgList.filter(function(existingProg){return existingProg.id!=newProgID;});setCompareProgList(_updatedProgList);}else{setShowCompareProgAlert(true);}}};var filterProgrammes=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(condition){var initialList,filteredList,segmentFilter;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(\"in filterprogrammes \"+condition);initialList=[];filteredList=[];segmentFilter=[];console.log(\"In filterProgrammes, inputs:\"+JSON.stringify(condition));_context2.next=7;return db.collection('TestProgrammes').get().then(function(snapshot){snapshot.docs.forEach(function(doc){var data=doc.data();initialList.push(data);});});case 7:console.log(initialList.length+JSON.stringify(initialList));Object.entries(condition).map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],value=_ref4[1];if(key==='mos'){if(value.length<3&&value.length>0){value.forEach(function(value){if(value==='fullPartTime'){segmentFilter=initialList.filter(function(programme){return programme.modeOfStudy.fullTime&&programme.modeOfStudy.partTime;});console.log(\"filtering full and part time\"+segmentFilter.length);filteredList=filteredList.concat(segmentFilter);console.log(\"Current filtered list\"+filteredList.length+JSON.stringify(filteredList));}if(value==='fullTime'){segmentFilter=initialList.filter(function(programme){return programme.modeOfStudy.fullTime&&!programme.modeOfStudy.partTime;});console.log(\"filtering full time\"+segmentFilter.length);filteredList=filteredList.concat(segmentFilter);}if(value==='partTime'){segmentFilter=initialList.filter(function(programme){return!programme.modeOfStudy.fullTime&&programme.modeOfStudy.partTime;});console.log(\"filtering part time\"+segmentFilter.length);filteredList=filteredList.concat(segmentFilter);}});}else if(value.length===0||value.length===3){filteredList=initialList;}}else if(key==='discipline'){var discFiltered=[];if(value.length>0&&value.length<=4){console.log(\"Entered discipline filter\");value.forEach(function(value){segmentFilter=filteredList.filter(function(programme){return programme.discipline.includes(value);});console.log(\"filtering discipline\"+value+segmentFilter.length+JSON.stringify(segmentFilter));discFiltered=discFiltered.concat(segmentFilter);});filteredList=discFiltered;}}else if(key==='uni'){var uniFiltered=[];if(value.length>0){value.forEach(function(value){segmentFilter=filteredList.filter(function(programme){return programme.awardedBy==value;});console.log(\"filtering uni\"+value+segmentFilter.length+JSON.stringify(segmentFilter));uniFiltered=uniFiltered.concat(segmentFilter);// console.log(\"current list\" + JSON.stringify(filteredList))\n});filteredList=uniFiltered;}}else if(key==='acadLvl'){var acadFiltered=[];if(value.length>0){value.forEach(function(value){segmentFilter=filteredList.filter(function(programme){return programme.academicLevel===value;});console.log(\"filtering acadLvl\"+value+segmentFilter.length+JSON.stringify(segmentFilter));acadFiltered=acadFiltered.concat(segmentFilter);});filteredList=acadFiltered;}}else if(key==='entry'){var entryFiltered=[];if(value.length>0){value.forEach(function(value){if(value==='aLevel'){segmentFilter=filteredList.filter(function(programme){return programme.entryQualifications.aLevel;});console.log(\"Filering \"+value+segmentFilter.length+JSON.stringify(segmentFilter));entryFiltered=entryFiltered.concat(segmentFilter);}else if(value==='oLevel'){segmentFilter=filteredList.filter(function(programme){return programme.entryQualifications.oLevel;});console.log(\"Filering \"+value+segmentFilter.length+JSON.stringify(segmentFilter));entryFiltered=entryFiltered.concat(segmentFilter);}else if(value==='diploma'){segmentFilter=filteredList.filter(function(programme){return programme.entryQualifications.diploma;});console.log(\"Filering \"+value+segmentFilter.length+JSON.stringify(segmentFilter));entryFiltered=entryFiltered.concat(segmentFilter);}else if(value==='degree'){segmentFilter=filteredList.filter(function(programme){return programme.entryQualifications.degree;});console.log(\"Filering \"+value+segmentFilter.length+JSON.stringify(segmentFilter));entryFiltered=entryFiltered.concat(segmentFilter);}});filteredList=entryFiltered;}}else if(key==='subDisc'){var subDiscFiltered=[];if(value.length>0){value.forEach(function(value){segmentFilter=filteredList.filter(function(programme){return programme.subDiscipline.includes(value);});console.log(\"Filering subDisc\"+value+segmentFilter.length+JSON.stringify(segmentFilter));subDiscFiltered=subDiscFiltered.concat(segmentFilter);});filteredList=subDiscFiltered;}}}//newList.filter(programme=>{return programme.modeOfStudy})\n);console.log(\"New List are \"+filteredList.length+JSON.stringify(filteredList));setProgrammes(filteredList);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function filterProgrammes(_x3){return _ref2.apply(this,arguments);};}();/*To remove selected programmes in comparePopOver */var removeProg=function removeProg(programme){var newProgList=_toConsumableArray(compareProgList);var newProgID=programme.id;var updatedProgList=newProgList.filter(function(programme){return programme.id!==newProgID;});setCompareProgList(updatedProgList);};/*To remove all selected programmes in comparePopOver */var removeAllProg=function removeAllProg(programmes){var newProgList=_toConsumableArray(compareProgList);var updatedProgList=newProgList.filter(function(programme){return programme.id==='';});setCompareProgList(updatedProgList);};/* Display Compare Prog Popover */var _useState7=useState({open:false,event:undefined}),_useState8=_slicedToArray(_useState7,2),showCompareProgPopover=_useState8[0],setShowCompareProgPopover=_useState8[1];/* \"If no prog is added to compare\" Alert */var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showCompareProgAlert=_useState10[0],setShowCompareProgAlert=_useState10[1];/* Display Filter Menu Popover */var _useState11=useState({open:false,event:undefined}),_useState12=_slicedToArray(_useState11,2),showProgCourseFilterPopover=_useState12[0],setShowProgCourseFilterPopover=_useState12[1];useEffect(function(){filterProgrammes(filterCondition);},[filterCondition]);return/*#__PURE__*/React.createElement(React.Fragment,null,console.log(\"disc are\"+disc+disc.length),console.log(\"uniqueDisc are\"+uniqueDisc),/*#__PURE__*/React.createElement(IonAlert,{isOpen:showCompareProgAlert,onDidDismiss:function onDidDismiss(){return setShowCompareProgAlert(false);},cssClass:\"alertBox\",mode:\"md\",message:'You may compare up to 3 programmes at a time by tapping on the Compare button of the programme(s).',buttons:['OK']}),/*#__PURE__*/React.createElement(IonPage,null,/*#__PURE__*/React.createElement(IonHeader,null,/*#__PURE__*/React.createElement(TopNav,{title:\"Study@SIM\",route:\"/u/study@SIMMain\",backarrow:true,hamburger:true}),/*#__PURE__*/React.createElement(IonToolbar,{id:\"studySIMProgListHeaderToolbar\"},/*#__PURE__*/React.createElement(IonGrid,{style:{padding:\"0\"}},/*#__PURE__*/React.createElement(IonRow,{id:\"studySIMProgListHeaderRow\",class:\"ion-align-items-center\"},/*#__PURE__*/React.createElement(IonCol,{size:\"6\",sizeSm:\"6\",class:\"ion-text-left\",className:\"studySIMProgListCol\",style:{paddingLeft:\"3%\"}},/*#__PURE__*/React.createElement(IonTitle,{className:\"studyProgListTitle\"},uniqueDisc.length===1?uniqueDisc.map(function(disc){return/*#__PURE__*/React.createElement(\"div\",{key:disc,className:\"ion-text-wrap\"},disc);}):'')),/*#__PURE__*/React.createElement(IonCol,{size:\"4\",sizeSm:\"4\",class:\"ion-text-right\",className:\"studySIMProgListCol\"},/*#__PURE__*/React.createElement(IonButton,{id:\"compareBtn\",fill:\"clear\",onClick:function onClick(e){if(compareProgList.length<1||compareProgList.length>3){setShowCompareProgAlert(true);}else{setShowCompareProgPopover({open:true,event:e.nativeEvent});}}},/*#__PURE__*/React.createElement(IonLabel,{className:\"compareLabel\"},\"Compare\"),/*#__PURE__*/React.createElement(IonBadge,{id:\"compareBadge\"},compareProgList.length))),/*#__PURE__*/React.createElement(IonCol,{size:\"2\",sizeSm:\"2\",class:\"ion-text-center\",className:\"studySIMProgListCol\"},/*#__PURE__*/React.createElement(IonButton,{id:\"filterBtn\",fill:\"clear\",onClick:function onClick(e){setShowProgCourseFilterPopover({open:true,event:e.nativeEvent});}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{className:\"filterIcon\",size:\"lg\",icon:faFilter}))))))),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true,id:\"studySIMProgListContent\"},/*#__PURE__*/React.createElement(IonGrid,{id:\"studySIMProgListGrid\"},programmes?programmes.map(function(programme){return/*#__PURE__*/React.createElement(\"div\",{key:programme.id},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IonRow,{className:\"studySIMProgListRow\",class:\"ion-align-items-center\"},/*#__PURE__*/React.createElement(IonCol,{size:\"4\",sizeSm:\"4\",class:\"ion-text-center\"},/*#__PURE__*/React.createElement(\"img\",{src:programme.uniLogo,className:\"studyProgUniImg\"})),/*#__PURE__*/React.createElement(IonCol,{size:\"8\",sizeSm:\"8\",className:\"studySIMProgListColDetails\",class:\"ion-text-left\"},/*#__PURE__*/React.createElement(IonRow,{className:\"progCourseRow\"},/*#__PURE__*/React.createElement(IonRouterLink,{id:\"progCourseTitleLink\",href:\"/u/study@SIMMain/Study@SIMProgInfo/\".concat(programme.id,\"/\").concat(discipline,\"/\").concat(category)},/*#__PURE__*/React.createElement(IonTitle,{className:\"progCourseTitle\"},/*#__PURE__*/React.createElement(\"div\",{className:\"ion-text-wrap\"},programme.programmeTitle)))),/*#__PURE__*/React.createElement(IonRow,{className:\"progCourseRow\"},/*#__PURE__*/React.createElement(IonCol,{size:\"4\",sizeSm:\"4\",class:\"ion-text-left\",className:\"progCourseAwardingUniCol\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"progCourseAwardingUniLabel\"},/*#__PURE__*/React.createElement(\"div\",{className:\"ion-text-wrap\"},\"Awarded by:\"))),/*#__PURE__*/React.createElement(IonCol,{size:\"8\",sizeSm:\"8\",class:\"ion-text-left\",className:\"progCourseAwardingUniCol\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"progCourseAwardingUniName\"},/*#__PURE__*/React.createElement(\"div\",{className:\"ion-text-wrap\"},programme.awardedBy)))),/*#__PURE__*/React.createElement(IonRow,{className:\"progCompareBtnRow\"},/*#__PURE__*/React.createElement(IonCol,{size:\"12\",sizeSm:\"12\",class:\"ion-text-right\",className:\"progCompareBtnCol\"},compareProgList.includes(programme)?/*#__PURE__*/React.createElement(IonButton,{className:\"progCompareBtnSelected\",size:\"small\",type:\"submit\",onClick:function onClick(e){return compareProgramme(programme);}},\"Compared\",/*#__PURE__*/React.createElement(FontAwesomeIcon,{style:{paddingLeft:\"3%\"},icon:faCheck})):/*#__PURE__*/React.createElement(IonButton,{className:\"progCompareBtn\",size:\"small\",type:\"submit\",onClick:function onClick(e){return compareProgramme(programme);}},\"Compare\")))))));}):''),/*#__PURE__*/React.createElement(IonPopover,{id:\"compareProgPopover\",cssClass:\"compareProgPopover\",isOpen:showCompareProgPopover.open,event:showCompareProgPopover.event,onDidDismiss:function onDidDismiss(e){return setShowCompareProgPopover({open:false,event:undefined});}},/*#__PURE__*/React.createElement(CompareProgPopoverContent,{compareProgList:compareProgList,removeProg:removeProg,removeAllProg:removeAllProg,viewResults:function viewResults(){return console.log('Add viewResults function here');},href:\"/u/study@SIMMain/\".concat(props.match.params.discipline,\"/\").concat(props.match.params.category,\"/courseComparator\")})),/*#__PURE__*/React.createElement(IonPopover,{id:\"progCourseFilterPopover\",cssClass:\"progCourseFilterPopover\",isOpen:showProgCourseFilterPopover.open,event:showProgCourseFilterPopover.event,onDidDismiss:function onDidDismiss(e){return setShowProgCourseFilterPopover({open:false,event:undefined});}},/*#__PURE__*/React.createElement(FilterPopoverContent,{filterFunction:filterProgrammes,programmes:programmes,filterFor:\"study@SIM\",filterCondition:filterCondition,onUpdateFilter:onUpdateFilter,discipline:discipline,category:category,setState:\"\"})))));};export default StudySIMProgList;","map":{"version":3,"sources":["D:/BearBear/Coding_Projects/UOW-CSIT321 (FYP)/FYP20S313-Mobile/SIM-OpenHouse/src/pages/Study@SIM/Study@SIMProgList.tsx"],"names":["IonAlert","IonBadge","IonButton","IonCol","IonContent","IonGrid","IonHeader","IonLabel","IonPage","IonPopover","IonRouterLink","IonRow","IonTitle","IonToolbar","React","useState","useEffect","FontAwesomeIcon","faCheck","faFilter","TopNav","CompareProgPopoverContent","FilterPopoverContent","db","StudySIMProgList","props","console","log","match","params","discipline","category","fetchData","programmes","collection","where","get","then","snapshot","docs","forEach","doc","data","push","setProgrammes","catch","error","sessionList","window","sessionStorage","compareProgList","JSON","parse","setCompareProgList","mos","uni","acadLvl","entry","subDisc","filterCondition","setFilterCondition","onUpdateFilter","mosFilter","discFilter","uniFilter","acadLvlFilter","entryFilter","subDiscFilter","prevState","filter","Object","keys","map","key","allDisc","programme","disc","uniqueDisc","Set","setItem","stringify","compareProgramme","newProgList","newProgID","id","length","includes","updatedProgList","existingProg","setShowCompareProgAlert","filterProgrammes","condition","initialList","filteredList","segmentFilter","entries","value","modeOfStudy","fullTime","partTime","concat","discFiltered","uniFiltered","awardedBy","acadFiltered","academicLevel","entryFiltered","entryQualifications","aLevel","oLevel","diploma","degree","subDiscFiltered","subDiscipline","removeProg","removeAllProg","open","event","undefined","showCompareProgPopover","setShowCompareProgPopover","showCompareProgAlert","showProgCourseFilterPopover","setShowProgCourseFilterPopover","padding","paddingLeft","e","nativeEvent","uniLogo","programmeTitle"],"mappings":"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","sourcesContent":["import { IonAlert, IonBadge, IonButton, IonCol, IonContent, IonGrid, IonHeader, IonLabel, IonPage, IonPopover, IonRouterLink, IonRow, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faFilter } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport '../../css/Global.css';\r\nimport '../../css/Study@SIMProgList.css';\r\nimport TopNav from '../../components/TopNav';\r\nimport CompareProgPopoverContent from '../../components/Study@SIM/CompareProgPopoverContent';\r\nimport FilterPopoverContent from '../../components/FilterPopoverContent';\r\nimport { db } from '../../firebase';\r\nimport { Programme, ProgrammeFilter } from '../../modules/map';\r\n\r\ninterface StudySIMProgList_Props extends RouteComponentProps<{\r\n    discipline: string;\r\n    category: string;\r\n}> { }\r\n\r\ninterface myProps {\r\n    compareProgList: Programme[],\r\n    onCompareProgListChange: (programmes: Programme[]) => void\r\n}\r\nconst StudySIMProgList: React.FC<myProps & StudySIMProgList_Props> = (props) => {\r\n\r\n    console.log(props);\r\n    const { match } = props;\r\n    const {params : {discipline, category}} = match\r\n    \r\n\r\n    /* When page first load */\r\n    useEffect(() => {\r\n        /*Fetching Programmes Data from firestore*/\r\n        const fetchData = async (discipline: string, category: string) => {\r\n            const programmes: any = []\r\n            await db.collection('TestProgrammes')\r\n                .where(\"discipline\", \"array-contains\", discipline)\r\n                .where(\"academicLevel\", '==', category)\r\n                .get()\r\n                .then((snapshot: any) => {\r\n                    snapshot.docs.forEach((doc: any) => {\r\n                        const data = doc.data()\r\n                        programmes.push(data)\r\n                        console.log(\"programme retrieved \" + data)\r\n                    })\r\n                    setProgrammes(programmes)\r\n                }).catch((error) => console.log(error));\r\n\r\n        }\r\n\r\n        fetchData(discipline, category)\r\n\r\n        const sessionList: Programme[] = window.sessionStorage.compareProgList ? JSON.parse(window.sessionStorage.compareProgList) : [];\r\n        setCompareProgList(sessionList);\r\n    }, [])\r\n\r\n\r\n    const [filterCondition, setFilterCondition] = useState<ProgrammeFilter>({\r\n        mos: ['fullPartTime', 'partTime', 'fullTime'],\r\n        discipline: [discipline],\r\n        uni: [],\r\n        acadLvl: [category],\r\n        entry: [],\r\n        subDisc: []\r\n    })\r\n\r\n    const onUpdateFilter = (mosFilter: string[], discFilter: string[], uniFilter: string[], acadLvlFilter: string[], entryFilter: string[], subDiscFilter: string[]) => {\r\n        console.log(\"onUpdateFilter is fired\")\r\n        console.log(\"Mos filter is \"+ mosFilter)\r\n        setFilterCondition(prevState => {\r\n            let filter = { ...prevState };\r\n            Object.keys(filter).map(key => {\r\n                if (key === 'mos')\r\n                    filter[key] = mosFilter;\r\n                if (key === 'discipline')\r\n                    filter[key] = discFilter;\r\n                if (key === 'uni')\r\n                    filter[key] = uniFilter;\r\n                if (key === 'acadLvl')\r\n                    filter[key] = acadLvlFilter;\r\n                if (key === 'entry')\r\n                    filter[key] = entryFilter;\r\n                if (key === 'subDisc')\r\n                    filter[key] = subDiscFilter;\r\n            })\r\n            return filter;\r\n        })\r\n    }\r\n\r\n    //programmes to be rendered and the comparepopover list\r\n    const [programmes, setProgrammes] = useState<Programme[]>([])\r\n    const [compareProgList, setCompareProgList] = useState<Programme[]>([])\r\n\r\n    //To get the unique disciplines for rendering at the header\r\n    const allDisc = programmes.map(programme => programme.discipline)\r\n    const disc: string[] = []\r\n    allDisc.map(data => data.map(data => disc.push(data)))\r\n    let uniqueDisc: string[] = [...new Set(disc)]\r\n\r\n    //For storing the compare list into session\r\n    useEffect(() => {\r\n        return () => {\r\n            window.sessionStorage.setItem(\"compareProgList\", JSON.stringify(compareProgList));\r\n        }\r\n    }, [compareProgList])\r\n\r\n    /* Adding programme for comparison - Need to be generated dynamically */\r\n    const compareProgramme = (programme: Programme) => {\r\n        const newProgList = [...compareProgList]\r\n        const newProgID = programme.id\r\n\r\n        if (newProgList.length < 3) {\r\n            if (newProgList.includes(programme)) {\r\n                const updatedProgList = newProgList.filter(existingProg => { return existingProg.id !== newProgID })\r\n                setCompareProgList(updatedProgList)\r\n            }\r\n            else {\r\n                newProgList.push(programme)\r\n                setCompareProgList(newProgList)\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (newProgList.includes(programme)) {\r\n                const updatedProgList = newProgList.filter(existingProg => { return existingProg.id != newProgID })\r\n                setCompareProgList(updatedProgList)\r\n            }\r\n            else {\r\n                setShowCompareProgAlert(true);\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    const filterProgrammes = async (condition: ProgrammeFilter) => {\r\n        console.log(\"in filterprogrammes \"+ condition)\r\n        const initialList: Programme[] = []\r\n        let filteredList: Programme[] = []\r\n        let segmentFilter: Programme[] = []\r\n        console.log(\"In filterProgrammes, inputs:\" + JSON.stringify(condition))\r\n        await db.collection('TestProgrammes')\r\n            .get()\r\n            .then(snapshot => {\r\n                snapshot.docs.forEach((doc: any) => {\r\n                    const data = doc.data()\r\n                    initialList.push(data)\r\n                })\r\n            })\r\n        console.log(initialList.length + JSON.stringify(initialList))\r\n        Object.entries(condition).map(([key, value]) => {\r\n            if (key === 'mos') {\r\n                if (value.length < 3 && value.length > 0) {\r\n                    value.forEach((value: string) => {\r\n                        if (value === 'fullPartTime') {\r\n                            segmentFilter = initialList.filter(programme => programme.modeOfStudy.fullTime && programme.modeOfStudy.partTime)\r\n                            console.log(\"filtering full and part time\" + segmentFilter.length)\r\n                            filteredList = filteredList.concat(segmentFilter)\r\n                            console.log(\"Current filtered list\" + filteredList.length + JSON.stringify(filteredList))\r\n\r\n\r\n                        }\r\n                        if (value === 'fullTime') {\r\n                            segmentFilter = initialList.filter(programme => programme.modeOfStudy.fullTime && !programme.modeOfStudy.partTime)\r\n                            console.log(\"filtering full time\" + segmentFilter.length)\r\n                            filteredList = filteredList.concat(segmentFilter)\r\n\r\n                        }\r\n                        if (value === 'partTime') {\r\n                            segmentFilter = initialList.filter(programme => !programme.modeOfStudy.fullTime && programme.modeOfStudy.partTime)\r\n                            console.log(\"filtering part time\" + segmentFilter.length)\r\n                            filteredList = filteredList.concat(segmentFilter)\r\n\r\n                        }\r\n                    })\r\n                }\r\n                else if (value.length === 0 || value.length === 3) {\r\n                    filteredList = initialList\r\n                }\r\n            }\r\n            else if (key === 'discipline') {\r\n                let discFiltered: Programme[] = []\r\n                if (value.length > 0 && value.length <= 4) {\r\n                    console.log(\"Entered discipline filter\")\r\n                    value.forEach((value: string) => {\r\n                        segmentFilter = filteredList.filter(programme => programme.discipline.includes(value))\r\n                        console.log(\"filtering discipline\" + value + segmentFilter.length + JSON.stringify(segmentFilter))\r\n                        discFiltered = discFiltered.concat(segmentFilter)\r\n                    })\r\n                    filteredList = discFiltered\r\n                }\r\n\r\n            }\r\n\r\n            else if (key === 'uni') {\r\n                let uniFiltered: Programme[] = []\r\n                if (value.length > 0) {\r\n                    value.forEach((value: string) => {\r\n                        segmentFilter = filteredList.filter(programme => programme.awardedBy == value)\r\n                        console.log(\"filtering uni\" + value + segmentFilter.length + JSON.stringify(segmentFilter))\r\n                        uniFiltered = uniFiltered.concat(segmentFilter)\r\n                        // console.log(\"current list\" + JSON.stringify(filteredList))\r\n                    })\r\n                    filteredList = uniFiltered\r\n                }\r\n            }\r\n            else if (key === 'acadLvl') {\r\n                let acadFiltered: Programme[] = []\r\n                if (value.length > 0) {\r\n                    value.forEach((value: string) => {\r\n                        segmentFilter = filteredList.filter(programme => programme.academicLevel === value)\r\n                        console.log(\"filtering acadLvl\" + value + segmentFilter.length + JSON.stringify(segmentFilter))\r\n                        acadFiltered = acadFiltered.concat(segmentFilter)\r\n                    })\r\n                    filteredList = acadFiltered\r\n                }\r\n            }\r\n\r\n            else if (key === 'entry') {\r\n                let entryFiltered: Programme[] = []\r\n                if (value.length > 0) {\r\n                    value.forEach((value: string) => {\r\n                        if (value === 'aLevel') {\r\n                            segmentFilter = filteredList.filter(programme => programme.entryQualifications.aLevel)\r\n                            console.log(\"Filering \" + value + segmentFilter.length + JSON.stringify(segmentFilter))\r\n                            entryFiltered = entryFiltered.concat(segmentFilter)\r\n                        }\r\n                        else if (value === 'oLevel') {\r\n                            segmentFilter = filteredList.filter(programme => programme.entryQualifications.oLevel)\r\n                            console.log(\"Filering \" + value + segmentFilter.length + JSON.stringify(segmentFilter))\r\n                            entryFiltered = entryFiltered.concat(segmentFilter)\r\n                        }\r\n                        else if (value === 'diploma') {\r\n                            segmentFilter = filteredList.filter(programme => programme.entryQualifications.diploma)\r\n                            console.log(\"Filering \" + value + segmentFilter.length + JSON.stringify(segmentFilter))\r\n                            entryFiltered = entryFiltered.concat(segmentFilter)\r\n                        }\r\n                        else if (value === 'degree') {\r\n                            segmentFilter = filteredList.filter(programme => programme.entryQualifications.degree)\r\n                            console.log(\"Filering \" + value + segmentFilter.length + JSON.stringify(segmentFilter))\r\n                            entryFiltered = entryFiltered.concat(segmentFilter)\r\n                        }\r\n                    })\r\n                    filteredList = entryFiltered\r\n                }\r\n            }\r\n            else if (key === 'subDisc') {\r\n                let subDiscFiltered: Programme[] = []\r\n                if (value.length > 0) {\r\n                    value.forEach((value: string) => {\r\n                        segmentFilter = filteredList.filter(programme => programme.subDiscipline.includes(value))\r\n                        console.log(\"Filering subDisc\" + value + segmentFilter.length + JSON.stringify(segmentFilter))\r\n                        subDiscFiltered = subDiscFiltered.concat(segmentFilter)\r\n                    })\r\n                    filteredList = subDiscFiltered\r\n\r\n                }\r\n            }\r\n        }\r\n            //newList.filter(programme=>{return programme.modeOfStudy})\r\n        )\r\n        console.log(\"New List are \" + filteredList.length + JSON.stringify(filteredList))\r\n        setProgrammes(filteredList)\r\n\r\n    }\r\n\r\n    /*To remove selected programmes in comparePopOver */\r\n    const removeProg = (programme: Programme) => {\r\n        const newProgList = [...compareProgList]\r\n        const newProgID = programme.id\r\n        const updatedProgList = newProgList.filter(programme => { return programme.id !== newProgID })\r\n        setCompareProgList(updatedProgList)\r\n\r\n    }\r\n    /*To remove all selected programmes in comparePopOver */\r\n    const removeAllProg = (programmes: Programme[]) => {\r\n        const newProgList = [...compareProgList]\r\n        const updatedProgList = newProgList.filter(programme => { return programme.id === '' })\r\n        setCompareProgList(updatedProgList)\r\n\r\n    }\r\n\r\n\r\n    /* Display Compare Prog Popover */\r\n    const [showCompareProgPopover, setShowCompareProgPopover] = useState<{ open: boolean, event: Event | undefined }>({\r\n        open: false,\r\n        event: undefined,\r\n    });\r\n\r\n    /* \"If no prog is added to compare\" Alert */\r\n    const [showCompareProgAlert, setShowCompareProgAlert] = useState(false);\r\n\r\n    /* Display Filter Menu Popover */\r\n    const [showProgCourseFilterPopover, setShowProgCourseFilterPopover] = useState<{ open: boolean, event: Event | undefined }>({\r\n        open: false,\r\n        event: undefined,\r\n    });\r\n\r\n    useEffect(()=>{\r\n        filterProgrammes(filterCondition)\r\n    },[filterCondition])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {console.log(\"disc are\" + disc + disc.length)}\r\n            {console.log(\"uniqueDisc are\" + uniqueDisc)}\r\n            <IonAlert\r\n                isOpen={showCompareProgAlert}\r\n                onDidDismiss={() => setShowCompareProgAlert(false)}\r\n                cssClass='alertBox'\r\n                mode='md'\r\n                message={'You may compare up to 3 programmes at a time by tapping on the Compare button of the programme(s).'}\r\n                buttons={['OK']}\r\n            ></IonAlert>\r\n\r\n\r\n            <IonPage>\r\n                <IonHeader>\r\n                    <TopNav title=\"Study@SIM\" route='/u/study@SIMMain' backarrow={true} hamburger={true} />\r\n\r\n                    <IonToolbar id=\"studySIMProgListHeaderToolbar\">\r\n                        <IonGrid style={{ padding: \"0\" }}>\r\n                            <IonRow id=\"studySIMProgListHeaderRow\" class=\"ion-align-items-center\">\r\n                                <IonCol size=\"6\" sizeSm=\"6\" class=\"ion-text-left\" className=\"studySIMProgListCol\" style={{ paddingLeft: \"3%\" }}>\r\n                                    <IonTitle className=\"studyProgListTitle\">\r\n                                        {uniqueDisc.length === 1 ? uniqueDisc.map(disc => {\r\n                                            return (<div key={disc} className=\"ion-text-wrap\">{disc}</div>)\r\n                                        }) : ''}\r\n\r\n                                    </IonTitle>\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"4\" sizeSm=\"4\" class=\"ion-text-right\" className=\"studySIMProgListCol\">\r\n                                    <IonButton id=\"compareBtn\" fill=\"clear\" onClick={(e) => {\r\n                                        if (compareProgList.length < 1 || compareProgList.length > 3) {\r\n                                            setShowCompareProgAlert(true);\r\n                                        } else {\r\n                                            setShowCompareProgPopover({ open: true, event: e.nativeEvent })\r\n                                        }\r\n                                    }\r\n                                    }>\r\n                                        <IonLabel className=\"compareLabel\">Compare</IonLabel>\r\n                                        <IonBadge id=\"compareBadge\">{compareProgList.length}</IonBadge>\r\n                                    </IonButton>\r\n                                </IonCol>\r\n\r\n                                <IonCol size=\"2\" sizeSm=\"2\" class=\"ion-text-center\" className=\"studySIMProgListCol\">\r\n                                    <IonButton id=\"filterBtn\" fill=\"clear\" onClick={(e) => {\r\n                                        setShowProgCourseFilterPopover({ open: true, event: e.nativeEvent })\r\n                                    }\r\n                                    }>\r\n                                        <FontAwesomeIcon className=\"filterIcon\" size=\"lg\" icon={faFilter} />\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>\r\n                    </IonToolbar>\r\n\r\n                </IonHeader>\r\n\r\n                <IonContent fullscreen={true} id=\"studySIMProgListContent\">\r\n                    <IonGrid id=\"studySIMProgListGrid\">\r\n\r\n                        {/* Programme List */}\r\n                        {programmes ?\r\n                            programmes.map((programme: Programme) => {\r\n                                return (\r\n                                    <div key={programme.id}>\r\n                                        <>\r\n                                            <IonRow className=\"studySIMProgListRow\" class=\"ion-align-items-center\">\r\n                                                <IonCol size=\"4\" sizeSm=\"4\" class=\"ion-text-center\">\r\n                                                    <img src={programme.uniLogo} className=\"studyProgUniImg\"></img>\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"8\" sizeSm=\"8\" className=\"studySIMProgListColDetails\" class=\"ion-text-left\">\r\n                                                    {/* Programme Title */}\r\n                                                    <IonRow className=\"progCourseRow\">\r\n                                                        {/* <IonRouterLink id=\"progCourseTitleLink\" href={`/u/study@SIMMain/Study@SIMProgInfo/${programme.id}`}> */}\r\n                                                        <IonRouterLink id=\"progCourseTitleLink\" href={`/u/study@SIMMain/Study@SIMProgInfo/${programme.id}/${discipline}/${category}`}>\r\n                                                            <IonTitle className=\"progCourseTitle\">\r\n                                                                <div className=\"ion-text-wrap\">{programme.programmeTitle}</div>\r\n                                                            </IonTitle>\r\n                                                        </IonRouterLink>\r\n                                                    </IonRow>\r\n\r\n                                                    {/* Awarding Uni */}\r\n                                                    <IonRow className=\"progCourseRow\">\r\n                                                        <IonCol size=\"4\" sizeSm=\"4\" class=\"ion-text-left\" className=\"progCourseAwardingUniCol\">\r\n                                                            <IonLabel className=\"progCourseAwardingUniLabel\">\r\n                                                                <div className=\"ion-text-wrap\">Awarded by:</div>\r\n                                                            </IonLabel>\r\n                                                        </IonCol>\r\n\r\n                                                        <IonCol size=\"8\" sizeSm=\"8\" class=\"ion-text-left\" className=\"progCourseAwardingUniCol\">\r\n                                                            <IonLabel className=\"progCourseAwardingUniName\">\r\n                                                                <div className=\"ion-text-wrap\">{programme.awardedBy}</div>\r\n                                                            </IonLabel>\r\n                                                        </IonCol>\r\n                                                    </IonRow>\r\n\r\n                                                    <IonRow className=\"progCompareBtnRow\">\r\n                                                        <IonCol size=\"12\" sizeSm=\"12\" class=\"ion-text-right\" className=\"progCompareBtnCol\">\r\n                                                            {compareProgList.includes(programme) ?\r\n                                                                <IonButton className=\"progCompareBtnSelected\" size=\"small\" type=\"submit\" onClick={e => compareProgramme(programme)}>Compared\r\n                                                    <FontAwesomeIcon style={{ paddingLeft: \"3%\" }} icon={faCheck} />\r\n                                                                </IonButton>\r\n                                                                :\r\n                                                                (<IonButton className=\"progCompareBtn\" size=\"small\" type=\"submit\" onClick={e => compareProgramme(programme)}>Compare</IonButton>)\r\n                                                            }\r\n\r\n                                                        </IonCol>\r\n                                                    </IonRow>\r\n                                                </IonCol>\r\n                                            </IonRow>\r\n                                        </></div>\r\n                                )\r\n                            })\r\n\r\n                            : ''\r\n                        }\r\n\r\n                    </IonGrid>\r\n\r\n                    {/* Compare Programme Popover */}\r\n                    <IonPopover id=\"compareProgPopover\"\r\n                        cssClass='compareProgPopover'\r\n                        isOpen={showCompareProgPopover.open}\r\n                        event={showCompareProgPopover.event}\r\n                        onDidDismiss={e => setShowCompareProgPopover({ open: false, event: undefined })}\r\n                    >\r\n                        <CompareProgPopoverContent compareProgList={compareProgList} removeProg={removeProg} removeAllProg={removeAllProg} viewResults={() => (console.log('Add viewResults function here'))}\r\n                            href={`/u/study@SIMMain/${props.match.params.discipline}/${props.match.params.category}/courseComparator`} />\r\n\r\n                    </IonPopover>\r\n\r\n\r\n                    {/* Filter Programmes Popover */}\r\n                    <IonPopover id=\"progCourseFilterPopover\"\r\n                        cssClass='progCourseFilterPopover'\r\n                        isOpen={showProgCourseFilterPopover.open}\r\n                        event={showProgCourseFilterPopover.event}\r\n                        onDidDismiss={e => setShowProgCourseFilterPopover({ open: false, event: undefined })}\r\n                    >\r\n                        <FilterPopoverContent filterFunction={filterProgrammes} programmes={programmes} filterFor={\"study@SIM\"} filterCondition={filterCondition} onUpdateFilter={onUpdateFilter} discipline={discipline} category={category} setState=\"\" />\r\n                    </IonPopover>\r\n                </IonContent>\r\n\r\n            </IonPage>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default StudySIMProgList;"]},"metadata":{},"sourceType":"module"}